using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace InteractPayroll
{
    public class clsInteractPayrollTriggers
    {
        public string tgr_Create_For_Timesheet_Break_Table(string triggerTableName)
        {
            string strPayCategoryType = "";
            string strDayTable = "";
            string strTimeSheetTable = "";
            string strBreakTable = "";
            string strDateField = "";
            string strTimeSheetOrBreak = "";

            if (triggerTableName == "EMPLOYEE_TIMESHEET_CURRENT"
            || triggerTableName == "EMPLOYEE_BREAK_CURRENT")
            {
                strPayCategoryType = "W";
                strDayTable = "EMPLOYEE_TIMESHEET_BREAK_DAY_CURRENT";

                strTimeSheetTable = "EMPLOYEE_TIMESHEET_CURRENT";
                strBreakTable = "EMPLOYEE_BREAK_CURRENT";

                if (triggerTableName == "EMPLOYEE_TIMESHEET_CURRENT")
                {
                    strDateField = "TIMESHEET_DATE";
                    strTimeSheetOrBreak = "TIMESHEET";
                }
                else
                {
                    strDateField = "BREAK_DATE";
                    strTimeSheetOrBreak = "BREAK";
                }
            }
            else
            {
                if (triggerTableName == "EMPLOYEE_TIME_ATTEND_TIMESHEET_CURRENT"
                || triggerTableName == "EMPLOYEE_TIME_ATTEND_BREAK_CURRENT")
                {
                    strPayCategoryType = "T";
                    strDayTable = "EMPLOYEE_TIME_ATTEND_TIMESHEET_BREAK_DAY_CURRENT";

                    strTimeSheetTable = "EMPLOYEE_TIME_ATTEND_TIMESHEET_CURRENT";
                    strBreakTable = "EMPLOYEE_TIME_ATTEND_BREAK_CURRENT";

                    if (triggerTableName == "EMPLOYEE_TIME_ATTEND_TIMESHEET_CURRENT")
                    {
                        strDateField = "TIMESHEET_DATE";
                        strTimeSheetOrBreak = "TIMESHEET";
                    }
                    else
                    {
                        strDateField = "BREAK_DATE";
                        strTimeSheetOrBreak = "BREAK";
                    }
                }
                else
                {
                    if (triggerTableName == "EMPLOYEE_SALARY_TIMESHEET_CURRENT"
                    || triggerTableName == "EMPLOYEE_SALARY_BREAK_CURRENT")
                    {
                        strPayCategoryType = "S";
                        strDayTable = "EMPLOYEE_SALARY_TIMESHEET_BREAK_DAY_CURRENT";

                        strTimeSheetTable = "EMPLOYEE_SALARY_TIMESHEET_CURRENT";
                        strBreakTable = "EMPLOYEE_SALARY_BREAK_CURRENT";

                        if (triggerTableName == "EMPLOYEE_SALARY_TIMESHEET_CURRENT")
                        {
                            strDateField = "TIMESHEET_DATE";
                            strTimeSheetOrBreak = "TIMESHEET";
                        }
                        else
                        {
                            strDateField = "BREAK_DATE";
                            strTimeSheetOrBreak = "BREAK";
                        }
                    }
                    else
                    {
                        return "Invalid Trigger Table Name";
                    }
                }
            }

            StringBuilder strQry = new StringBuilder();

            strQry.AppendLine("CREATE TRIGGER [dbo].[tgr_#TRIGGER_TABLE_NAME#_Maintain_#DAY_TABLE#_Table]");
            strQry.AppendLine("ON [dbo].[#TRIGGER_TABLE_NAME#]");
            strQry.AppendLine("FOR INSERT, UPDATE, DELETE");
            strQry.AppendLine("AS");
            strQry.AppendLine("--Version 1.6");
            strQry.AppendLine("");
            strQry.AppendLine("SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;");
            strQry.AppendLine("");
            strQry.AppendLine("DECLARE @Action AS char(1)");
            strQry.AppendLine("");
            strQry.AppendLine("IF EXISTS(SELECT * FROM INSERTED)");
            strQry.AppendLine("AND EXISTS(SELECT * FROM DELETED)");
            strQry.AppendLine("");
            strQry.AppendLine("    BEGIN");
            strQry.AppendLine("");
            strQry.AppendLine("    SET @Action = 'U'");
            strQry.AppendLine("");
            strQry.AppendLine("    END");
            strQry.AppendLine("");
            strQry.AppendLine("ELSE");
            strQry.AppendLine("");
            strQry.AppendLine("    IF EXISTS(SELECT * FROM INSERTED)");
            strQry.AppendLine("");
            strQry.AppendLine("        BEGIN");
            strQry.AppendLine("");
            strQry.AppendLine("        SET @Action = 'I'");
            strQry.AppendLine("");
            strQry.AppendLine("        INSERT INTO dbo.#DAY_TABLE#");
            strQry.AppendLine("       (COMPANY_NO");
            strQry.AppendLine("       ,EMPLOYEE_NO");
            strQry.AppendLine("       ,PAY_CATEGORY_NO");
            strQry.AppendLine("       ,TIMESHEET_DATE");
            strQry.AppendLine("       ,DAY_PAID_MINUTES");
            strQry.AppendLine("       ,BREAK_ACCUM_MINUTES)");
            strQry.AppendLine("");
            strQry.AppendLine("        SELECT DISTINCT");
            strQry.AppendLine("        I.COMPANY_NO");
            strQry.AppendLine("       ,I.EMPLOYEE_NO");
            strQry.AppendLine("       ,I.PAY_CATEGORY_NO");
            strQry.AppendLine("       ,I.#DATE_FIELD#");
            strQry.AppendLine("       ,0");
            strQry.AppendLine("       ,0");
            strQry.AppendLine("        FROM INSERTED I");
            strQry.AppendLine("");
            strQry.AppendLine("        LEFT JOIN dbo.#DAY_TABLE# ETBDC");
            strQry.AppendLine("        ON I.COMPANY_NO = ETBDC.COMPANY_NO");
            strQry.AppendLine("        AND I.EMPLOYEE_NO = ETBDC.EMPLOYEE_NO");
            strQry.AppendLine("        AND I.PAY_CATEGORY_NO = ETBDC.PAY_CATEGORY_NO");
            strQry.AppendLine("        AND I.#DATE_FIELD# = ETBDC.TIMESHEET_DATE");
            strQry.AppendLine("");
            strQry.AppendLine("        WHERE ETBDC.COMPANY_NO IS NULL");
            strQry.AppendLine("");
            strQry.AppendLine("        END");
            strQry.AppendLine("");
            strQry.AppendLine("    ELSE");
            strQry.AppendLine("");
            strQry.AppendLine("        IF EXISTS(SELECT * FROM DELETED)");
            strQry.AppendLine("");
            strQry.AppendLine("            BEGIN");
            strQry.AppendLine("");
            strQry.AppendLine("            SET @Action = 'D'");
            strQry.AppendLine("");
            strQry.AppendLine("            DELETE ETBDC");
            strQry.AppendLine("");
            strQry.AppendLine("            FROM dbo.#DAY_TABLE# ETBDC");
            strQry.AppendLine("");
            strQry.AppendLine("            INNER JOIN DELETED D");
            strQry.AppendLine("");
            strQry.AppendLine("            ON ETBDC.COMPANY_NO = D.COMPANY_NO");
            strQry.AppendLine("            AND ETBDC.EMPLOYEE_NO = D.EMPLOYEE_NO");
            strQry.AppendLine("            AND ETBDC.PAY_CATEGORY_NO = D.PAY_CATEGORY_NO");
            strQry.AppendLine("            AND ETBDC.TIMESHEET_DATE = D.#DATE_FIELD#");
            strQry.AppendLine("");
            strQry.AppendLine("            LEFT JOIN");
            strQry.AppendLine("");
            strQry.AppendLine("           (SELECT");
            strQry.AppendLine("            ETC.COMPANY_NO");
            strQry.AppendLine("           ,ETC.EMPLOYEE_NO");
            strQry.AppendLine("           ,ETC.PAY_CATEGORY_NO");
            strQry.AppendLine("           ,ETC.TIMESHEET_DATE");
            strQry.AppendLine("");
            strQry.AppendLine("            FROM dbo.#TIMESHEET_TABLE# ETC");
            strQry.AppendLine("");
            strQry.AppendLine("            INNER JOIN DELETED D");
            strQry.AppendLine("");
            strQry.AppendLine("            ON ETC.COMPANY_NO = D.COMPANY_NO");
            strQry.AppendLine("            AND ETC.EMPLOYEE_NO = D.EMPLOYEE_NO");
            strQry.AppendLine("            AND ETC.PAY_CATEGORY_NO = D.PAY_CATEGORY_NO");
            strQry.AppendLine("            AND ETC.TIMESHEET_DATE = D.#DATE_FIELD#");
            strQry.AppendLine("");
            strQry.AppendLine("            UNION");
            strQry.AppendLine("");
            strQry.AppendLine("            SELECT");
            strQry.AppendLine("            EBC.COMPANY_NO");
            strQry.AppendLine("           ,EBC.EMPLOYEE_NO");
            strQry.AppendLine("           ,EBC.PAY_CATEGORY_NO");
            strQry.AppendLine("           ,EBC.BREAK_DATE AS TIMESHEET_DATE");
            strQry.AppendLine("");
            strQry.AppendLine("            FROM dbo.#BREAK_TABLE# EBC");
            strQry.AppendLine("");
            strQry.AppendLine("            INNER JOIN DELETED D");
            strQry.AppendLine("");
            strQry.AppendLine("            ON EBC.COMPANY_NO = D.COMPANY_NO");
            strQry.AppendLine("            AND EBC.EMPLOYEE_NO = D.EMPLOYEE_NO");
            strQry.AppendLine("            AND EBC.PAY_CATEGORY_NO = D.PAY_CATEGORY_NO");
            strQry.AppendLine("            AND EBC.BREAK_DATE = D.#DATE_FIELD#");
            strQry.AppendLine("           ) AS TABLE_CHECK");
            strQry.AppendLine("");
            strQry.AppendLine("            ON ETBDC.COMPANY_NO = TABLE_CHECK.COMPANY_NO");
            strQry.AppendLine("            AND ETBDC.EMPLOYEE_NO = TABLE_CHECK.EMPLOYEE_NO");
            strQry.AppendLine("            AND ETBDC.PAY_CATEGORY_NO = TABLE_CHECK.PAY_CATEGORY_NO");
            strQry.AppendLine("            AND ETBDC.TIMESHEET_DATE = TABLE_CHECK.TIMESHEET_DATE");
            strQry.AppendLine("");
            strQry.AppendLine("            --No #TIMESHEET_TABLE# / #BREAK_TABLE# Records");
            strQry.AppendLine("            WHERE TABLE_CHECK.COMPANY_NO IS NULL");
            strQry.AppendLine("");
            strQry.AppendLine("            END");
            strQry.AppendLine("");
            strQry.AppendLine("IF @Action = 'I'");
            strQry.AppendLine("OR @Action = 'U'");
            strQry.AppendLine("");
            strQry.AppendLine(" BEGIN");
            strQry.AppendLine("");
            strQry.AppendLine(" UPDATE ETC");
            strQry.AppendLine("");
            strQry.AppendLine(" SET");
            strQry.AppendLine("");
            strQry.AppendLine(" #TIMESHEET_OR_BREAK#_ACCUM_MINUTES = ISNULL(TEMP_TABLE.#TIMESHEET_OR_BREAK#_ACCUM_MINUTES,0)");
            strQry.AppendLine(",INDICATOR = TEMP_TABLE.INDICATOR");
            strQry.AppendLine(",INCLUDED_IN_RUN_IND = TEMP_TABLE.INCLUDED_IN_RUN_IND");
            strQry.AppendLine("");
            strQry.AppendLine(" FROM dbo.#TRIGGER_TABLE_NAME# ETC");
            strQry.AppendLine("");
            strQry.AppendLine(" INNER JOIN");
            strQry.AppendLine("(");
            strQry.AppendLine(" SELECT");
            strQry.AppendLine(" ETC.COMPANY_NO");
            strQry.AppendLine(",ETC.EMPLOYEE_NO");
            strQry.AppendLine(",ETC.PAY_CATEGORY_NO");
            strQry.AppendLine(",ETC.#DATE_FIELD#");
            strQry.AppendLine(",ETC.#TIMESHEET_OR_BREAK#_SEQ");
            strQry.AppendLine(",#TIMESHEET_OR_BREAK#_ACCUM_MINUTES = ");
            strQry.AppendLine(" CASE");
            strQry.AppendLine(" WHEN NOT TEMP.EMPLOYEE_NO IS NULL THEN");
            strQry.AppendLine(" CASE");
            strQry.AppendLine(" WHEN ETC.#TIMESHEET_OR_BREAK#_TIME_OUT_MINUTES IS NULL OR ETC.#TIMESHEET_OR_BREAK#_TIME_IN_MINUTES IS NULL");
            strQry.AppendLine(" THEN 0");
            strQry.AppendLine(" WHEN ETC.#TIMESHEET_OR_BREAK#_TIME_OUT_MINUTES > ETC.#TIMESHEET_OR_BREAK#_TIME_IN_MINUTES THEN");
            strQry.AppendLine(" ETC.#TIMESHEET_OR_BREAK#_TIME_OUT_MINUTES - ETC.#TIMESHEET_OR_BREAK#_TIME_IN_MINUTES");
            strQry.AppendLine(" ELSE 0");
            strQry.AppendLine(" END");
            strQry.AppendLine(" ELSE");
            strQry.AppendLine(" ETC.#TIMESHEET_OR_BREAK#_TIME_OUT_MINUTES - ETC.#TIMESHEET_OR_BREAK#_TIME_IN_MINUTES");
            strQry.AppendLine(" END");
            strQry.AppendLine(",INDICATOR = ");
            strQry.AppendLine(" CASE");
            strQry.AppendLine(" WHEN C.WAGE_RUN_IND = 'Y' AND NOT TEMP.EMPLOYEE_NO IS NULL AND E.FIRST_RUN_COMPLETED_IND = 'Y' AND ETC.#DATE_FIELD# > E.EMPLOYEE_LAST_RUNDATE AND ETC.#DATE_FIELD# <= PCPC.PAY_PERIOD_DATE");
            strQry.AppendLine(" THEN ''");
            strQry.AppendLine(" WHEN C.WAGE_RUN_IND = 'Y' AND NOT TEMP.EMPLOYEE_NO IS NULL AND ISNULL(E.FIRST_RUN_COMPLETED_IND,'') <> 'Y' AND ETC.#DATE_FIELD# >= ISNULL(E.EMPLOYEE_LAST_RUNDATE,DATEADD(DD,-360,I.#TIMESHEET_OR_BREAK#_DATE)) AND ETC.#DATE_FIELD# <= PCPC.PAY_PERIOD_DATE");
            strQry.AppendLine(" THEN ''");
            strQry.AppendLine(" WHEN NOT TEMP.EMPLOYEE_NO IS NULL");
            strQry.AppendLine(" THEN 'X'");
            strQry.AppendLine(" ELSE ''");
            strQry.AppendLine(" END");
            strQry.AppendLine(",INCLUDED_IN_RUN_IND = ");
            strQry.AppendLine(" CASE");
            strQry.AppendLine(" WHEN C.WAGE_RUN_IND = 'Y' AND E.FIRST_RUN_COMPLETED_IND = 'Y' AND ETC.#DATE_FIELD# > E.EMPLOYEE_LAST_RUNDATE AND ETC.#DATE_FIELD# <= PCPC.PAY_PERIOD_DATE");
            strQry.AppendLine(" THEN ISNULL(ETC.INCLUDED_IN_RUN_IND,'N')");
            strQry.AppendLine(" WHEN C.WAGE_RUN_IND = 'Y' AND ISNULL(E.FIRST_RUN_COMPLETED_IND,'') <> 'Y' AND ETC.#DATE_FIELD# >= ISNULL(E.EMPLOYEE_LAST_RUNDATE,DATEADD(DD,-360,I.#TIMESHEET_OR_BREAK#_DATE)) AND ETC.#DATE_FIELD# <= PCPC.PAY_PERIOD_DATE");
            strQry.AppendLine(" THEN ISNULL(ETC.INCLUDED_IN_RUN_IND,'N')");
            strQry.AppendLine(" ELSE ISNULL(ETC.INCLUDED_IN_RUN_IND,'')");
            strQry.AppendLine(" END");
            strQry.AppendLine("");
            strQry.AppendLine(" FROM dbo.EMPLOYEE E");
            strQry.AppendLine("");
            strQry.AppendLine(" INNER JOIN");
            strQry.AppendLine("(");
            strQry.AppendLine(" SELECT DISTINCT");
            strQry.AppendLine(" COMPANY_NO");
            strQry.AppendLine(",EMPLOYEE_NO");
            strQry.AppendLine(",PAY_CATEGORY_NO");
            strQry.AppendLine(",#DATE_FIELD#");
            strQry.AppendLine(" FROM INSERTED");
            strQry.AppendLine(") AS I");
            strQry.AppendLine(" ON E.COMPANY_NO = I.COMPANY_NO");
            strQry.AppendLine(" AND E.EMPLOYEE_NO = I.EMPLOYEE_NO");
            strQry.AppendLine("");
            strQry.AppendLine(" INNER JOIN dbo.#TRIGGER_TABLE_NAME# ETC");
            strQry.AppendLine(" ON E.COMPANY_NO = ETC.COMPANY_NO");
            strQry.AppendLine(" AND E.EMPLOYEE_NO = ETC.EMPLOYEE_NO");
            strQry.AppendLine(" AND ETC.PAY_CATEGORY_NO = I.PAY_CATEGORY_NO");
            strQry.AppendLine(" AND ETC.#DATE_FIELD# = I.#TIMESHEET_OR_BREAK#_DATE");
            strQry.AppendLine(" AND ((ETC.#DATE_FIELD# > E.EMPLOYEE_LAST_RUNDATE");
            strQry.AppendLine(" AND E.FIRST_RUN_COMPLETED_IND = 'Y')");
            strQry.AppendLine(" OR (ETC.#DATE_FIELD# >= ISNULL(E.EMPLOYEE_LAST_RUNDATE,DATEADD(DD,-360,I.#TIMESHEET_OR_BREAK#_DATE))");
            strQry.AppendLine(" AND ISNULL(E.FIRST_RUN_COMPLETED_IND,'') <> 'Y'))");
            strQry.AppendLine("");
            strQry.AppendLine(" INNER JOIN dbo.COMPANY C");
            strQry.AppendLine(" ON ETC.COMPANY_NO = C.COMPANY_NO");
            strQry.AppendLine(" AND C.DATETIME_DELETE_RECORD IS NULL");
            strQry.AppendLine("");
            strQry.AppendLine(" LEFT JOIN");
            strQry.AppendLine("(");
            strQry.AppendLine("--2Start");
            strQry.AppendLine("--1Start");
            strQry.AppendLine(" SELECT DISTINCT");
            strQry.AppendLine(" ETC.EMPLOYEE_NO");
            strQry.AppendLine(",ETC.#DATE_FIELD#");
            strQry.AppendLine(",ETC.#TIMESHEET_OR_BREAK#_SEQ");
            strQry.AppendLine("");
            strQry.AppendLine(" FROM dbo.EMPLOYEE E");
            strQry.AppendLine("");
            strQry.AppendLine(" INNER JOIN");
            strQry.AppendLine("(");
            strQry.AppendLine(" SELECT DISTINCT");
            strQry.AppendLine(" COMPANY_NO");
            strQry.AppendLine(",PAY_CATEGORY_NO");
            strQry.AppendLine(",EMPLOYEE_NO");
            strQry.AppendLine(",#DATE_FIELD#");
            strQry.AppendLine(" FROM INSERTED");
            strQry.AppendLine(") AS I");
            strQry.AppendLine(" ON E.COMPANY_NO = I.COMPANY_NO");
            strQry.AppendLine(" AND E.EMPLOYEE_NO = I.EMPLOYEE_NO");
            strQry.AppendLine("");
            strQry.AppendLine(" INNER JOIN");
            strQry.AppendLine("(");
            strQry.AppendLine(" SELECT");
            strQry.AppendLine(" ROW_NUMBER() OVER");
            strQry.AppendLine(" (ORDER BY");
            strQry.AppendLine(" COMPANY_NO");
            strQry.AppendLine(",EMPLOYEE_NO");
            strQry.AppendLine(",PAY_CATEGORY_NO");
            strQry.AppendLine(",#DATE_FIELD#");
            strQry.AppendLine(",#TIMESHEET_OR_BREAK#_TIME_IN_MINUTES");
            strQry.AppendLine(",#TIMESHEET_OR_BREAK#_TIME_OUT_MINUTES) AS SORTED_REC");
            strQry.AppendLine(",COMPANY_NO");
            strQry.AppendLine(",PAY_CATEGORY_NO");
            strQry.AppendLine(",EMPLOYEE_NO");
            strQry.AppendLine(",#DATE_FIELD#");
            strQry.AppendLine(",#TIMESHEET_OR_BREAK#_SEQ");
            strQry.AppendLine(",#TIMESHEET_OR_BREAK#_TIME_IN_MINUTES");
            strQry.AppendLine(",#TIMESHEET_OR_BREAK#_TIME_OUT_MINUTES");
            strQry.AppendLine("");
            strQry.AppendLine(" FROM dbo.#TRIGGER_TABLE_NAME#");
            strQry.AppendLine(") AS ETC");
            strQry.AppendLine(" ON E.COMPANY_NO = ETC.COMPANY_NO");
            strQry.AppendLine(" AND E.EMPLOYEE_NO = ETC.EMPLOYEE_NO");
            strQry.AppendLine(" AND ETC.PAY_CATEGORY_NO = I.PAY_CATEGORY_NO");
            strQry.AppendLine(" AND ETC.#DATE_FIELD# = I.#TIMESHEET_OR_BREAK#_DATE");
            strQry.AppendLine(" AND ((ETC.#DATE_FIELD# > E.EMPLOYEE_LAST_RUNDATE");
            strQry.AppendLine(" AND E.FIRST_RUN_COMPLETED_IND = 'Y')");
            strQry.AppendLine(" OR (ETC.#DATE_FIELD# >= ISNULL(E.EMPLOYEE_LAST_RUNDATE,DATEADD(DD,-360,I.#TIMESHEET_OR_BREAK#_DATE))");
            strQry.AppendLine(" AND ISNULL(E.FIRST_RUN_COMPLETED_IND,'') <> 'Y'))");
            strQry.AppendLine("");
            strQry.AppendLine("--1End");
            strQry.AppendLine(" INNER JOIN");
            strQry.AppendLine("(");
            strQry.AppendLine(" SELECT");
            strQry.AppendLine(" ROW_NUMBER() OVER");
            strQry.AppendLine(" (ORDER BY");
            strQry.AppendLine(" COMPANY_NO");
            strQry.AppendLine(",EMPLOYEE_NO");
            strQry.AppendLine(",PAY_CATEGORY_NO");
            strQry.AppendLine(",#DATE_FIELD#");
            strQry.AppendLine(",#TIMESHEET_OR_BREAK#_TIME_IN_MINUTES");
            strQry.AppendLine(",#TIMESHEET_OR_BREAK#_TIME_OUT_MINUTES) AS SORTED_REC");
            strQry.AppendLine(",COMPANY_NO");
            strQry.AppendLine(",PAY_CATEGORY_NO");
            strQry.AppendLine(",EMPLOYEE_NO");
            strQry.AppendLine(",#DATE_FIELD#");
            strQry.AppendLine(",#TIMESHEET_OR_BREAK#_SEQ");
            strQry.AppendLine(",#TIMESHEET_OR_BREAK#_TIME_IN_MINUTES");
            strQry.AppendLine(",#TIMESHEET_OR_BREAK#_TIME_OUT_MINUTES");
            strQry.AppendLine("");
            strQry.AppendLine(" FROM dbo.#TRIGGER_TABLE_NAME#");
            strQry.AppendLine(") AS ETC2");
            strQry.AppendLine(" ON E.COMPANY_NO = ETC2.COMPANY_NO");
            strQry.AppendLine(" AND E.EMPLOYEE_NO = ETC2.EMPLOYEE_NO");
            strQry.AppendLine(" AND I.PAY_CATEGORY_NO = ETC2.PAY_CATEGORY_NO");
            strQry.AppendLine(" AND I.#TIMESHEET_OR_BREAK#_DATE = ETC2.#DATE_FIELD#");
            strQry.AppendLine("");
            strQry.AppendLine(" WHERE E.DATETIME_DELETE_RECORD IS NULL");
            strQry.AppendLine(" AND E.EMPLOYEE_ENDDATE IS NULL");
            strQry.AppendLine(" AND E.PAY_CATEGORY_TYPE = '#PAY_CATEGORY_TYPE#'");
            strQry.AppendLine(" AND ((ETC.#TIMESHEET_OR_BREAK#_TIME_IN_MINUTES IS NULL");
            strQry.AppendLine(" OR ETC.#TIMESHEET_OR_BREAK#_TIME_OUT_MINUTES IS NULL)");
            //Errol 2016-06-22
            strQry.AppendLine(" OR (ETC.#TIMESHEET_OR_BREAK#_TIME_IN_MINUTES >= ETC2.#TIMESHEET_OR_BREAK#_TIME_OUT_MINUTES");
            strQry.AppendLine(" AND ETC.SORTED_REC <= ETC2.SORTED_REC)");
            strQry.AppendLine(" OR (ETC.#TIMESHEET_OR_BREAK#_TIME_IN_MINUTES < ETC2.#TIMESHEET_OR_BREAK#_TIME_OUT_MINUTES");
            strQry.AppendLine(" AND ETC.SORTED_REC > ETC2.SORTED_REC))");
            strQry.AppendLine("");
            strQry.AppendLine("--2End");
            strQry.AppendLine(") AS TEMP");
            strQry.AppendLine(" ON ETC.EMPLOYEE_NO = TEMP.EMPLOYEE_NO");
            strQry.AppendLine(" AND ETC.#DATE_FIELD# = TEMP.#TIMESHEET_OR_BREAK#_DATE");
            strQry.AppendLine(" AND ETC.#TIMESHEET_OR_BREAK#_SEQ = TEMP.#TIMESHEET_OR_BREAK#_SEQ");
            strQry.AppendLine("");
            strQry.AppendLine(" INNER JOIN dbo.EMPLOYEE_PAY_CATEGORY EPC");
            strQry.AppendLine(" ON ETC.COMPANY_NO = EPC.COMPANY_NO");
            strQry.AppendLine(" AND ETC.EMPLOYEE_NO = EPC.EMPLOYEE_NO");
            strQry.AppendLine(" AND ETC.PAY_CATEGORY_NO = EPC.PAY_CATEGORY_NO");
            strQry.AppendLine(" AND EPC.PAY_CATEGORY_TYPE = '#PAY_CATEGORY_TYPE#'");
            strQry.AppendLine(" AND EPC.DATETIME_DELETE_RECORD IS NULL");
            strQry.AppendLine("");
            strQry.AppendLine(" INNER JOIN dbo.PAY_CATEGORY PC");
            strQry.AppendLine(" ON ETC.COMPANY_NO = PC.COMPANY_NO");
            strQry.AppendLine(" AND ETC.PAY_CATEGORY_NO = PC.PAY_CATEGORY_NO");
            strQry.AppendLine(" AND PC.PAY_CATEGORY_TYPE = '#PAY_CATEGORY_TYPE#'");
            strQry.AppendLine(" AND PC.DATETIME_DELETE_RECORD IS NULL");
            strQry.AppendLine("");
            strQry.AppendLine(" LEFT JOIN dbo.PAY_CATEGORY_PERIOD_CURRENT PCPC");
            strQry.AppendLine(" ON PC.COMPANY_NO = PCPC.COMPANY_NO");
            strQry.AppendLine(" AND PC.PAY_CATEGORY_NO = PCPC.PAY_CATEGORY_NO");
            strQry.AppendLine(" AND PC.PAY_CATEGORY_TYPE = '#PAY_CATEGORY_TYPE#'");
            strQry.AppendLine(" AND PCPC.RUN_TYPE = 'P'");
            strQry.AppendLine("");
            strQry.AppendLine(" WHERE E.DATETIME_DELETE_RECORD IS NULL");
            strQry.AppendLine(" AND E.EMPLOYEE_ENDDATE IS NULL");
            strQry.AppendLine(" AND E.PAY_CATEGORY_TYPE = '#PAY_CATEGORY_TYPE#'");
            strQry.AppendLine(") AS TEMP_TABLE");
            strQry.AppendLine(" ON ETC.COMPANY_NO = TEMP_TABLE.COMPANY_NO");
            strQry.AppendLine(" AND ETC.EMPLOYEE_NO = TEMP_TABLE.EMPLOYEE_NO");
            strQry.AppendLine(" AND ETC.PAY_CATEGORY_NO = TEMP_TABLE.PAY_CATEGORY_NO");
            strQry.AppendLine(" AND ETC.#DATE_FIELD# = TEMP_TABLE.#DATE_FIELD#");
            strQry.AppendLine(" AND ETC.#TIMESHEET_OR_BREAK#_SEQ = TEMP_TABLE.#TIMESHEET_OR_BREAK#_SEQ");

            strQry.AppendLine("");
            strQry.AppendLine(" UPDATE ETBDC");
            strQry.AppendLine("");
            strQry.AppendLine(" SET");
            strQry.AppendLine("");
            strQry.AppendLine(" DAY_NO = TEMP_TABLE.DAY_NO");
            strQry.AppendLine(",DAY_PAID_MINUTES = ISNULL(TEMP_TABLE.DAY_PAID_MINUTES,0)");
            strQry.AppendLine(",BREAK_ACCUM_MINUTES = ISNULL(TEMP_TABLE.BREAK_ACCUM_MINUTES,0)");
            strQry.AppendLine(",INDICATOR = TEMP_TABLE.INDICATOR");
            strQry.AppendLine(",BREAK_INDICATOR = TEMP_TABLE.BREAK_INDICATOR");
            strQry.AppendLine(",INCLUDED_IN_RUN_INDICATOR = TEMP_TABLE.INCLUDED_IN_RUN_INDICATOR");
            strQry.AppendLine("");
            strQry.AppendLine(" FROM dbo.#DAY_TABLE# ETBDC");
            strQry.AppendLine("");
            strQry.AppendLine(" INNER JOIN");
            strQry.AppendLine("(");
            strQry.AppendLine(" SELECT");
            strQry.AppendLine(" E.COMPANY_NO");
            strQry.AppendLine(",BREAK_SUMMARY_TABLE.PAY_CATEGORY_NO");
            strQry.AppendLine(",E.EMPLOYEE_NO");
            strQry.AppendLine(",BREAK_SUMMARY_TABLE.DAY_DATE");
            strQry.AppendLine(",D.DAY_NO");
            strQry.AppendLine(",0 AS DAY_PAID_MINUTES");
            strQry.AppendLine(",BREAK_SUMMARY_TABLE.INDICATOR");
            strQry.AppendLine(",BREAK_SUMMARY_TABLE.BREAK_ACCUM_MINUTES");
            strQry.AppendLine(",BREAK_INDICATOR = ");
            strQry.AppendLine(" CASE");
            strQry.AppendLine(" WHEN BREAK_SUMMARY_TABLE.BREAK_ACCUM_MINUTES > 0");
            strQry.AppendLine(" THEN 'Y'");
            strQry.AppendLine(" ELSE ''");
            strQry.AppendLine(" END");
            strQry.AppendLine(",BREAK_SUMMARY_TABLE.BREAK_INCLUDED_IN_RUN_IND AS INCLUDED_IN_RUN_INDICATOR");
            strQry.AppendLine("");
            strQry.AppendLine(" FROM dbo.EMPLOYEE E");
            strQry.AppendLine("");
            strQry.AppendLine(" INNER JOIN");
            strQry.AppendLine("(");
            strQry.AppendLine("--2Start Break UNION 1");
            strQry.AppendLine(" SELECT");
            strQry.AppendLine(" BREAK_TABLE.COMPANY_NO");
            strQry.AppendLine(",BREAK_TABLE.PAY_CATEGORY_TYPE");
            strQry.AppendLine(",BREAK_TABLE.PAY_CATEGORY_NO");
            strQry.AppendLine(",BREAK_TABLE.EMPLOYEE_NO");
            strQry.AppendLine(",BREAK_TABLE.DAY_DATE");
            strQry.AppendLine(",BREAK_ACCUM_MINUTES = ");
            strQry.AppendLine(" SUM(CASE");
            strQry.AppendLine(" WHEN C.WAGE_RUN_IND = 'Y' AND BREAK_TABLE.DAY_DATE > BREAK_TABLE.EMPLOYEE_LAST_RUNDATE AND BREAK_TABLE.DAY_DATE <= PCPC.PAY_PERIOD_DATE AND BREAK_TABLE.INCLUDED_IN_RUN_IND IS NULL");
            strQry.AppendLine(" THEN 0");
            strQry.AppendLine(" ELSE BREAK_TABLE.BREAK_ACCUM_MINUTES");
            strQry.AppendLine(" END)");
            strQry.AppendLine(",INDICATOR = ");
            strQry.AppendLine(" CASE");
            strQry.AppendLine(" WHEN C.WAGE_RUN_IND = 'Y' AND BREAK_TABLE.DAY_DATE > BREAK_TABLE.EMPLOYEE_LAST_RUNDATE AND BREAK_TABLE.DAY_DATE <= PCPC.PAY_PERIOD_DATE");
            strQry.AppendLine(" THEN ''");
            strQry.AppendLine(" ELSE 'X'");
            strQry.AppendLine(" END");
            strQry.AppendLine(",BREAK_INCLUDED_IN_RUN_IND = ");
            strQry.AppendLine(" CASE");
            strQry.AppendLine(" WHEN C.WAGE_RUN_IND = 'Y' AND BREAK_TABLE.DAY_DATE > BREAK_TABLE.EMPLOYEE_LAST_RUNDATE AND BREAK_TABLE.DAY_DATE <= PCPC.PAY_PERIOD_DATE");
            strQry.AppendLine(" THEN MIN(ISNULL(BREAK_TABLE.INCLUDED_IN_RUN_IND,'N'))");
            strQry.AppendLine(" ELSE MAX(ISNULL(BREAK_TABLE.INCLUDED_IN_RUN_IND,''))");
            strQry.AppendLine(" END");
            strQry.AppendLine("");
            strQry.AppendLine(" FROM");
            strQry.AppendLine("(");
            strQry.AppendLine("--1Start Break UNION 1");
            strQry.AppendLine(" SELECT DISTINCT");
            strQry.AppendLine(" EBC.COMPANY_NO");
            strQry.AppendLine(",'#PAY_CATEGORY_TYPE#' AS PAY_CATEGORY_TYPE");
            strQry.AppendLine(",EBC.PAY_CATEGORY_NO");
            strQry.AppendLine(",EBC.EMPLOYEE_NO");
            strQry.AppendLine(",EBC.BREAK_DATE AS DAY_DATE");
            strQry.AppendLine(",EBC.BREAK_SEQ");
            strQry.AppendLine(",EMPLOYEE_LAST_RUNDATE = ");
            strQry.AppendLine(" CASE");
            strQry.AppendLine(" WHEN E.EMPLOYEE_LAST_RUNDATE IS NULL");
            strQry.AppendLine(" THEN DATEADD(DD,-360,GETDATE())");
            strQry.AppendLine(" WHEN ISNULL(E.FIRST_RUN_COMPLETED_IND,'') <> 'Y'");
            strQry.AppendLine(" THEN DATEADD(DD,-1,E.EMPLOYEE_LAST_RUNDATE)");
            strQry.AppendLine(" ELSE E.EMPLOYEE_LAST_RUNDATE");
            strQry.AppendLine(" END");
            strQry.AppendLine(",BREAK_ACCUM_MINUTES = ");
            strQry.AppendLine(" CASE");
            strQry.AppendLine(" WHEN ((EBC.BREAK_TIME_IN_MINUTES IS NULL");
            strQry.AppendLine(" OR EBC.BREAK_TIME_OUT_MINUTES IS NULL)");
            //Errol - 2016-06-22
            strQry.AppendLine(" OR (EBC.BREAK_TIME_IN_MINUTES >= EBC2.BREAK_TIME_OUT_MINUTES");
            strQry.AppendLine(" AND EBC.SORTED_REC <= EBC2.SORTED_REC)");
            strQry.AppendLine(" OR (EBC.BREAK_TIME_IN_MINUTES < EBC2.BREAK_TIME_OUT_MINUTES");
            strQry.AppendLine(" AND EBC.SORTED_REC > EBC2.SORTED_REC)) THEN");
            strQry.AppendLine(" CASE");
            strQry.AppendLine(" WHEN EBC.BREAK_TIME_OUT_MINUTES IS NULL OR EBC.BREAK_TIME_IN_MINUTES IS NULL");
            strQry.AppendLine(" THEN 0");
            strQry.AppendLine(" WHEN EBC.BREAK_TIME_OUT_MINUTES > EBC.BREAK_TIME_IN_MINUTES THEN");
            strQry.AppendLine(" EBC.BREAK_TIME_OUT_MINUTES - EBC.BREAK_TIME_IN_MINUTES");
            strQry.AppendLine(" ELSE 0");
            strQry.AppendLine(" END");
            strQry.AppendLine(" ELSE");
            strQry.AppendLine(" EBC.BREAK_TIME_OUT_MINUTES - EBC.BREAK_TIME_IN_MINUTES");
            strQry.AppendLine(" END");
            strQry.AppendLine(",EBC.INCLUDED_IN_RUN_IND");
            strQry.AppendLine("");
            strQry.AppendLine(" FROM dbo.EMPLOYEE E");
            strQry.AppendLine("");
            strQry.AppendLine(" INNER JOIN");
            strQry.AppendLine("(");
            strQry.AppendLine(" SELECT");
            strQry.AppendLine(" ROW_NUMBER() OVER");
            strQry.AppendLine(" (ORDER BY");
            strQry.AppendLine(" EBC.COMPANY_NO");
            strQry.AppendLine(",EBC.EMPLOYEE_NO");
            strQry.AppendLine(",EBC.PAY_CATEGORY_NO");
            strQry.AppendLine(",EBC.BREAK_DATE");
            strQry.AppendLine(",EBC.BREAK_TIME_IN_MINUTES");
            strQry.AppendLine(",EBC.BREAK_TIME_OUT_MINUTES) AS SORTED_REC");
            strQry.AppendLine(",EBC.COMPANY_NO");
            strQry.AppendLine(",EBC.PAY_CATEGORY_NO");
            strQry.AppendLine(",EBC.EMPLOYEE_NO");
            strQry.AppendLine(",EBC.BREAK_DATE");
            strQry.AppendLine(",EBC.BREAK_SEQ");
            strQry.AppendLine(",EBC.BREAK_TIME_IN_MINUTES");
            strQry.AppendLine(",EBC.BREAK_TIME_OUT_MINUTES");
            strQry.AppendLine(",EBC.INCLUDED_IN_RUN_IND");
            strQry.AppendLine("");
            strQry.AppendLine(" FROM dbo.#BREAK_TABLE# EBC");
            strQry.AppendLine("");
            strQry.AppendLine(" INNER JOIN");
            strQry.AppendLine("(");
            strQry.AppendLine(" SELECT DISTINCT");
            strQry.AppendLine(" COMPANY_NO");
            strQry.AppendLine(",PAY_CATEGORY_NO");
            strQry.AppendLine(",EMPLOYEE_NO");
            strQry.AppendLine(",#DATE_FIELD#");
            strQry.AppendLine(" FROM INSERTED");
            strQry.AppendLine(") AS I");
            strQry.AppendLine(" ON EBC.COMPANY_NO = I.COMPANY_NO");
            strQry.AppendLine(" AND EBC.EMPLOYEE_NO = I.EMPLOYEE_NO");
            strQry.AppendLine(" AND EBC.PAY_CATEGORY_NO = I.PAY_CATEGORY_NO");
            strQry.AppendLine(" AND EBC.BREAK_DATE = I.#TIMESHEET_OR_BREAK#_DATE");
            strQry.AppendLine(") AS EBC");
            strQry.AppendLine(" ON E.COMPANY_NO = EBC.COMPANY_NO");
            strQry.AppendLine(" AND E.EMPLOYEE_NO = EBC.EMPLOYEE_NO");
            strQry.AppendLine(" AND ((EBC.BREAK_DATE > E.EMPLOYEE_LAST_RUNDATE");
            strQry.AppendLine(" AND E.FIRST_RUN_COMPLETED_IND = 'Y')");
            strQry.AppendLine(" OR (EBC.BREAK_DATE >= ISNULL(E.EMPLOYEE_LAST_RUNDATE,DATEADD(DD,-360,GETDATE()))");
            strQry.AppendLine(" AND ISNULL(E.FIRST_RUN_COMPLETED_IND,'') <> 'Y'))");
            strQry.AppendLine("");
            strQry.AppendLine(" INNER JOIN");
            strQry.AppendLine("(");
            strQry.AppendLine(" SELECT");
            strQry.AppendLine(" ROW_NUMBER() OVER");
            strQry.AppendLine(" (ORDER BY");
            strQry.AppendLine(" EBC.COMPANY_NO");
            strQry.AppendLine(",EBC.EMPLOYEE_NO");
            strQry.AppendLine(",EBC.PAY_CATEGORY_NO");
            strQry.AppendLine(",EBC.BREAK_DATE");
            strQry.AppendLine(",EBC.BREAK_TIME_IN_MINUTES");
            strQry.AppendLine(",EBC.BREAK_TIME_OUT_MINUTES) AS SORTED_REC");
            strQry.AppendLine(",EBC.COMPANY_NO");
            strQry.AppendLine(",EBC.PAY_CATEGORY_NO");
            strQry.AppendLine(",EBC.EMPLOYEE_NO");
            strQry.AppendLine(",EBC.BREAK_DATE");
            strQry.AppendLine(",EBC.BREAK_SEQ");
            strQry.AppendLine(",EBC.BREAK_TIME_IN_MINUTES");
            strQry.AppendLine(",EBC.BREAK_TIME_OUT_MINUTES");
            strQry.AppendLine("");
            strQry.AppendLine(" FROM dbo.#BREAK_TABLE# EBC");
            strQry.AppendLine("");
            strQry.AppendLine(" INNER JOIN");
            strQry.AppendLine("(");
            strQry.AppendLine(" SELECT DISTINCT");
            strQry.AppendLine(" COMPANY_NO");
            strQry.AppendLine(",PAY_CATEGORY_NO");
            strQry.AppendLine(",EMPLOYEE_NO");
            strQry.AppendLine(",#DATE_FIELD#");
            strQry.AppendLine(" FROM INSERTED");
            strQry.AppendLine(") AS I");
            strQry.AppendLine(" ON EBC.COMPANY_NO = I.COMPANY_NO");
            strQry.AppendLine(" AND EBC.EMPLOYEE_NO = I.EMPLOYEE_NO");
            strQry.AppendLine(" AND EBC.PAY_CATEGORY_NO = I.PAY_CATEGORY_NO");
            strQry.AppendLine(" AND EBC.BREAK_DATE = I.#TIMESHEET_OR_BREAK#_DATE");
            strQry.AppendLine(") AS EBC2");
            strQry.AppendLine(" ON EBC.COMPANY_NO = EBC2.COMPANY_NO");
            strQry.AppendLine(" AND EBC.EMPLOYEE_NO = EBC2.EMPLOYEE_NO");
            strQry.AppendLine(" AND EBC.PAY_CATEGORY_NO = EBC2.PAY_CATEGORY_NO");
            strQry.AppendLine(" AND EBC.BREAK_DATE = EBC2.BREAK_DATE");
            strQry.AppendLine("");
            strQry.AppendLine(" INNER JOIN dbo.EMPLOYEE_PAY_CATEGORY EPC");
            strQry.AppendLine(" ON EBC.COMPANY_NO = EPC.COMPANY_NO");
            strQry.AppendLine(" AND EBC.EMPLOYEE_NO = EPC.EMPLOYEE_NO");
            strQry.AppendLine(" AND EBC.PAY_CATEGORY_NO = EPC.PAY_CATEGORY_NO");
            strQry.AppendLine(" AND EPC.PAY_CATEGORY_TYPE = '#PAY_CATEGORY_TYPE#'");
            strQry.AppendLine(" AND EPC.DATETIME_DELETE_RECORD IS NULL");
            strQry.AppendLine("");
            strQry.AppendLine(" INNER JOIN dbo.PAY_CATEGORY PC");
            strQry.AppendLine(" ON EBC.COMPANY_NO = PC.COMPANY_NO");
            strQry.AppendLine(" AND EBC.PAY_CATEGORY_NO = PC.PAY_CATEGORY_NO");
            strQry.AppendLine(" AND PC.PAY_CATEGORY_TYPE = '#PAY_CATEGORY_TYPE#'");
            strQry.AppendLine(" AND PC.DATETIME_DELETE_RECORD IS NULL");
            strQry.AppendLine("");
            strQry.AppendLine(" WHERE E.COMPANY_NO = EBC.COMPANY_NO");
            strQry.AppendLine(" AND E.DATETIME_DELETE_RECORD IS NULL");
            strQry.AppendLine(" AND E.EMPLOYEE_ENDDATE IS NULL");
            strQry.AppendLine(" AND E.PAY_CATEGORY_TYPE = '#PAY_CATEGORY_TYPE#'");
            strQry.AppendLine(" --1End Break UNION 1");
            strQry.AppendLine(") AS BREAK_TABLE");
            strQry.AppendLine("");
            strQry.AppendLine(" INNER JOIN dbo.COMPANY C");
            strQry.AppendLine(" ON BREAK_TABLE.COMPANY_NO = C.COMPANY_NO");
            strQry.AppendLine(" AND C.DATETIME_DELETE_RECORD IS NULL");
            strQry.AppendLine("");
            strQry.AppendLine(" LEFT JOIN dbo.PAY_CATEGORY_PERIOD_CURRENT PCPC");
            strQry.AppendLine(" ON BREAK_TABLE.COMPANY_NO = PCPC.COMPANY_NO");
            strQry.AppendLine(" AND BREAK_TABLE.PAY_CATEGORY_NO = PCPC.PAY_CATEGORY_NO");
            strQry.AppendLine(" AND BREAK_TABLE.PAY_CATEGORY_TYPE = PCPC.PAY_CATEGORY_TYPE");
            strQry.AppendLine(" AND PCPC.RUN_TYPE = 'P'");
            strQry.AppendLine("");
            strQry.AppendLine(" GROUP BY");
            strQry.AppendLine(" BREAK_TABLE.COMPANY_NO");
            strQry.AppendLine(",BREAK_TABLE.PAY_CATEGORY_TYPE");
            strQry.AppendLine(",BREAK_TABLE.PAY_CATEGORY_NO");
            strQry.AppendLine(",BREAK_TABLE.EMPLOYEE_NO");
            strQry.AppendLine(",BREAK_TABLE.DAY_DATE");
            strQry.AppendLine(",BREAK_TABLE.EMPLOYEE_LAST_RUNDATE");
            strQry.AppendLine(",PCPC.PAY_PERIOD_DATE");
            strQry.AppendLine(",C.WAGE_RUN_IND");
            strQry.AppendLine("--2End Break UNION 1");
            strQry.AppendLine(") AS BREAK_SUMMARY_TABLE");
            strQry.AppendLine(" ON E.COMPANY_NO = BREAK_SUMMARY_TABLE.COMPANY_NO");
            strQry.AppendLine(" AND E.EMPLOYEE_NO = BREAK_SUMMARY_TABLE.EMPLOYEE_NO");
            strQry.AppendLine(" AND E.PAY_CATEGORY_TYPE = BREAK_SUMMARY_TABLE.PAY_CATEGORY_TYPE");
            strQry.AppendLine("");
            strQry.AppendLine(" LEFT JOIN dbo.#TIMESHEET_TABLE# ETC");
            strQry.AppendLine(" ON BREAK_SUMMARY_TABLE.COMPANY_NO = ETC.COMPANY_NO");
            strQry.AppendLine(" AND BREAK_SUMMARY_TABLE.EMPLOYEE_NO = ETC.EMPLOYEE_NO");
            strQry.AppendLine(" AND BREAK_SUMMARY_TABLE.PAY_CATEGORY_NO = ETC.PAY_CATEGORY_NO");
            strQry.AppendLine(" AND BREAK_SUMMARY_TABLE.DAY_DATE = ETC.TIMESHEET_DATE");
            strQry.AppendLine("");
            strQry.AppendLine(" INNER JOIN InteractPayroll.dbo.DATES D");
            strQry.AppendLine(" ON BREAK_SUMMARY_TABLE.DAY_DATE = D.DAY_DATE");
            strQry.AppendLine("");
            strQry.AppendLine(" WHERE E.COMPANY_NO = BREAK_SUMMARY_TABLE.COMPANY_NO");
            strQry.AppendLine(" AND E.DATETIME_DELETE_RECORD IS NULL");
            strQry.AppendLine(" AND E.EMPLOYEE_ENDDATE IS NULL");
            strQry.AppendLine(" AND E.PAY_CATEGORY_TYPE = '#PAY_CATEGORY_TYPE#'");
            strQry.AppendLine(" AND ETC.TIMESHEET_DATE IS NULL");
            strQry.AppendLine("");
            strQry.AppendLine(" UNION");
            strQry.AppendLine("");
            strQry.AppendLine("--3Start Major UNION 2");
            strQry.AppendLine(" SELECT");
            strQry.AppendLine(" TEMP2_TABLE.COMPANY_NO");
            strQry.AppendLine(",TEMP2_TABLE.PAY_CATEGORY_NO");
            strQry.AppendLine(",TEMP2_TABLE.EMPLOYEE_NO");
            strQry.AppendLine(",TEMP2_TABLE.DAY_DATE");
            strQry.AppendLine(",D.DAY_NO");
            strQry.AppendLine(",TEMP2_TABLE.DAY_PAID_MINUTES");
            strQry.AppendLine(",INDICATOR = ");
            strQry.AppendLine(" CASE");
            strQry.AppendLine(" WHEN TEMP2_TABLE.INDICATOR = 'X'");
            strQry.AppendLine(" THEN TEMP2_TABLE.INDICATOR");
            strQry.AppendLine(" WHEN D.DAY_NO = 0");
            strQry.AppendLine(" AND (TEMP2_TABLE.DAY_PAID_MINUTES > PC2.EXCEPTION_SUN_ABOVE_MINUTES");
            strQry.AppendLine(" OR TEMP2_TABLE.DAY_PAID_MINUTES < PC2.EXCEPTION_SUN_BELOW_MINUTES)");
            strQry.AppendLine(" THEN 'E'");
            strQry.AppendLine(" WHEN D.DAY_NO = 1");
            strQry.AppendLine(" AND (TEMP2_TABLE.DAY_PAID_MINUTES > PC2.EXCEPTION_MON_ABOVE_MINUTES");
            strQry.AppendLine(" OR TEMP2_TABLE.DAY_PAID_MINUTES < PC2.EXCEPTION_MON_BELOW_MINUTES)");
            strQry.AppendLine(" THEN 'E'");
            strQry.AppendLine(" WHEN D.DAY_NO = 2");
            strQry.AppendLine(" AND (TEMP2_TABLE.DAY_PAID_MINUTES > PC2.EXCEPTION_TUE_ABOVE_MINUTES");
            strQry.AppendLine(" OR TEMP2_TABLE.DAY_PAID_MINUTES < PC2.EXCEPTION_TUE_BELOW_MINUTES)");
            strQry.AppendLine(" THEN 'E'");
            strQry.AppendLine(" WHEN D.DAY_NO = 3");
            strQry.AppendLine(" AND (TEMP2_TABLE.DAY_PAID_MINUTES > PC2.EXCEPTION_WED_ABOVE_MINUTES");
            strQry.AppendLine(" OR TEMP2_TABLE.DAY_PAID_MINUTES < PC2.EXCEPTION_WED_BELOW_MINUTES)");
            strQry.AppendLine(" THEN 'E'");
            strQry.AppendLine(" WHEN D.DAY_NO = 4");
            strQry.AppendLine(" AND (TEMP2_TABLE.DAY_PAID_MINUTES > PC2.EXCEPTION_THU_ABOVE_MINUTES");
            strQry.AppendLine(" OR TEMP2_TABLE.DAY_PAID_MINUTES < PC2.EXCEPTION_THU_BELOW_MINUTES)");
            strQry.AppendLine(" THEN 'E'");
            strQry.AppendLine(" WHEN D.DAY_NO = 5");
            strQry.AppendLine(" AND (TEMP2_TABLE.DAY_PAID_MINUTES > PC2.EXCEPTION_FRI_ABOVE_MINUTES");
            strQry.AppendLine(" OR TEMP2_TABLE.DAY_PAID_MINUTES < PC2.EXCEPTION_FRI_BELOW_MINUTES)");
            strQry.AppendLine(" THEN 'E'");
            strQry.AppendLine(" WHEN D.DAY_NO = 6");
            strQry.AppendLine(" AND (TEMP2_TABLE.DAY_PAID_MINUTES > PC2.EXCEPTION_SAT_ABOVE_MINUTES");
            strQry.AppendLine(" OR TEMP2_TABLE.DAY_PAID_MINUTES < PC2.EXCEPTION_SAT_BELOW_MINUTES)");
            strQry.AppendLine(" THEN 'E'");
            strQry.AppendLine(" ELSE TEMP2_TABLE.INDICATOR");
            strQry.AppendLine(" END");
            strQry.AppendLine(",TEMP2_TABLE.BREAK_ACCUM_MINUTES");
            strQry.AppendLine(",TEMP2_TABLE.BREAK_INDICATOR");
            strQry.AppendLine(",TEMP2_TABLE.INCLUDED_IN_RUN_INDICATOR");
            strQry.AppendLine("");
            strQry.AppendLine(" FROM");
            strQry.AppendLine("(");
            strQry.AppendLine("--2Start Major UNION 2");
            strQry.AppendLine(" SELECT");
            strQry.AppendLine(" TEMP1_TABLE.COMPANY_NO");
            strQry.AppendLine(",TEMP1_TABLE.PAY_CATEGORY_TYPE");
            strQry.AppendLine(",TEMP1_TABLE.PAY_CATEGORY_NO");
            strQry.AppendLine(",TEMP1_TABLE.EMPLOYEE_NO");
            strQry.AppendLine(",TEMP1_TABLE.DAY_DATE");
            strQry.AppendLine(",DAY_PAID_MINUTES = ");
            strQry.AppendLine(" CASE");
            strQry.AppendLine(" WHEN PC1.DAILY_ROUNDING_IND = 0");
            strQry.AppendLine(" THEN TEMP1_TABLE.DAY_PAID_MINUTES");
            strQry.AppendLine(" WHEN PC1.DAILY_ROUNDING_IND = 1");
            strQry.AppendLine(" THEN CASE");
            strQry.AppendLine(" WHEN TEMP1_TABLE.DAY_PAID_MINUTES % PC1.DAILY_ROUNDING_MINUTES = 0");
            strQry.AppendLine(" THEN TEMP1_TABLE.DAY_PAID_MINUTES");
            strQry.AppendLine(" ELSE TEMP1_TABLE.DAY_PAID_MINUTES + (PC1.DAILY_ROUNDING_MINUTES - (TEMP1_TABLE.DAY_PAID_MINUTES % PC1.DAILY_ROUNDING_MINUTES))");
            strQry.AppendLine(" END");
            strQry.AppendLine(" WHEN PC1.DAILY_ROUNDING_IND = 2");
            strQry.AppendLine(" THEN CASE");
            strQry.AppendLine(" WHEN TEMP1_TABLE.DAY_PAID_MINUTES % PC1.DAILY_ROUNDING_MINUTES = 0");
            strQry.AppendLine(" THEN TEMP1_TABLE.DAY_PAID_MINUTES");
            strQry.AppendLine(" ELSE TEMP1_TABLE.DAY_PAID_MINUTES - (TEMP1_TABLE.DAY_PAID_MINUTES % PC1.DAILY_ROUNDING_MINUTES)");
            strQry.AppendLine(" END");
            strQry.AppendLine(" WHEN PC1.DAILY_ROUNDING_IND = 3");
            strQry.AppendLine(" THEN CASE");
            strQry.AppendLine(" WHEN TEMP1_TABLE.DAY_PAID_MINUTES % PC1.DAILY_ROUNDING_MINUTES = 0");
            strQry.AppendLine(" THEN TEMP1_TABLE.DAY_PAID_MINUTES");
            strQry.AppendLine(" WHEN TEMP1_TABLE.DAY_PAID_MINUTES % PC1.DAILY_ROUNDING_MINUTES > CONVERT(DECIMAL,PC1.DAILY_ROUNDING_MINUTES) / 2");
            strQry.AppendLine(" THEN TEMP1_TABLE.DAY_PAID_MINUTES + (PC1.DAILY_ROUNDING_MINUTES - (TEMP1_TABLE.DAY_PAID_MINUTES % PC1.DAILY_ROUNDING_MINUTES))");
            strQry.AppendLine(" ELSE TEMP1_TABLE.DAY_PAID_MINUTES - (TEMP1_TABLE.DAY_PAID_MINUTES % PC1.DAILY_ROUNDING_MINUTES)");
            strQry.AppendLine(" END");
            strQry.AppendLine(" END");
            strQry.AppendLine(",TEMP1_TABLE.INDICATOR");
            strQry.AppendLine(",TEMP1_TABLE.BREAK_ACCUM_MINUTES");
            strQry.AppendLine(",TEMP1_TABLE.BREAK_INDICATOR");
            strQry.AppendLine(",TEMP1_TABLE.INCLUDED_IN_RUN_INDICATOR");
            strQry.AppendLine("");
            strQry.AppendLine(" FROM");
            strQry.AppendLine("(");
            strQry.AppendLine("--1Start Major UNION 2");
            strQry.AppendLine(" SELECT");
            strQry.AppendLine(" TIMESHEET_TOTAL_TABLE.COMPANY_NO");
            strQry.AppendLine(",TIMESHEET_TOTAL_TABLE.PAY_CATEGORY_TYPE");
            strQry.AppendLine(",TIMESHEET_TOTAL_TABLE.PAY_CATEGORY_NO");
            strQry.AppendLine(",TIMESHEET_TOTAL_TABLE.EMPLOYEE_NO");
            strQry.AppendLine(",TIMESHEET_TOTAL_TABLE.DAY_DATE");
            strQry.AppendLine(",ISNULL(BREAK_SUMMARY_TABLE.BREAK_ACCUM_MINUTES,0) AS BREAK_ACCUM_MINUTES");
            strQry.AppendLine(",DAY_PAID_MINUTES = ");
            strQry.AppendLine(" CASE");
            strQry.AppendLine(" WHEN BREAK_SUMMARY_TABLE.BREAK_ACCUM_MINUTES > TIMESHEET_TOTAL_TABLE.BREAK_MINUTES");
            strQry.AppendLine(" AND BREAK_SUMMARY_TABLE.BREAK_ACCUM_MINUTES < TIMESHEET_TOTAL_TABLE.TIMESHEET_ACCUM_MINUTES");
            strQry.AppendLine(" THEN TIMESHEET_TOTAL_TABLE.TIMESHEET_ACCUM_MINUTES - BREAK_SUMMARY_TABLE.BREAK_ACCUM_MINUTES");
            strQry.AppendLine(" ELSE TIMESHEET_TOTAL_TABLE.TIMESHEET_ACCUM_MINUTES - TIMESHEET_TOTAL_TABLE.BREAK_MINUTES");
            strQry.AppendLine(" END");
            strQry.AppendLine(",INDICATOR = ");
            strQry.AppendLine(" CASE");
            strQry.AppendLine(" WHEN BREAK_SUMMARY_TABLE.INDICATOR = 'X' OR TIMESHEET_TOTAL_TABLE.TIMESHEET_ACCUM_MINUTES < BREAK_SUMMARY_TABLE.BREAK_ACCUM_MINUTES");
            strQry.AppendLine(" THEN 'X'");
            strQry.AppendLine(" ELSE ISNULL(MAX(TIMESHEET_TOTAL_TABLE.INDICATOR),'')");
            strQry.AppendLine(" END");
            strQry.AppendLine(",BREAK_INDICATOR = ");
            strQry.AppendLine(" CASE");
            strQry.AppendLine(" WHEN BREAK_SUMMARY_TABLE.BREAK_ACCUM_MINUTES > TIMESHEET_TOTAL_TABLE.BREAK_MINUTES");
            strQry.AppendLine(" THEN 'Y'");
            strQry.AppendLine(" ELSE ''");
            strQry.AppendLine(" END");
            strQry.AppendLine(",INCLUDED_IN_RUN_INDICATOR = ");
            strQry.AppendLine(" CASE");
            strQry.AppendLine(" WHEN C.WAGE_RUN_IND = 'Y' AND NOT BREAK_SUMMARY_TABLE.COMPANY_NO IS NULL AND MIN(BREAK_SUMMARY_TABLE.BREAK_INCLUDED_IN_RUN_IND) < TIMESHEET_TOTAL_TABLE.TIMESHEET_INCLUDED_IN_RUN_IND");
            strQry.AppendLine(" THEN MIN(ISNULL(BREAK_SUMMARY_TABLE.BREAK_INCLUDED_IN_RUN_IND,'N'))");
            strQry.AppendLine(" WHEN C.WAGE_RUN_IND = 'Y' AND NOT BREAK_SUMMARY_TABLE.COMPANY_NO IS NULL AND MIN(BREAK_SUMMARY_TABLE.BREAK_INCLUDED_IN_RUN_IND) >= TIMESHEET_TOTAL_TABLE.TIMESHEET_INCLUDED_IN_RUN_IND");
            strQry.AppendLine(" THEN TIMESHEET_TOTAL_TABLE.TIMESHEET_INCLUDED_IN_RUN_IND");
            strQry.AppendLine(" WHEN C.WAGE_RUN_IND <> 'Y' AND NOT BREAK_SUMMARY_TABLE.COMPANY_NO IS NULL AND MAX(BREAK_SUMMARY_TABLE.BREAK_INCLUDED_IN_RUN_IND) < TIMESHEET_TOTAL_TABLE.TIMESHEET_INCLUDED_IN_RUN_IND");
            strQry.AppendLine(" THEN TIMESHEET_TOTAL_TABLE.TIMESHEET_INCLUDED_IN_RUN_IND");
            strQry.AppendLine(" WHEN C.WAGE_RUN_IND <> 'Y' AND NOT BREAK_SUMMARY_TABLE.COMPANY_NO IS NULL AND MAX(BREAK_SUMMARY_TABLE.BREAK_INCLUDED_IN_RUN_IND) >= TIMESHEET_TOTAL_TABLE.TIMESHEET_INCLUDED_IN_RUN_IND");
            strQry.AppendLine(" THEN MAX(ISNULL(BREAK_SUMMARY_TABLE.BREAK_INCLUDED_IN_RUN_IND,'N'))");
            strQry.AppendLine(" ELSE TIMESHEET_TOTAL_TABLE.TIMESHEET_INCLUDED_IN_RUN_IND");
            strQry.AppendLine(" END");
            strQry.AppendLine("");
            strQry.AppendLine(" FROM");
            strQry.AppendLine("(");
            strQry.AppendLine("--3Start Timesheet UNION 2");
            strQry.AppendLine(" SELECT");
            strQry.AppendLine(" TIMESHEET_SUMMARY_TABLE.COMPANY_NO");
            strQry.AppendLine(",TIMESHEET_SUMMARY_TABLE.PAY_CATEGORY_TYPE");
            strQry.AppendLine(",TIMESHEET_SUMMARY_TABLE.PAY_CATEGORY_NO");
            strQry.AppendLine(",TIMESHEET_SUMMARY_TABLE.EMPLOYEE_NO");
            strQry.AppendLine(",TIMESHEET_SUMMARY_TABLE.DAY_DATE");
            strQry.AppendLine(",TIMESHEET_SUMMARY_TABLE.TIMESHEET_ACCUM_MINUTES");
            strQry.AppendLine(",TIMESHEET_SUMMARY_TABLE.INDICATOR");
            strQry.AppendLine(",ISNULL(MAX(PCB.BREAK_MINUTES),0) AS BREAK_MINUTES");
            strQry.AppendLine(",TIMESHEET_SUMMARY_TABLE.TIMESHEET_INCLUDED_IN_RUN_IND");
            strQry.AppendLine("");
            strQry.AppendLine(" FROM");
            strQry.AppendLine("(");
            strQry.AppendLine("--2Start Timesheet UNION 2");
            strQry.AppendLine(" SELECT");
            strQry.AppendLine(" TIMESHEET_TABLE.COMPANY_NO");
            strQry.AppendLine(",TIMESHEET_TABLE.PAY_CATEGORY_TYPE");
            strQry.AppendLine(",TIMESHEET_TABLE.PAY_CATEGORY_NO");
            strQry.AppendLine(",TIMESHEET_TABLE.EMPLOYEE_NO");
            strQry.AppendLine(",TIMESHEET_TABLE.DAY_DATE");
            strQry.AppendLine(",TIMESHEET_ACCUM_MINUTES = ");
            strQry.AppendLine(" SUM(CASE");
            strQry.AppendLine(" WHEN C.WAGE_RUN_IND = 'Y' AND TIMESHEET_TABLE.DAY_DATE > TIMESHEET_TABLE.EMPLOYEE_LAST_RUNDATE AND TIMESHEET_TABLE.DAY_DATE <= PCPC.PAY_PERIOD_DATE AND ISNULL(TIMESHEET_TABLE.INCLUDED_IN_RUN_IND,'N') <> 'Y'");
            strQry.AppendLine(" THEN 0");
            strQry.AppendLine(" ELSE TIMESHEET_ACCUM_MINUTES");
            strQry.AppendLine(" END)");
            strQry.AppendLine(",INDICATOR =");
            strQry.AppendLine(" CASE");
            strQry.AppendLine(" WHEN C.WAGE_RUN_IND = 'Y' AND TIMESHEET_TABLE.DAY_DATE > TIMESHEET_TABLE.EMPLOYEE_LAST_RUNDATE AND TIMESHEET_TABLE.DAY_DATE <= PCPC.PAY_PERIOD_DATE");
            strQry.AppendLine(" THEN ''");
            strQry.AppendLine(" ELSE MAX(ISNULL(INDICATOR,''))");
            strQry.AppendLine(" END");
            strQry.AppendLine(",TIMESHEET_INCLUDED_IN_RUN_IND = ");
            strQry.AppendLine(" CASE");
            strQry.AppendLine(" WHEN C.WAGE_RUN_IND = 'Y' AND TIMESHEET_TABLE.DAY_DATE > TIMESHEET_TABLE.EMPLOYEE_LAST_RUNDATE AND TIMESHEET_TABLE.DAY_DATE <= PCPC.PAY_PERIOD_DATE");
            strQry.AppendLine(" THEN MIN(ISNULL(TIMESHEET_TABLE.INCLUDED_IN_RUN_IND,'N'))");
            strQry.AppendLine(" ELSE MAX(ISNULL(TIMESHEET_TABLE.INCLUDED_IN_RUN_IND,''))");
            strQry.AppendLine(" END");
            strQry.AppendLine("");
            strQry.AppendLine(" FROM");
            strQry.AppendLine("(");
            strQry.AppendLine("--1Start Timesheet UNION 2");
            strQry.AppendLine(" SELECT DISTINCT");
            strQry.AppendLine(" ETC.COMPANY_NO");
            strQry.AppendLine(",'#PAY_CATEGORY_TYPE#' AS PAY_CATEGORY_TYPE");
            strQry.AppendLine(",ETC.PAY_CATEGORY_NO");
            strQry.AppendLine(",ETC.EMPLOYEE_NO");
            strQry.AppendLine(",ETC.TIMESHEET_DATE AS DAY_DATE");
            strQry.AppendLine(",ETC.TIMESHEET_SEQ");
            strQry.AppendLine(",EMPLOYEE_LAST_RUNDATE = ");
            strQry.AppendLine(" CASE");
            strQry.AppendLine(" WHEN E.EMPLOYEE_LAST_RUNDATE IS NULL");
            strQry.AppendLine(" THEN DATEADD(DD,-360,GETDATE())");
            strQry.AppendLine(" WHEN ISNULL(E.FIRST_RUN_COMPLETED_IND,'') <> 'Y'");
            strQry.AppendLine(" THEN DATEADD(DD,-1,E.EMPLOYEE_LAST_RUNDATE)");
            strQry.AppendLine(" ELSE E.EMPLOYEE_LAST_RUNDATE");
            strQry.AppendLine(" END");
            strQry.AppendLine(",TIMESHEET_ACCUM_MINUTES = ");
            strQry.AppendLine(" CASE");
            strQry.AppendLine(" WHEN NOT TEMP.EMPLOYEE_NO IS NULL THEN");
            strQry.AppendLine(" CASE");
            strQry.AppendLine(" WHEN ETC.TIMESHEET_TIME_OUT_MINUTES IS NULL OR ETC.TIMESHEET_TIME_IN_MINUTES IS NULL");
            strQry.AppendLine(" THEN 0");
            strQry.AppendLine(" WHEN ETC.TIMESHEET_TIME_OUT_MINUTES > ETC.TIMESHEET_TIME_IN_MINUTES THEN");
            strQry.AppendLine(" ETC.TIMESHEET_TIME_OUT_MINUTES - ETC.TIMESHEET_TIME_IN_MINUTES");
            strQry.AppendLine(" ELSE 0");
            strQry.AppendLine(" END");
            strQry.AppendLine(" ELSE");
            strQry.AppendLine(" ETC.TIMESHEET_TIME_OUT_MINUTES - ETC.TIMESHEET_TIME_IN_MINUTES");
            strQry.AppendLine(" END");
            strQry.AppendLine(",INDICATOR = ");
            strQry.AppendLine(" CASE");
            strQry.AppendLine(" WHEN NOT TEMP.EMPLOYEE_NO IS NULL");
            strQry.AppendLine(" THEN 'X'");
            strQry.AppendLine(" ELSE ''");
            strQry.AppendLine(" END");
            strQry.AppendLine(",ETC.INCLUDED_IN_RUN_IND");
            strQry.AppendLine("");
            strQry.AppendLine(" FROM dbo.EMPLOYEE E");
            strQry.AppendLine("");
            strQry.AppendLine(" INNER JOIN dbo.#TIMESHEET_TABLE# ETC");
            strQry.AppendLine(" ON E.COMPANY_NO = ETC.COMPANY_NO");
            strQry.AppendLine(" AND E.EMPLOYEE_NO = ETC.EMPLOYEE_NO");
            strQry.AppendLine(" AND ((ETC.TIMESHEET_DATE > E.EMPLOYEE_LAST_RUNDATE");
            strQry.AppendLine(" AND E.FIRST_RUN_COMPLETED_IND = 'Y')");
            strQry.AppendLine(" OR (ETC.TIMESHEET_DATE >= ISNULL(E.EMPLOYEE_LAST_RUNDATE,DATEADD(DD,-360,GETDATE()))");
            strQry.AppendLine(" AND ISNULL(E.FIRST_RUN_COMPLETED_IND,'') <> 'Y'))");
            strQry.AppendLine("");
            strQry.AppendLine(" INNER JOIN");
            strQry.AppendLine("(");
            strQry.AppendLine(" SELECT DISTINCT");
            strQry.AppendLine(" COMPANY_NO");
            strQry.AppendLine(",PAY_CATEGORY_NO");
            strQry.AppendLine(",EMPLOYEE_NO");
            strQry.AppendLine(",#DATE_FIELD#");
            strQry.AppendLine(" FROM INSERTED");
            strQry.AppendLine(") AS I");
            strQry.AppendLine(" ON ETC.COMPANY_NO = I.COMPANY_NO");
            strQry.AppendLine(" AND ETC.EMPLOYEE_NO = I.EMPLOYEE_NO");
            strQry.AppendLine(" AND ETC.PAY_CATEGORY_NO = I.PAY_CATEGORY_NO");
            strQry.AppendLine(" AND ETC.TIMESHEET_DATE = I.#TIMESHEET_OR_BREAK#_DATE");
            strQry.AppendLine("");
            strQry.AppendLine(" LEFT JOIN");
            strQry.AppendLine("(");
            strQry.AppendLine(" SELECT DISTINCT");
            strQry.AppendLine(" ETC.EMPLOYEE_NO");
            strQry.AppendLine(",ETC.TIMESHEET_DATE");
            strQry.AppendLine(",ETC.TIMESHEET_SEQ");
            strQry.AppendLine("");
            strQry.AppendLine(" FROM dbo.EMPLOYEE E");
            strQry.AppendLine("");
            strQry.AppendLine(" INNER JOIN");
            strQry.AppendLine("(");
            strQry.AppendLine(" SELECT");
            strQry.AppendLine(" ROW_NUMBER() OVER");
            strQry.AppendLine(" (ORDER BY");
            strQry.AppendLine(" ETC.COMPANY_NO");
            strQry.AppendLine(",ETC.EMPLOYEE_NO");
            strQry.AppendLine(",ETC.PAY_CATEGORY_NO");
            strQry.AppendLine(",ETC.TIMESHEET_DATE");
            strQry.AppendLine(",ETC.TIMESHEET_TIME_IN_MINUTES");
            strQry.AppendLine(",ETC.TIMESHEET_TIME_OUT_MINUTES) AS SORTED_REC");
            strQry.AppendLine(",ETC.COMPANY_NO");
            strQry.AppendLine(",ETC.PAY_CATEGORY_NO");
            strQry.AppendLine(",ETC.EMPLOYEE_NO");
            strQry.AppendLine(",ETC.TIMESHEET_DATE");
            strQry.AppendLine(",ETC.TIMESHEET_SEQ");
            strQry.AppendLine(",ETC.TIMESHEET_TIME_IN_MINUTES");
            strQry.AppendLine(",ETC.TIMESHEET_TIME_OUT_MINUTES");
            strQry.AppendLine("");
            strQry.AppendLine(" FROM dbo.#TIMESHEET_TABLE# ETC");
            strQry.AppendLine("");
            strQry.AppendLine(" INNER JOIN");
            strQry.AppendLine("(");
            strQry.AppendLine(" SELECT DISTINCT");
            strQry.AppendLine(" COMPANY_NO");
            strQry.AppendLine(",PAY_CATEGORY_NO");
            strQry.AppendLine(",EMPLOYEE_NO");
            strQry.AppendLine(",#DATE_FIELD#");
            strQry.AppendLine(" FROM INSERTED");
            strQry.AppendLine(") AS I");
            strQry.AppendLine(" ON ETC.COMPANY_NO = I.COMPANY_NO");
            strQry.AppendLine(" AND ETC.EMPLOYEE_NO = I.EMPLOYEE_NO");
            strQry.AppendLine(" AND ETC.PAY_CATEGORY_NO = I.PAY_CATEGORY_NO");
            strQry.AppendLine(" AND ETC.TIMESHEET_DATE = I.#TIMESHEET_OR_BREAK#_DATE");
            strQry.AppendLine(") AS ETC");
            strQry.AppendLine(" ON E.COMPANY_NO = ETC.COMPANY_NO");
            strQry.AppendLine(" AND E.EMPLOYEE_NO = ETC.EMPLOYEE_NO");
            strQry.AppendLine(" AND ((ETC.TIMESHEET_DATE > E.EMPLOYEE_LAST_RUNDATE");
            strQry.AppendLine(" AND E.FIRST_RUN_COMPLETED_IND = 'Y')");
            strQry.AppendLine(" OR (ETC.TIMESHEET_DATE >= ISNULL(E.EMPLOYEE_LAST_RUNDATE,DATEADD(DD,-360,GETDATE()))");
            strQry.AppendLine(" AND ISNULL(E.FIRST_RUN_COMPLETED_IND,'') <> 'Y'))");
            strQry.AppendLine("");
            strQry.AppendLine(" INNER JOIN");
            strQry.AppendLine("(");
            strQry.AppendLine(" SELECT");
            strQry.AppendLine(" ROW_NUMBER() OVER");
            strQry.AppendLine("(ORDER BY");
            strQry.AppendLine(" ETC.COMPANY_NO");
            strQry.AppendLine(",ETC.EMPLOYEE_NO");
            strQry.AppendLine(",ETC.PAY_CATEGORY_NO");
            strQry.AppendLine(",ETC.TIMESHEET_DATE");
            strQry.AppendLine(",ETC.TIMESHEET_TIME_IN_MINUTES");
            strQry.AppendLine(",ETC.TIMESHEET_TIME_OUT_MINUTES) AS SORTED_REC");
            strQry.AppendLine(",ETC.COMPANY_NO");
            strQry.AppendLine(",ETC.PAY_CATEGORY_NO");
            strQry.AppendLine(",ETC.EMPLOYEE_NO");
            strQry.AppendLine(",ETC.TIMESHEET_DATE");
            strQry.AppendLine(",ETC.TIMESHEET_SEQ");
            strQry.AppendLine(",ETC.TIMESHEET_TIME_IN_MINUTES");
            strQry.AppendLine(",ETC.TIMESHEET_TIME_OUT_MINUTES");
            strQry.AppendLine("");
            strQry.AppendLine(" FROM dbo.#TIMESHEET_TABLE# ETC");
            strQry.AppendLine("");
            strQry.AppendLine(" INNER JOIN");
            strQry.AppendLine("(");
            strQry.AppendLine(" SELECT DISTINCT");
            strQry.AppendLine(" COMPANY_NO");
            strQry.AppendLine(",PAY_CATEGORY_NO");
            strQry.AppendLine(",EMPLOYEE_NO");
            strQry.AppendLine(",#DATE_FIELD#");
            strQry.AppendLine(" FROM INSERTED");
            strQry.AppendLine(") AS I");
            strQry.AppendLine(" ON ETC.COMPANY_NO = I.COMPANY_NO");
            strQry.AppendLine(" AND ETC.EMPLOYEE_NO = I.EMPLOYEE_NO");
            strQry.AppendLine(" AND ETC.PAY_CATEGORY_NO = I.PAY_CATEGORY_NO");
            strQry.AppendLine(" AND ETC.TIMESHEET_DATE = I.#TIMESHEET_OR_BREAK#_DATE");
            strQry.AppendLine(") AS ETC2");
            strQry.AppendLine(" ON ETC.COMPANY_NO = ETC2.COMPANY_NO");
            strQry.AppendLine(" AND ETC.PAY_CATEGORY_NO = ETC2.PAY_CATEGORY_NO");
            strQry.AppendLine(" AND ETC.EMPLOYEE_NO = ETC2.EMPLOYEE_NO");
            strQry.AppendLine(" AND ETC.TIMESHEET_DATE = ETC2.TIMESHEET_DATE");
            strQry.AppendLine("");
            strQry.AppendLine(" WHERE E.DATETIME_DELETE_RECORD IS NULL");
            strQry.AppendLine(" AND E.EMPLOYEE_ENDDATE IS NULL");
            strQry.AppendLine(" AND E.PAY_CATEGORY_TYPE = '#PAY_CATEGORY_TYPE#'");
            strQry.AppendLine(" AND ((ETC.TIMESHEET_TIME_IN_MINUTES IS NULL");
            strQry.AppendLine(" OR ETC.TIMESHEET_TIME_OUT_MINUTES IS NULL)");
            //Errol 2016-06-22
            strQry.AppendLine(" OR (ETC.TIMESHEET_TIME_IN_MINUTES >= ETC2.TIMESHEET_TIME_OUT_MINUTES");
            strQry.AppendLine(" AND ETC.SORTED_REC <= ETC2.SORTED_REC)");
            strQry.AppendLine(" OR (ETC.TIMESHEET_TIME_IN_MINUTES < ETC2.TIMESHEET_TIME_OUT_MINUTES");
            strQry.AppendLine(" AND ETC.SORTED_REC > ETC2.SORTED_REC))");
            strQry.AppendLine(") AS TEMP");
            strQry.AppendLine(" ON ETC.EMPLOYEE_NO = TEMP.EMPLOYEE_NO");
            strQry.AppendLine(" AND ETC.TIMESHEET_DATE = TEMP.TIMESHEET_DATE");
            strQry.AppendLine(" AND ETC.TIMESHEET_SEQ = TEMP.TIMESHEET_SEQ");
            strQry.AppendLine("");
            strQry.AppendLine(" INNER JOIN dbo.EMPLOYEE_PAY_CATEGORY EPC");
            strQry.AppendLine(" ON ETC.COMPANY_NO = EPC.COMPANY_NO");
            strQry.AppendLine(" AND ETC.EMPLOYEE_NO = EPC.EMPLOYEE_NO");
            strQry.AppendLine(" AND ETC.PAY_CATEGORY_NO = EPC.PAY_CATEGORY_NO");
            strQry.AppendLine(" AND EPC.PAY_CATEGORY_TYPE = '#PAY_CATEGORY_TYPE#'");
            strQry.AppendLine(" AND EPC.DATETIME_DELETE_RECORD IS NULL");
            strQry.AppendLine("");
            strQry.AppendLine(" INNER JOIN dbo.PAY_CATEGORY PC");
            strQry.AppendLine(" ON ETC.COMPANY_NO = PC.COMPANY_NO");
            strQry.AppendLine(" AND ETC.PAY_CATEGORY_NO = PC.PAY_CATEGORY_NO");
            strQry.AppendLine(" AND PC.PAY_CATEGORY_TYPE = '#PAY_CATEGORY_TYPE#'");
            strQry.AppendLine(" AND PC.DATETIME_DELETE_RECORD IS NULL");
            strQry.AppendLine("");
            strQry.AppendLine(" WHERE E.DATETIME_DELETE_RECORD IS NULL");
            strQry.AppendLine(" AND E.EMPLOYEE_ENDDATE IS NULL");
            strQry.AppendLine(" AND E.PAY_CATEGORY_TYPE = '#PAY_CATEGORY_TYPE#'");
            strQry.AppendLine("--1End Timesheet UNION 2");
            strQry.AppendLine(") AS TIMESHEET_TABLE");
            strQry.AppendLine("");
            strQry.AppendLine(" INNER JOIN dbo.COMPANY C");
            strQry.AppendLine(" ON TIMESHEET_TABLE.COMPANY_NO = C.COMPANY_NO");
            strQry.AppendLine(" AND C.DATETIME_DELETE_RECORD IS NULL");
            strQry.AppendLine("");
            strQry.AppendLine(" LEFT JOIN dbo.PAY_CATEGORY_PERIOD_CURRENT PCPC");
            strQry.AppendLine(" ON TIMESHEET_TABLE.COMPANY_NO = PCPC.COMPANY_NO");
            strQry.AppendLine(" AND TIMESHEET_TABLE.PAY_CATEGORY_NO = PCPC.PAY_CATEGORY_NO");
            strQry.AppendLine(" AND TIMESHEET_TABLE.PAY_CATEGORY_TYPE = PCPC.PAY_CATEGORY_TYPE");
            strQry.AppendLine(" AND PCPC.RUN_TYPE = 'P'");
            strQry.AppendLine("");
            strQry.AppendLine(" GROUP BY");
            strQry.AppendLine(" TIMESHEET_TABLE.COMPANY_NO");
            strQry.AppendLine(",TIMESHEET_TABLE.PAY_CATEGORY_TYPE");
            strQry.AppendLine(",TIMESHEET_TABLE.PAY_CATEGORY_NO");
            strQry.AppendLine(",TIMESHEET_TABLE.EMPLOYEE_NO");
            strQry.AppendLine(",TIMESHEET_TABLE.DAY_DATE");
            strQry.AppendLine(",TIMESHEET_TABLE.EMPLOYEE_LAST_RUNDATE");
            strQry.AppendLine(",PCPC.PAY_PERIOD_DATE");
            strQry.AppendLine(",C.WAGE_RUN_IND");
            strQry.AppendLine("--2End Timesheet UNION 2");
            strQry.AppendLine(") AS TIMESHEET_SUMMARY_TABLE");
            strQry.AppendLine("");
            strQry.AppendLine(" LEFT JOIN dbo.PAY_CATEGORY_BREAK PCB");
            strQry.AppendLine(" ON TIMESHEET_SUMMARY_TABLE.COMPANY_NO = PCB.COMPANY_NO");
            strQry.AppendLine(" AND TIMESHEET_SUMMARY_TABLE.PAY_CATEGORY_NO = PCB.PAY_CATEGORY_NO");
            strQry.AppendLine(" AND TIMESHEET_SUMMARY_TABLE.PAY_CATEGORY_TYPE = PCB.PAY_CATEGORY_TYPE");
            strQry.AppendLine(" AND PCB.DATETIME_DELETE_RECORD IS NULL");
            strQry.AppendLine(" AND TIMESHEET_SUMMARY_TABLE.TIMESHEET_ACCUM_MINUTES >= PCB.WORKED_TIME_MINUTES");
            strQry.AppendLine("");
            strQry.AppendLine(" GROUP BY");
            strQry.AppendLine(" TIMESHEET_SUMMARY_TABLE.COMPANY_NO");
            strQry.AppendLine(",TIMESHEET_SUMMARY_TABLE.PAY_CATEGORY_TYPE");
            strQry.AppendLine(",TIMESHEET_SUMMARY_TABLE.PAY_CATEGORY_NO");
            strQry.AppendLine(",TIMESHEET_SUMMARY_TABLE.EMPLOYEE_NO");
            strQry.AppendLine(",TIMESHEET_SUMMARY_TABLE.DAY_DATE");
            strQry.AppendLine(",TIMESHEET_SUMMARY_TABLE.TIMESHEET_ACCUM_MINUTES");
            strQry.AppendLine(",TIMESHEET_SUMMARY_TABLE.INDICATOR");
            strQry.AppendLine(",TIMESHEET_SUMMARY_TABLE.TIMESHEET_INCLUDED_IN_RUN_IND");
            strQry.AppendLine("--3End Timesheet UNION 2");
            strQry.AppendLine(") AS TIMESHEET_TOTAL_TABLE");
            strQry.AppendLine("");
            strQry.AppendLine(" INNER JOIN dbo.COMPANY C");
            strQry.AppendLine(" ON TIMESHEET_TOTAL_TABLE.COMPANY_NO = C.COMPANY_NO");
            strQry.AppendLine(" AND C.DATETIME_DELETE_RECORD IS NULL");
            strQry.AppendLine("");
            strQry.AppendLine(" LEFT JOIN");
            strQry.AppendLine("(");
            strQry.AppendLine("--3Start Break UNION 2");
            strQry.AppendLine(" SELECT");
            strQry.AppendLine(" BREAK_TABLE.COMPANY_NO");
            strQry.AppendLine(",BREAK_TABLE.PAY_CATEGORY_TYPE");
            strQry.AppendLine(",BREAK_TABLE.PAY_CATEGORY_NO");
            strQry.AppendLine(",BREAK_TABLE.EMPLOYEE_NO");
            strQry.AppendLine(",BREAK_TABLE.DAY_DATE");
            strQry.AppendLine(",BREAK_ACCUM_MINUTES = ");
            strQry.AppendLine(" SUM(CASE");
            strQry.AppendLine(" WHEN C.WAGE_RUN_IND = 'Y' AND BREAK_TABLE.DAY_DATE > BREAK_TABLE.EMPLOYEE_LAST_RUNDATE AND BREAK_TABLE.DAY_DATE <= PCPC.PAY_PERIOD_DATE AND BREAK_TABLE.INCLUDED_IN_RUN_IND = 'Y'");
            strQry.AppendLine(" THEN BREAK_TABLE.BREAK_ACCUM_MINUTES");
            strQry.AppendLine(" WHEN C.WAGE_RUN_IND = 'Y' AND BREAK_TABLE.DAY_DATE > BREAK_TABLE.EMPLOYEE_LAST_RUNDATE AND BREAK_TABLE.DAY_DATE <= PCPC.PAY_PERIOD_DATE AND BREAK_TABLE.INCLUDED_IN_RUN_IND IS NULL");
            strQry.AppendLine(" THEN 0");
            strQry.AppendLine(" ELSE BREAK_TABLE.BREAK_ACCUM_MINUTES");
            strQry.AppendLine(" END)");
            strQry.AppendLine(",INDICATOR = ");
            strQry.AppendLine(" CASE");
            strQry.AppendLine(" WHEN C.WAGE_RUN_IND = 'Y' AND BREAK_TABLE.DAY_DATE > BREAK_TABLE.EMPLOYEE_LAST_RUNDATE AND BREAK_TABLE.DAY_DATE <= PCPC.PAY_PERIOD_DATE");
            strQry.AppendLine(" THEN ''");
            strQry.AppendLine(" ELSE MAX(ISNULL(BREAK_TABLE.INDICATOR,''))");
            strQry.AppendLine(" END");
            strQry.AppendLine(",BREAK_INCLUDED_IN_RUN_IND = ");
            strQry.AppendLine(" CASE");
            strQry.AppendLine(" WHEN C.WAGE_RUN_IND = 'Y' AND BREAK_TABLE.DAY_DATE > BREAK_TABLE.EMPLOYEE_LAST_RUNDATE AND BREAK_TABLE.DAY_DATE <= PCPC.PAY_PERIOD_DATE");
            strQry.AppendLine(" THEN MIN(ISNULL(BREAK_TABLE.INCLUDED_IN_RUN_IND,'N'))");
            strQry.AppendLine(" ELSE MAX(ISNULL(BREAK_TABLE.INCLUDED_IN_RUN_IND,''))");
            strQry.AppendLine(" END");
            strQry.AppendLine("");
            strQry.AppendLine(" FROM");
            strQry.AppendLine("(");
            strQry.AppendLine("--2Start Break UNION 2");
            strQry.AppendLine(" SELECT");
            strQry.AppendLine(" EBC.COMPANY_NO");
            strQry.AppendLine(",'#PAY_CATEGORY_TYPE#' AS PAY_CATEGORY_TYPE");
            strQry.AppendLine(",EBC.PAY_CATEGORY_NO");
            strQry.AppendLine(",EBC.EMPLOYEE_NO");
            strQry.AppendLine(",EBC.BREAK_DATE AS DAY_DATE");
            strQry.AppendLine(",EBC.BREAK_SEQ");
            strQry.AppendLine(",EMPLOYEE_LAST_RUNDATE = ");
            strQry.AppendLine(" CASE");
            strQry.AppendLine(" WHEN E.EMPLOYEE_LAST_RUNDATE IS NULL");
            strQry.AppendLine(" THEN DATEADD(DD,-360,GETDATE())");
            strQry.AppendLine(" WHEN ISNULL(E.FIRST_RUN_COMPLETED_IND,'') <> 'Y'");
            strQry.AppendLine(" THEN DATEADD(DD,-1,E.EMPLOYEE_LAST_RUNDATE)");
            strQry.AppendLine(" ELSE E.EMPLOYEE_LAST_RUNDATE");
            strQry.AppendLine(" END");
            strQry.AppendLine(",BREAK_ACCUM_MINUTES = ");
            strQry.AppendLine(" CASE");
            strQry.AppendLine(" WHEN NOT TEMP.EMPLOYEE_NO IS NULL THEN");
            strQry.AppendLine(" CASE");
            strQry.AppendLine(" WHEN EBC.BREAK_TIME_OUT_MINUTES IS NULL OR EBC.BREAK_TIME_IN_MINUTES IS NULL");
            strQry.AppendLine(" THEN 0");
            strQry.AppendLine(" WHEN EBC.BREAK_TIME_OUT_MINUTES > EBC.BREAK_TIME_IN_MINUTES THEN");
            strQry.AppendLine(" EBC.BREAK_TIME_OUT_MINUTES - EBC.BREAK_TIME_IN_MINUTES");
            strQry.AppendLine(" ELSE 0");
            strQry.AppendLine(" END");
            strQry.AppendLine(" ELSE");
            strQry.AppendLine(" EBC.BREAK_TIME_OUT_MINUTES - EBC.BREAK_TIME_IN_MINUTES");
            strQry.AppendLine(" END");
            strQry.AppendLine(",INDICATOR = ");
            strQry.AppendLine(" CASE");
            strQry.AppendLine(" WHEN NOT TEMP.EMPLOYEE_NO IS NULL");
            strQry.AppendLine(" THEN 'X'");
            strQry.AppendLine(" ELSE ''");
            strQry.AppendLine(" END");
            strQry.AppendLine(",EBC.INCLUDED_IN_RUN_IND");
            strQry.AppendLine("");
            strQry.AppendLine(" FROM dbo.EMPLOYEE E");
            strQry.AppendLine("");
            strQry.AppendLine(" INNER JOIN dbo.#BREAK_TABLE# EBC");
            strQry.AppendLine(" ON E.COMPANY_NO = EBC.COMPANY_NO");
            strQry.AppendLine(" AND E.EMPLOYEE_NO = EBC.EMPLOYEE_NO");
            strQry.AppendLine(" AND ((EBC.BREAK_DATE > E.EMPLOYEE_LAST_RUNDATE");
            strQry.AppendLine(" AND E.FIRST_RUN_COMPLETED_IND = 'Y')");
            strQry.AppendLine(" OR (EBC.BREAK_DATE >= ISNULL(E.EMPLOYEE_LAST_RUNDATE,DATEADD(DD,-360,GETDATE()))");
            strQry.AppendLine(" AND ISNULL(E.FIRST_RUN_COMPLETED_IND,'') <> 'Y'))");
            strQry.AppendLine("");
            strQry.AppendLine(" INNER JOIN");
            strQry.AppendLine("(");
            strQry.AppendLine(" SELECT DISTINCT");
            strQry.AppendLine(" COMPANY_NO");
            strQry.AppendLine(",PAY_CATEGORY_NO");
            strQry.AppendLine(",EMPLOYEE_NO");
            strQry.AppendLine(",#DATE_FIELD#");
            strQry.AppendLine(" FROM INSERTED");
            strQry.AppendLine(") AS I");
            strQry.AppendLine(" ON EBC.COMPANY_NO = I.COMPANY_NO");
            strQry.AppendLine(" AND EBC.EMPLOYEE_NO = I.EMPLOYEE_NO");
            strQry.AppendLine(" AND EBC.PAY_CATEGORY_NO = I.PAY_CATEGORY_NO");
            strQry.AppendLine(" AND EBC.BREAK_DATE = I.#TIMESHEET_OR_BREAK#_DATE");
            strQry.AppendLine("");
            strQry.AppendLine("LEFT JOIN");
            strQry.AppendLine("(");
            strQry.AppendLine("--1Start Break UNION 2");
            strQry.AppendLine(" SELECT");
            strQry.AppendLine(" EBC.EMPLOYEE_NO");
            strQry.AppendLine(",EBC.BREAK_DATE");
            strQry.AppendLine(",EBC.BREAK_SEQ");
            strQry.AppendLine(",EBC.BREAK_TIME_IN_MINUTES");
            strQry.AppendLine(",EBC.BREAK_TIME_OUT_MINUTES");
            strQry.AppendLine(",EBC.INCLUDED_IN_RUN_IND");
            strQry.AppendLine("");
            strQry.AppendLine(" FROM dbo.EMPLOYEE E");
            strQry.AppendLine("");
            strQry.AppendLine(" INNER JOIN");
            strQry.AppendLine("(");
            strQry.AppendLine(" SELECT");
            strQry.AppendLine(" ROW_NUMBER() OVER");
            strQry.AppendLine(" (ORDER BY");
            strQry.AppendLine(" EBC.COMPANY_NO");
            strQry.AppendLine(",EBC.EMPLOYEE_NO");
            strQry.AppendLine(",EBC.PAY_CATEGORY_NO");
            strQry.AppendLine(",EBC.BREAK_DATE");
            strQry.AppendLine(",EBC.BREAK_TIME_IN_MINUTES");
            strQry.AppendLine(",EBC.BREAK_TIME_OUT_MINUTES) AS SORTED_REC");
            strQry.AppendLine(",EBC.COMPANY_NO");
            strQry.AppendLine(",EBC.PAY_CATEGORY_NO");
            strQry.AppendLine(",EBC.EMPLOYEE_NO");
            strQry.AppendLine(",EBC.BREAK_DATE");
            strQry.AppendLine(",EBC.BREAK_SEQ");
            strQry.AppendLine(",EBC.BREAK_TIME_IN_MINUTES");
            strQry.AppendLine(",EBC.BREAK_TIME_OUT_MINUTES");
            strQry.AppendLine(",EBC.INCLUDED_IN_RUN_IND");
            strQry.AppendLine("");
            strQry.AppendLine(" FROM dbo.#BREAK_TABLE# EBC");
            strQry.AppendLine("");
            strQry.AppendLine(" INNER JOIN");
            strQry.AppendLine("(");
            strQry.AppendLine(" SELECT DISTINCT");
            strQry.AppendLine(" COMPANY_NO");
            strQry.AppendLine(",PAY_CATEGORY_NO");
            strQry.AppendLine(",EMPLOYEE_NO");
            strQry.AppendLine(",#DATE_FIELD#");
            strQry.AppendLine(" FROM INSERTED");
            strQry.AppendLine(") AS I");
            strQry.AppendLine(" ON EBC.COMPANY_NO = I.COMPANY_NO");
            strQry.AppendLine(" AND EBC.EMPLOYEE_NO = I.EMPLOYEE_NO");
            strQry.AppendLine(" AND EBC.PAY_CATEGORY_NO = I.PAY_CATEGORY_NO");
            strQry.AppendLine(" AND EBC.BREAK_DATE = I.#TIMESHEET_OR_BREAK#_DATE");
            strQry.AppendLine(") AS EBC");
            strQry.AppendLine(" ON E.COMPANY_NO = EBC.COMPANY_NO");
            strQry.AppendLine(" AND E.EMPLOYEE_NO = EBC.EMPLOYEE_NO");
            strQry.AppendLine(" AND ((EBC.BREAK_DATE > E.EMPLOYEE_LAST_RUNDATE");
            strQry.AppendLine(" AND E.FIRST_RUN_COMPLETED_IND = 'Y')");
            strQry.AppendLine(" OR (EBC.BREAK_DATE >= ISNULL(E.EMPLOYEE_LAST_RUNDATE,DATEADD(DD,-360,GETDATE()))");
            strQry.AppendLine(" AND ISNULL(E.FIRST_RUN_COMPLETED_IND,'') <> 'Y'))");
            strQry.AppendLine("--1End Break UNION 2");
            strQry.AppendLine("");
            strQry.AppendLine(" INNER JOIN");
            strQry.AppendLine("(");
            strQry.AppendLine(" SELECT");
            strQry.AppendLine(" ROW_NUMBER() OVER");
            strQry.AppendLine(" (ORDER BY");
            strQry.AppendLine(" EBC.COMPANY_NO");
            strQry.AppendLine(",EBC.EMPLOYEE_NO");
            strQry.AppendLine(",EBC.PAY_CATEGORY_NO");
            strQry.AppendLine(",EBC.BREAK_DATE");
            strQry.AppendLine(",EBC.BREAK_TIME_IN_MINUTES");
            strQry.AppendLine(",EBC.BREAK_TIME_OUT_MINUTES) AS SORTED_REC");
            strQry.AppendLine(",EBC.COMPANY_NO");
            strQry.AppendLine(",EBC.PAY_CATEGORY_NO");
            strQry.AppendLine(",EBC.EMPLOYEE_NO");
            strQry.AppendLine(",EBC.BREAK_DATE");
            strQry.AppendLine(",EBC.BREAK_SEQ");
            strQry.AppendLine(",EBC.BREAK_TIME_IN_MINUTES");
            strQry.AppendLine(",EBC.BREAK_TIME_OUT_MINUTES");
            strQry.AppendLine("");
            strQry.AppendLine(" FROM dbo.#BREAK_TABLE# EBC");
            strQry.AppendLine("");
            strQry.AppendLine(" INNER JOIN");
            strQry.AppendLine("(");
            strQry.AppendLine(" SELECT DISTINCT");
            strQry.AppendLine(" COMPANY_NO");
            strQry.AppendLine(",PAY_CATEGORY_NO");
            strQry.AppendLine(",EMPLOYEE_NO");
            strQry.AppendLine(",#DATE_FIELD#");
            strQry.AppendLine(" FROM INSERTED");
            strQry.AppendLine(") AS I");
            strQry.AppendLine(" ON EBC.COMPANY_NO = I.COMPANY_NO");
            strQry.AppendLine(" AND EBC.EMPLOYEE_NO = I.EMPLOYEE_NO");
            strQry.AppendLine(" AND EBC.PAY_CATEGORY_NO = I.PAY_CATEGORY_NO");
            strQry.AppendLine(" AND EBC.BREAK_DATE = I.#TIMESHEET_OR_BREAK#_DATE");
            strQry.AppendLine(") AS EBC2");
            strQry.AppendLine(" ON EBC.COMPANY_NO = EBC2.COMPANY_NO");
            strQry.AppendLine(" AND EBC.PAY_CATEGORY_NO = EBC2.PAY_CATEGORY_NO");
            strQry.AppendLine(" AND EBC.EMPLOYEE_NO = EBC2.EMPLOYEE_NO");
            strQry.AppendLine(" AND EBC.BREAK_DATE = EBC2.BREAK_DATE");
            strQry.AppendLine("");
            strQry.AppendLine(" WHERE E.DATETIME_DELETE_RECORD IS NULL");
            strQry.AppendLine(" AND E.EMPLOYEE_ENDDATE IS NULL");
            strQry.AppendLine(" AND E.PAY_CATEGORY_TYPE = '#PAY_CATEGORY_TYPE#'");
            strQry.AppendLine(" AND ((EBC.BREAK_TIME_IN_MINUTES IS NULL");
            strQry.AppendLine(" OR EBC.BREAK_TIME_OUT_MINUTES IS NULL)");
            //Errol - 2016-06-22
            strQry.AppendLine(" OR (EBC.BREAK_TIME_IN_MINUTES >= EBC2.BREAK_TIME_OUT_MINUTES");
            strQry.AppendLine(" AND EBC.SORTED_REC <= EBC2.SORTED_REC)");
            strQry.AppendLine(" OR (EBC.BREAK_TIME_IN_MINUTES < EBC2.BREAK_TIME_OUT_MINUTES");
            strQry.AppendLine(" AND EBC.SORTED_REC > EBC2.SORTED_REC))");
            strQry.AppendLine(") AS TEMP");
            strQry.AppendLine(" ON EBC.EMPLOYEE_NO = TEMP.EMPLOYEE_NO");
            strQry.AppendLine(" AND EBC.BREAK_DATE = TEMP.BREAK_DATE");
            strQry.AppendLine(" AND EBC.BREAK_SEQ = TEMP.BREAK_SEQ");
            strQry.AppendLine("");
            strQry.AppendLine(" INNER JOIN dbo.EMPLOYEE_PAY_CATEGORY EPC");
            strQry.AppendLine(" ON EBC.COMPANY_NO = EPC.COMPANY_NO");
            strQry.AppendLine(" AND EBC.EMPLOYEE_NO = EPC.EMPLOYEE_NO");
            strQry.AppendLine(" AND EBC.PAY_CATEGORY_NO = EPC.PAY_CATEGORY_NO");
            strQry.AppendLine(" AND EPC.PAY_CATEGORY_TYPE = '#PAY_CATEGORY_TYPE#'");
            strQry.AppendLine(" AND EPC.DATETIME_DELETE_RECORD IS NULL");
            strQry.AppendLine("");
            strQry.AppendLine(" INNER JOIN dbo.PAY_CATEGORY PC");
            strQry.AppendLine(" ON EBC.COMPANY_NO = PC.COMPANY_NO");
            strQry.AppendLine(" AND EBC.PAY_CATEGORY_NO = PC.PAY_CATEGORY_NO");
            strQry.AppendLine(" AND PC.PAY_CATEGORY_TYPE = '#PAY_CATEGORY_TYPE#'");
            strQry.AppendLine(" AND PC.DATETIME_DELETE_RECORD IS NULL");
            strQry.AppendLine("");
            strQry.AppendLine(" WHERE E.DATETIME_DELETE_RECORD IS NULL");
            strQry.AppendLine(" AND E.EMPLOYEE_ENDDATE IS NULL");
            strQry.AppendLine(" AND E.PAY_CATEGORY_TYPE = '#PAY_CATEGORY_TYPE#'");
            strQry.AppendLine("");
            strQry.AppendLine(" GROUP BY");
            strQry.AppendLine(" EBC.COMPANY_NO");
            strQry.AppendLine(",EBC.PAY_CATEGORY_NO");
            strQry.AppendLine(",EBC.EMPLOYEE_NO");
            strQry.AppendLine(",EBC.BREAK_DATE");
            strQry.AppendLine(",EBC.BREAK_SEQ");
            strQry.AppendLine(",E.EMPLOYEE_LAST_RUNDATE");
            strQry.AppendLine(",E.FIRST_RUN_COMPLETED_IND");
            strQry.AppendLine(",TEMP.EMPLOYEE_NO");
            strQry.AppendLine(",EBC.BREAK_TIME_OUT_MINUTES");
            strQry.AppendLine(",EBC.BREAK_TIME_IN_MINUTES");
            strQry.AppendLine(",EBC.INCLUDED_IN_RUN_IND");
            strQry.AppendLine("--2End Break UNION 2");
            strQry.AppendLine(") AS BREAK_TABLE");
            strQry.AppendLine("");
            strQry.AppendLine(" INNER JOIN dbo.COMPANY C");
            strQry.AppendLine(" ON BREAK_TABLE.COMPANY_NO = C.COMPANY_NO");
            strQry.AppendLine(" AND C.DATETIME_DELETE_RECORD IS NULL");
            strQry.AppendLine("");
            strQry.AppendLine(" LEFT JOIN dbo.PAY_CATEGORY_PERIOD_CURRENT PCPC");
            strQry.AppendLine(" ON BREAK_TABLE.COMPANY_NO = PCPC.COMPANY_NO");
            strQry.AppendLine(" AND BREAK_TABLE.PAY_CATEGORY_NO = PCPC.PAY_CATEGORY_NO");
            strQry.AppendLine(" AND BREAK_TABLE.PAY_CATEGORY_TYPE = PCPC.PAY_CATEGORY_TYPE");
            strQry.AppendLine(" AND PCPC.RUN_TYPE = 'P'");
            strQry.AppendLine("");
            strQry.AppendLine(" GROUP BY");
            strQry.AppendLine(" BREAK_TABLE.COMPANY_NO");
            strQry.AppendLine(",BREAK_TABLE.PAY_CATEGORY_TYPE");
            strQry.AppendLine(",BREAK_TABLE.PAY_CATEGORY_NO");
            strQry.AppendLine(",BREAK_TABLE.EMPLOYEE_NO");
            strQry.AppendLine(",BREAK_TABLE.DAY_DATE");
            strQry.AppendLine(",BREAK_TABLE.EMPLOYEE_LAST_RUNDATE");
            strQry.AppendLine(",PCPC.PAY_PERIOD_DATE");
            strQry.AppendLine(",C.WAGE_RUN_IND");
            strQry.AppendLine("--3End Break UNION 2");
            strQry.AppendLine(") AS BREAK_SUMMARY_TABLE");
            strQry.AppendLine(" ON TIMESHEET_TOTAL_TABLE.COMPANY_NO = BREAK_SUMMARY_TABLE.COMPANY_NO");
            strQry.AppendLine(" AND TIMESHEET_TOTAL_TABLE.PAY_CATEGORY_TYPE = BREAK_SUMMARY_TABLE.PAY_CATEGORY_TYPE");
            strQry.AppendLine(" AND TIMESHEET_TOTAL_TABLE.PAY_CATEGORY_NO = BREAK_SUMMARY_TABLE.PAY_CATEGORY_NO");
            strQry.AppendLine(" AND TIMESHEET_TOTAL_TABLE.EMPLOYEE_NO = BREAK_SUMMARY_TABLE.EMPLOYEE_NO");
            strQry.AppendLine(" AND TIMESHEET_TOTAL_TABLE.DAY_DATE = BREAK_SUMMARY_TABLE.DAY_DATE");
            strQry.AppendLine("");
            strQry.AppendLine(" GROUP BY");
            strQry.AppendLine(" TIMESHEET_TOTAL_TABLE.COMPANY_NO");
            strQry.AppendLine(",TIMESHEET_TOTAL_TABLE.PAY_CATEGORY_TYPE");
            strQry.AppendLine(",TIMESHEET_TOTAL_TABLE.PAY_CATEGORY_NO");
            strQry.AppendLine(",TIMESHEET_TOTAL_TABLE.EMPLOYEE_NO");
            strQry.AppendLine(",TIMESHEET_TOTAL_TABLE.DAY_DATE");
            strQry.AppendLine(",TIMESHEET_TOTAL_TABLE.TIMESHEET_ACCUM_MINUTES");
            strQry.AppendLine(",TIMESHEET_TOTAL_TABLE.INDICATOR");
            strQry.AppendLine(",TIMESHEET_TOTAL_TABLE.BREAK_MINUTES");
            strQry.AppendLine(",BREAK_SUMMARY_TABLE.BREAK_ACCUM_MINUTES");
            strQry.AppendLine(",BREAK_SUMMARY_TABLE.INDICATOR");
            strQry.AppendLine(",BREAK_SUMMARY_TABLE.COMPANY_NO");
            strQry.AppendLine(",BREAK_SUMMARY_TABLE.BREAK_INCLUDED_IN_RUN_IND");
            strQry.AppendLine(",TIMESHEET_TOTAL_TABLE.TIMESHEET_INCLUDED_IN_RUN_IND");
            strQry.AppendLine(",C.WAGE_RUN_IND");
            strQry.AppendLine("--1End Major UNION 2");
            strQry.AppendLine(") AS TEMP1_TABLE");
            strQry.AppendLine("");
            strQry.AppendLine(" INNER JOIN dbo.PAY_CATEGORY PC1");
            strQry.AppendLine(" ON TEMP1_TABLE.COMPANY_NO = PC1.COMPANY_NO");
            strQry.AppendLine(" AND TEMP1_TABLE.PAY_CATEGORY_NO = PC1.PAY_CATEGORY_NO");
            strQry.AppendLine(" AND TEMP1_TABLE.PAY_CATEGORY_TYPE = PC1.PAY_CATEGORY_TYPE");
            strQry.AppendLine(" AND PC1.PAY_CATEGORY_TYPE = '#PAY_CATEGORY_TYPE#'");
            strQry.AppendLine("--2End Major UNION 2");
            strQry.AppendLine(") AS TEMP2_TABLE");
            strQry.AppendLine("");
            strQry.AppendLine(" INNER JOIN dbo.PAY_CATEGORY PC2");
            strQry.AppendLine(" ON TEMP2_TABLE.COMPANY_NO = PC2.COMPANY_NO");
            strQry.AppendLine(" AND TEMP2_TABLE.PAY_CATEGORY_NO = PC2.PAY_CATEGORY_NO");
            strQry.AppendLine(" AND TEMP2_TABLE.PAY_CATEGORY_TYPE = PC2.PAY_CATEGORY_TYPE");
            strQry.AppendLine(" AND PC2.PAY_CATEGORY_TYPE = '#PAY_CATEGORY_TYPE#'");
            strQry.AppendLine("");
            strQry.AppendLine(" INNER JOIN InteractPayroll.dbo.DATES D");
            strQry.AppendLine(" ON TEMP2_TABLE.DAY_DATE = D.DAY_DATE");
            strQry.AppendLine("--3End Major UNION 2");
            strQry.AppendLine(") AS TEMP_TABLE");
            strQry.AppendLine("");
            strQry.AppendLine("ON ETBDC.COMPANY_NO = TEMP_TABLE.COMPANY_NO");
            strQry.AppendLine("AND ETBDC.EMPLOYEE_NO = TEMP_TABLE.EMPLOYEE_NO");
            strQry.AppendLine("AND ETBDC.PAY_CATEGORY_NO = TEMP_TABLE.PAY_CATEGORY_NO");
            strQry.AppendLine("AND ETBDC.TIMESHEET_DATE = TEMP_TABLE.DAY_DATE");
            strQry.AppendLine("");
            strQry.AppendLine("END");
            strQry.AppendLine("");
            strQry.AppendLine("ELSE");
            strQry.AppendLine("");
            strQry.AppendLine("    IF @Action = 'D'	");
            strQry.AppendLine("");
            strQry.AppendLine("    BEGIN");
            strQry.AppendLine("");
            strQry.AppendLine("    UPDATE ETC");
            strQry.AppendLine("");
            strQry.AppendLine("    SET");
            strQry.AppendLine("");
            strQry.AppendLine("    #TIMESHEET_OR_BREAK#_ACCUM_MINUTES = ISNULL(TEMP_TABLE.#TIMESHEET_OR_BREAK#_ACCUM_MINUTES,0)");
            strQry.AppendLine("   ,INDICATOR = TEMP_TABLE.INDICATOR");
            strQry.AppendLine("   ,INCLUDED_IN_RUN_IND = TEMP_TABLE.INCLUDED_IN_RUN_IND");
            strQry.AppendLine("");
            strQry.AppendLine("    FROM dbo.#TRIGGER_TABLE_NAME# ETC");
            strQry.AppendLine("");
            strQry.AppendLine("    INNER JOIN");
            strQry.AppendLine("   (");
            strQry.AppendLine("    SELECT");
            strQry.AppendLine("    ETC.COMPANY_NO");
            strQry.AppendLine("   ,ETC.EMPLOYEE_NO");
            strQry.AppendLine("   ,ETC.PAY_CATEGORY_NO");
            strQry.AppendLine("   ,ETC.#DATE_FIELD#");
            strQry.AppendLine("   ,ETC.#TIMESHEET_OR_BREAK#_SEQ");
            strQry.AppendLine("   ,#TIMESHEET_OR_BREAK#_ACCUM_MINUTES = ");
            strQry.AppendLine("    CASE");
            strQry.AppendLine("    WHEN NOT TEMP.EMPLOYEE_NO IS NULL THEN");
            strQry.AppendLine("    CASE");
            strQry.AppendLine("    WHEN ETC.#TIMESHEET_OR_BREAK#_TIME_OUT_MINUTES IS NULL OR ETC.#TIMESHEET_OR_BREAK#_TIME_IN_MINUTES IS NULL");
            strQry.AppendLine("    THEN 0");
            strQry.AppendLine("    WHEN ETC.#TIMESHEET_OR_BREAK#_TIME_OUT_MINUTES > ETC.#TIMESHEET_OR_BREAK#_TIME_IN_MINUTES THEN");
            strQry.AppendLine("    ETC.#TIMESHEET_OR_BREAK#_TIME_OUT_MINUTES - ETC.#TIMESHEET_OR_BREAK#_TIME_IN_MINUTES");
            strQry.AppendLine("    ELSE 0");
            strQry.AppendLine("    END");
            strQry.AppendLine("    ELSE");
            strQry.AppendLine("    ETC.#TIMESHEET_OR_BREAK#_TIME_OUT_MINUTES - ETC.#TIMESHEET_OR_BREAK#_TIME_IN_MINUTES");
            strQry.AppendLine("    END");
            strQry.AppendLine("   ,INDICATOR = ");
            strQry.AppendLine("    CASE");
            strQry.AppendLine("    WHEN C.WAGE_RUN_IND = 'Y' AND NOT TEMP.EMPLOYEE_NO IS NULL AND E.FIRST_RUN_COMPLETED_IND = 'Y' AND ETC.#DATE_FIELD# > E.EMPLOYEE_LAST_RUNDATE AND ETC.#DATE_FIELD# <= PCPC.PAY_PERIOD_DATE");
            strQry.AppendLine("    THEN ''");
            strQry.AppendLine("    WHEN C.WAGE_RUN_IND = 'Y' AND NOT TEMP.EMPLOYEE_NO IS NULL AND ISNULL(E.FIRST_RUN_COMPLETED_IND,'') <> 'Y' AND ETC.#DATE_FIELD# >= ISNULL(E.EMPLOYEE_LAST_RUNDATE,DATEADD(DD,-360,D.#TIMESHEET_OR_BREAK#_DATE)) AND ETC.#DATE_FIELD# <= PCPC.PAY_PERIOD_DATE");
            strQry.AppendLine("    THEN ''");
            strQry.AppendLine("    WHEN NOT TEMP.EMPLOYEE_NO IS NULL");
            strQry.AppendLine("    THEN 'X'");
            strQry.AppendLine("    ELSE ''");
            strQry.AppendLine("    END");
            strQry.AppendLine("   ,INCLUDED_IN_RUN_IND = ");
            strQry.AppendLine("    CASE");
            strQry.AppendLine("    WHEN C.WAGE_RUN_IND = 'Y' AND E.FIRST_RUN_COMPLETED_IND = 'Y' AND ETC.#DATE_FIELD# > E.EMPLOYEE_LAST_RUNDATE AND ETC.#DATE_FIELD# <= PCPC.PAY_PERIOD_DATE");
            strQry.AppendLine("    THEN ISNULL(ETC.INCLUDED_IN_RUN_IND,'N')");
            strQry.AppendLine("    WHEN C.WAGE_RUN_IND = 'Y' AND ISNULL(E.FIRST_RUN_COMPLETED_IND,'') <> 'Y' AND ETC.#DATE_FIELD# >= ISNULL(E.EMPLOYEE_LAST_RUNDATE,DATEADD(DD,-360,D.#TIMESHEET_OR_BREAK#_DATE)) AND ETC.#DATE_FIELD# <= PCPC.PAY_PERIOD_DATE");
            strQry.AppendLine("    THEN ISNULL(ETC.INCLUDED_IN_RUN_IND,'N')");
            strQry.AppendLine("    ELSE ISNULL(ETC.INCLUDED_IN_RUN_IND,'')");
            strQry.AppendLine("    END");
            strQry.AppendLine("");
            strQry.AppendLine("    FROM dbo.EMPLOYEE E");
            strQry.AppendLine("");
            strQry.AppendLine("    INNER JOIN");
            strQry.AppendLine("   (");
            strQry.AppendLine("    SELECT DISTINCT");
            strQry.AppendLine("    COMPANY_NO");
            strQry.AppendLine("   ,EMPLOYEE_NO");
            strQry.AppendLine("   ,PAY_CATEGORY_NO");
            strQry.AppendLine("   ,#DATE_FIELD#");
            strQry.AppendLine("    FROM DELETED");
            strQry.AppendLine("   ) AS D");
            strQry.AppendLine("    ON E.COMPANY_NO = D.COMPANY_NO");
            strQry.AppendLine("    AND E.EMPLOYEE_NO = D.EMPLOYEE_NO");
            strQry.AppendLine("");
            strQry.AppendLine("    INNER JOIN dbo.#TRIGGER_TABLE_NAME# ETC");
            strQry.AppendLine("    ON E.COMPANY_NO = ETC.COMPANY_NO");
            strQry.AppendLine("    AND E.EMPLOYEE_NO = ETC.EMPLOYEE_NO");
            strQry.AppendLine("    AND ETC.PAY_CATEGORY_NO = D.PAY_CATEGORY_NO");
            strQry.AppendLine("    AND ETC.#DATE_FIELD# = D.#TIMESHEET_OR_BREAK#_DATE");
            strQry.AppendLine("    AND ((ETC.#DATE_FIELD# > E.EMPLOYEE_LAST_RUNDATE");
            strQry.AppendLine("    AND E.FIRST_RUN_COMPLETED_IND = 'Y')");
            strQry.AppendLine("    OR (ETC.#DATE_FIELD# >= ISNULL(E.EMPLOYEE_LAST_RUNDATE,DATEADD(DD,-360,D.#TIMESHEET_OR_BREAK#_DATE))");
            strQry.AppendLine("    AND ISNULL(E.FIRST_RUN_COMPLETED_IND,'') <> 'Y'))");
            strQry.AppendLine("");
            strQry.AppendLine("    INNER JOIN dbo.COMPANY C");
            strQry.AppendLine("    ON ETC.COMPANY_NO = C.COMPANY_NO");
            strQry.AppendLine("    AND C.DATETIME_DELETE_RECORD IS NULL");
            strQry.AppendLine("");
            strQry.AppendLine("    LEFT JOIN");
            strQry.AppendLine("   (");
            strQry.AppendLine("    --2Start");
            strQry.AppendLine("    --1Start");
            strQry.AppendLine("    SELECT DISTINCT");
            strQry.AppendLine("    ETC.EMPLOYEE_NO");
            strQry.AppendLine("   ,ETC.#DATE_FIELD#");
            strQry.AppendLine("   ,ETC.#TIMESHEET_OR_BREAK#_SEQ");
            strQry.AppendLine("");
            strQry.AppendLine("    FROM dbo.EMPLOYEE E");
            strQry.AppendLine("");
            strQry.AppendLine("    INNER JOIN");
            strQry.AppendLine("   (");
            strQry.AppendLine("    SELECT DISTINCT");
            strQry.AppendLine("    COMPANY_NO");
            strQry.AppendLine("   ,PAY_CATEGORY_NO");
            strQry.AppendLine("   ,EMPLOYEE_NO");
            strQry.AppendLine("   ,#DATE_FIELD#");
            strQry.AppendLine("    FROM DELETED");
            strQry.AppendLine("   ) AS D");
            strQry.AppendLine("    ON E.COMPANY_NO = D.COMPANY_NO");
            strQry.AppendLine("    AND E.EMPLOYEE_NO = D.EMPLOYEE_NO");
            strQry.AppendLine("");
            strQry.AppendLine("    INNER JOIN");
            strQry.AppendLine("   (");
            strQry.AppendLine("    SELECT");
            strQry.AppendLine("    ROW_NUMBER() OVER");
            strQry.AppendLine("   (ORDER BY");
            strQry.AppendLine("    COMPANY_NO");
            strQry.AppendLine("   ,EMPLOYEE_NO");
            strQry.AppendLine("   ,PAY_CATEGORY_NO");
            strQry.AppendLine("   ,#DATE_FIELD#");
            strQry.AppendLine("   ,#TIMESHEET_OR_BREAK#_TIME_IN_MINUTES");
            strQry.AppendLine("   ,#TIMESHEET_OR_BREAK#_TIME_OUT_MINUTES) AS SORTED_REC");
            strQry.AppendLine("   ,COMPANY_NO");
            strQry.AppendLine("   ,PAY_CATEGORY_NO");
            strQry.AppendLine("   ,EMPLOYEE_NO");
            strQry.AppendLine("   ,#DATE_FIELD#");
            strQry.AppendLine("   ,#TIMESHEET_OR_BREAK#_SEQ");
            strQry.AppendLine("   ,#TIMESHEET_OR_BREAK#_TIME_IN_MINUTES");
            strQry.AppendLine("   ,#TIMESHEET_OR_BREAK#_TIME_OUT_MINUTES");
            strQry.AppendLine("");
            strQry.AppendLine("    FROM dbo.#TRIGGER_TABLE_NAME#) AS ETC");
            strQry.AppendLine("    ON E.COMPANY_NO = ETC.COMPANY_NO");
            strQry.AppendLine("    AND E.EMPLOYEE_NO = ETC.EMPLOYEE_NO");
            strQry.AppendLine("    AND ETC.PAY_CATEGORY_NO = D.PAY_CATEGORY_NO");
            strQry.AppendLine("    AND ETC.#DATE_FIELD# = D.#TIMESHEET_OR_BREAK#_DATE");
            strQry.AppendLine("    AND ((ETC.#DATE_FIELD# > E.EMPLOYEE_LAST_RUNDATE");
            strQry.AppendLine("    AND E.FIRST_RUN_COMPLETED_IND = 'Y')");
            strQry.AppendLine("    OR (ETC.#DATE_FIELD# >= ISNULL(E.EMPLOYEE_LAST_RUNDATE,DATEADD(DD,-360,D.#TIMESHEET_OR_BREAK#_DATE))");
            strQry.AppendLine("    AND ISNULL(E.FIRST_RUN_COMPLETED_IND,'') <> 'Y'))");
            strQry.AppendLine("");
            strQry.AppendLine("    --1End");
            strQry.AppendLine("    INNER JOIN");
            strQry.AppendLine("   (");
            strQry.AppendLine("    SELECT");
            strQry.AppendLine("    ROW_NUMBER() OVER");
            strQry.AppendLine("   (ORDER BY");
            strQry.AppendLine("    COMPANY_NO");
            strQry.AppendLine("   ,EMPLOYEE_NO");
            strQry.AppendLine("   ,PAY_CATEGORY_NO");
            strQry.AppendLine("   ,#DATE_FIELD#");
            strQry.AppendLine("   ,#TIMESHEET_OR_BREAK#_TIME_IN_MINUTES");
            strQry.AppendLine("   ,#TIMESHEET_OR_BREAK#_TIME_OUT_MINUTES) AS SORTED_REC");
            strQry.AppendLine("   ,COMPANY_NO");
            strQry.AppendLine("   ,PAY_CATEGORY_NO");
            strQry.AppendLine("   ,EMPLOYEE_NO");
            strQry.AppendLine("   ,#DATE_FIELD#");
            strQry.AppendLine("   ,#TIMESHEET_OR_BREAK#_SEQ");
            strQry.AppendLine("   ,#TIMESHEET_OR_BREAK#_TIME_IN_MINUTES");
            strQry.AppendLine("   ,#TIMESHEET_OR_BREAK#_TIME_OUT_MINUTES");
            strQry.AppendLine("");
            strQry.AppendLine("    FROM dbo.#TRIGGER_TABLE_NAME#) AS ETC2");
            strQry.AppendLine("");
            strQry.AppendLine("    ON E.COMPANY_NO = ETC2.COMPANY_NO");
            strQry.AppendLine("    AND E.EMPLOYEE_NO = ETC2.EMPLOYEE_NO");
            strQry.AppendLine("    AND D.PAY_CATEGORY_NO = ETC2.PAY_CATEGORY_NO");
            strQry.AppendLine("    AND D.#TIMESHEET_OR_BREAK#_DATE = ETC2.#DATE_FIELD#");
            strQry.AppendLine("");
            strQry.AppendLine("    WHERE E.DATETIME_DELETE_RECORD IS NULL");
            strQry.AppendLine("    AND E.EMPLOYEE_ENDDATE IS NULL");
            strQry.AppendLine("    AND E.PAY_CATEGORY_TYPE = '#PAY_CATEGORY_TYPE#'");
            strQry.AppendLine("    AND ((ETC.#TIMESHEET_OR_BREAK#_TIME_IN_MINUTES IS NULL");
            strQry.AppendLine("    OR ETC.#TIMESHEET_OR_BREAK#_TIME_OUT_MINUTES IS NULL)");
            strQry.AppendLine("    OR (ETC.#TIMESHEET_OR_BREAK#_TIME_IN_MINUTES > ETC2.#TIMESHEET_OR_BREAK#_TIME_OUT_MINUTES");
            strQry.AppendLine("    AND ETC.SORTED_REC <= ETC2.SORTED_REC)");
            strQry.AppendLine("    OR (ETC.#TIMESHEET_OR_BREAK#_TIME_IN_MINUTES < ETC2.#TIMESHEET_OR_BREAK#_TIME_OUT_MINUTES");
            strQry.AppendLine("    AND ETC.SORTED_REC > ETC2.SORTED_REC))");
            strQry.AppendLine("");
            strQry.AppendLine("    --2End");
            strQry.AppendLine("   ) AS TEMP");
            strQry.AppendLine("    ON ETC.EMPLOYEE_NO = TEMP.EMPLOYEE_NO");
            strQry.AppendLine("    AND ETC.#DATE_FIELD# = TEMP.#TIMESHEET_OR_BREAK#_DATE");
            strQry.AppendLine("    AND ETC.#TIMESHEET_OR_BREAK#_SEQ = TEMP.#TIMESHEET_OR_BREAK#_SEQ");
            strQry.AppendLine("");
            strQry.AppendLine("    INNER JOIN dbo.EMPLOYEE_PAY_CATEGORY EPC");
            strQry.AppendLine("    ON ETC.COMPANY_NO = EPC.COMPANY_NO");
            strQry.AppendLine("    AND ETC.EMPLOYEE_NO = EPC.EMPLOYEE_NO");
            strQry.AppendLine("    AND ETC.PAY_CATEGORY_NO = EPC.PAY_CATEGORY_NO");
            strQry.AppendLine("    AND EPC.PAY_CATEGORY_TYPE = '#PAY_CATEGORY_TYPE#'");
            strQry.AppendLine("    AND EPC.DATETIME_DELETE_RECORD IS NULL");
            strQry.AppendLine("");
            strQry.AppendLine("    INNER JOIN dbo.PAY_CATEGORY PC");
            strQry.AppendLine("    ON ETC.COMPANY_NO = PC.COMPANY_NO");
            strQry.AppendLine("    AND ETC.PAY_CATEGORY_NO = PC.PAY_CATEGORY_NO");
            strQry.AppendLine("    AND PC.PAY_CATEGORY_TYPE = '#PAY_CATEGORY_TYPE#'");
            strQry.AppendLine("    AND PC.DATETIME_DELETE_RECORD IS NULL");
            strQry.AppendLine("");
            strQry.AppendLine("    LEFT JOIN dbo.PAY_CATEGORY_PERIOD_CURRENT PCPC");
            strQry.AppendLine("    ON PC.COMPANY_NO = PCPC.COMPANY_NO");
            strQry.AppendLine("    AND PC.PAY_CATEGORY_NO = PCPC.PAY_CATEGORY_NO");
            strQry.AppendLine("    AND PC.PAY_CATEGORY_TYPE = '#PAY_CATEGORY_TYPE#'");
            strQry.AppendLine("    AND PCPC.RUN_TYPE = 'P'");
            strQry.AppendLine("");
            strQry.AppendLine("    WHERE E.DATETIME_DELETE_RECORD IS NULL");
            strQry.AppendLine("    AND E.EMPLOYEE_ENDDATE IS NULL");
            strQry.AppendLine("    AND E.PAY_CATEGORY_TYPE = '#PAY_CATEGORY_TYPE#'");
            strQry.AppendLine("   ) AS TEMP_TABLE");
            strQry.AppendLine("    ON ETC.COMPANY_NO = TEMP_TABLE.COMPANY_NO");
            strQry.AppendLine("    AND ETC.EMPLOYEE_NO = TEMP_TABLE.EMPLOYEE_NO");
            strQry.AppendLine("    AND ETC.PAY_CATEGORY_NO = TEMP_TABLE.PAY_CATEGORY_NO");
            strQry.AppendLine("    AND ETC.#DATE_FIELD# = TEMP_TABLE.#DATE_FIELD#");
            strQry.AppendLine("    AND ETC.#TIMESHEET_OR_BREAK#_SEQ = TEMP_TABLE.#TIMESHEET_OR_BREAK#_SEQ");

            strQry.AppendLine("");
            strQry.AppendLine("");
            strQry.AppendLine("    UPDATE ETBDC");
            strQry.AppendLine("");
            strQry.AppendLine("    SET");
            strQry.AppendLine("");
            strQry.AppendLine("    DAY_NO = TEMP_TABLE.DAY_NO");
            strQry.AppendLine("   ,DAY_PAID_MINUTES = ISNULL(TEMP_TABLE.DAY_PAID_MINUTES,0)");
            strQry.AppendLine("   ,BREAK_ACCUM_MINUTES = ISNULL(TEMP_TABLE.BREAK_ACCUM_MINUTES,0)");
            strQry.AppendLine("   ,INDICATOR = TEMP_TABLE.INDICATOR");
            strQry.AppendLine("   ,BREAK_INDICATOR = TEMP_TABLE.BREAK_INDICATOR");
            strQry.AppendLine("   ,INCLUDED_IN_RUN_INDICATOR = TEMP_TABLE.INCLUDED_IN_RUN_INDICATOR");
            strQry.AppendLine("");
            strQry.AppendLine("    FROM dbo.#DAY_TABLE# ETBDC");
            strQry.AppendLine("");
            strQry.AppendLine("    INNER JOIN");
            strQry.AppendLine("   (");
            strQry.AppendLine("    SELECT");
            strQry.AppendLine("    E.COMPANY_NO");
            strQry.AppendLine("   ,BREAK_SUMMARY_TABLE.PAY_CATEGORY_NO");
            strQry.AppendLine("   ,E.EMPLOYEE_NO");
            strQry.AppendLine("   ,BREAK_SUMMARY_TABLE.DAY_DATE");
            strQry.AppendLine("   ,D.DAY_NO");
            strQry.AppendLine("   ,0 AS DAY_PAID_MINUTES");
            strQry.AppendLine("   ,BREAK_SUMMARY_TABLE.INDICATOR");
            strQry.AppendLine("   ,BREAK_SUMMARY_TABLE.BREAK_ACCUM_MINUTES");
            strQry.AppendLine("   ,'' AS BREAK_INDICATOR");
            strQry.AppendLine("   ,BREAK_SUMMARY_TABLE.BREAK_INCLUDED_IN_RUN_IND AS INCLUDED_IN_RUN_INDICATOR");
            strQry.AppendLine("");
            strQry.AppendLine("    FROM dbo.EMPLOYEE E");
            strQry.AppendLine("");
            strQry.AppendLine("    INNER JOIN");
            strQry.AppendLine("   (");
            strQry.AppendLine("    --2Start Break UNION 1");
            strQry.AppendLine("    SELECT");
            strQry.AppendLine("    BREAK_TABLE.COMPANY_NO");
            strQry.AppendLine("   ,BREAK_TABLE.PAY_CATEGORY_TYPE");
            strQry.AppendLine("   ,BREAK_TABLE.PAY_CATEGORY_NO");
            strQry.AppendLine("   ,BREAK_TABLE.EMPLOYEE_NO");
            strQry.AppendLine("   ,BREAK_TABLE.DAY_DATE");
            strQry.AppendLine("   ,BREAK_ACCUM_MINUTES = ");
            strQry.AppendLine("    SUM(CASE");
            strQry.AppendLine("    WHEN C.WAGE_RUN_IND = 'Y' AND BREAK_TABLE.DAY_DATE > BREAK_TABLE.EMPLOYEE_LAST_RUNDATE AND BREAK_TABLE.DAY_DATE <= PCPC.PAY_PERIOD_DATE AND BREAK_TABLE.INCLUDED_IN_RUN_IND IS NULL");
            strQry.AppendLine("    THEN 0");
            strQry.AppendLine("    ELSE BREAK_TABLE.BREAK_ACCUM_MINUTES");
            strQry.AppendLine("    END)");
            strQry.AppendLine("   ,INDICATOR = ");
            strQry.AppendLine("    CASE");
            strQry.AppendLine("    WHEN C.WAGE_RUN_IND = 'Y' AND BREAK_TABLE.DAY_DATE > BREAK_TABLE.EMPLOYEE_LAST_RUNDATE AND BREAK_TABLE.DAY_DATE <= PCPC.PAY_PERIOD_DATE");
            strQry.AppendLine("    THEN ''");
            strQry.AppendLine("    ELSE 'X'");
            strQry.AppendLine("    END");
            strQry.AppendLine("   ,BREAK_INCLUDED_IN_RUN_IND = ");
            strQry.AppendLine("    CASE");
            strQry.AppendLine("    WHEN C.WAGE_RUN_IND = 'Y' AND BREAK_TABLE.DAY_DATE > BREAK_TABLE.EMPLOYEE_LAST_RUNDATE AND BREAK_TABLE.DAY_DATE <= PCPC.PAY_PERIOD_DATE");
            strQry.AppendLine("    THEN MIN(ISNULL(BREAK_TABLE.INCLUDED_IN_RUN_IND,'N'))");
            strQry.AppendLine("    ELSE MAX(ISNULL(BREAK_TABLE.INCLUDED_IN_RUN_IND,''))");
            strQry.AppendLine("    END");
            strQry.AppendLine("");
            strQry.AppendLine("    FROM");
            strQry.AppendLine("   (");
            strQry.AppendLine("    --1Start Break UNION 1");
            strQry.AppendLine("    SELECT DISTINCT");
            strQry.AppendLine("    EBC.COMPANY_NO");
            strQry.AppendLine("   ,'#PAY_CATEGORY_TYPE#' AS PAY_CATEGORY_TYPE");
            strQry.AppendLine("   ,EBC.PAY_CATEGORY_NO");
            strQry.AppendLine("   ,EBC.EMPLOYEE_NO");
            strQry.AppendLine("   ,EBC.BREAK_DATE AS DAY_DATE");
            strQry.AppendLine("   ,EBC.BREAK_SEQ");
            strQry.AppendLine("   ,EMPLOYEE_LAST_RUNDATE = ");
            strQry.AppendLine("    CASE");
            strQry.AppendLine("    WHEN E.EMPLOYEE_LAST_RUNDATE IS NULL");
            strQry.AppendLine("    THEN DATEADD(DD,-360,GETDATE())");
            strQry.AppendLine("    WHEN ISNULL(E.FIRST_RUN_COMPLETED_IND,'') <> 'Y'");
            strQry.AppendLine("    THEN DATEADD(DD,-1,E.EMPLOYEE_LAST_RUNDATE)");
            strQry.AppendLine("    ELSE E.EMPLOYEE_LAST_RUNDATE");
            strQry.AppendLine("    END");
            strQry.AppendLine("   ,BREAK_ACCUM_MINUTES = ");
            strQry.AppendLine("    CASE");
            strQry.AppendLine("    WHEN ((EBC.BREAK_TIME_IN_MINUTES IS NULL");
            strQry.AppendLine("    OR EBC.BREAK_TIME_OUT_MINUTES IS NULL)");
            strQry.AppendLine("    OR (EBC.BREAK_TIME_IN_MINUTES >= EBC2.BREAK_TIME_OUT_MINUTES");
            strQry.AppendLine("    AND EBC.SORTED_REC <= EBC2.SORTED_REC)");
            strQry.AppendLine("    OR (EBC.BREAK_TIME_IN_MINUTES < EBC2.BREAK_TIME_OUT_MINUTES");
            strQry.AppendLine("    AND EBC.SORTED_REC > EBC2.SORTED_REC)) THEN");
            strQry.AppendLine("    CASE");
            strQry.AppendLine("    WHEN EBC.BREAK_TIME_OUT_MINUTES IS NULL OR EBC.BREAK_TIME_IN_MINUTES IS NULL");
            strQry.AppendLine("    THEN 0");
            strQry.AppendLine("    WHEN EBC.BREAK_TIME_OUT_MINUTES > EBC.BREAK_TIME_IN_MINUTES THEN");
            strQry.AppendLine("    EBC.BREAK_TIME_OUT_MINUTES - EBC.BREAK_TIME_IN_MINUTES");
            strQry.AppendLine("    ELSE 0");
            strQry.AppendLine("    END");
            strQry.AppendLine("    ELSE");
            strQry.AppendLine("    EBC.BREAK_TIME_OUT_MINUTES - EBC.BREAK_TIME_IN_MINUTES");
            strQry.AppendLine("    END");
            strQry.AppendLine("   ,EBC.INCLUDED_IN_RUN_IND");
            strQry.AppendLine("");
            strQry.AppendLine("    FROM dbo.EMPLOYEE E");
            strQry.AppendLine("");
            strQry.AppendLine("    INNER JOIN");
            strQry.AppendLine("   (");
            strQry.AppendLine("    SELECT");
            strQry.AppendLine("    ROW_NUMBER() OVER");
            strQry.AppendLine("   (ORDER BY");
            strQry.AppendLine("    EBC.COMPANY_NO");
            strQry.AppendLine("   ,EBC.EMPLOYEE_NO");
            strQry.AppendLine("   ,EBC.PAY_CATEGORY_NO");
            strQry.AppendLine("   ,EBC.BREAK_DATE");
            strQry.AppendLine("   ,EBC.BREAK_TIME_IN_MINUTES");
            strQry.AppendLine("   ,EBC.BREAK_TIME_OUT_MINUTES) AS SORTED_REC");
            strQry.AppendLine("   ,EBC.COMPANY_NO");
            strQry.AppendLine("   ,EBC.PAY_CATEGORY_NO");
            strQry.AppendLine("   ,EBC.EMPLOYEE_NO");
            strQry.AppendLine("   ,EBC.BREAK_DATE");
            strQry.AppendLine("   ,EBC.BREAK_SEQ");
            strQry.AppendLine("   ,EBC.BREAK_TIME_IN_MINUTES");
            strQry.AppendLine("   ,EBC.BREAK_TIME_OUT_MINUTES");
            strQry.AppendLine("   ,EBC.INCLUDED_IN_RUN_IND");
            strQry.AppendLine("");
            strQry.AppendLine("    FROM dbo.#BREAK_TABLE# EBC");
            strQry.AppendLine("");
            strQry.AppendLine("    INNER JOIN");
            strQry.AppendLine("   (");
            strQry.AppendLine("    SELECT DISTINCT");
            strQry.AppendLine("    COMPANY_NO");
            strQry.AppendLine("   ,PAY_CATEGORY_NO");
            strQry.AppendLine("   ,EMPLOYEE_NO");
            strQry.AppendLine("   ,#DATE_FIELD#");
            strQry.AppendLine("    FROM DELETED");
            strQry.AppendLine("   ) AS D");
            strQry.AppendLine("    ON EBC.COMPANY_NO = D.COMPANY_NO");
            strQry.AppendLine("    AND EBC.EMPLOYEE_NO = D.EMPLOYEE_NO");
            strQry.AppendLine("    AND EBC.PAY_CATEGORY_NO = D.PAY_CATEGORY_NO");
            strQry.AppendLine("    AND EBC.BREAK_DATE = D.#TIMESHEET_OR_BREAK#_DATE");
            strQry.AppendLine("   ) AS EBC");
            strQry.AppendLine("    ON E.COMPANY_NO = EBC.COMPANY_NO");
            strQry.AppendLine("    AND E.EMPLOYEE_NO = EBC.EMPLOYEE_NO");
            strQry.AppendLine("    AND ((EBC.BREAK_DATE > E.EMPLOYEE_LAST_RUNDATE");
            strQry.AppendLine("    AND E.FIRST_RUN_COMPLETED_IND = 'Y')");
            strQry.AppendLine("    OR (EBC.BREAK_DATE >= ISNULL(E.EMPLOYEE_LAST_RUNDATE,DATEADD(DD,-360,GETDATE()))");
            strQry.AppendLine("    AND ISNULL(E.FIRST_RUN_COMPLETED_IND,'') <> 'Y'))");
            strQry.AppendLine("");
            strQry.AppendLine("    INNER JOIN");
            strQry.AppendLine("   (");
            strQry.AppendLine("    SELECT");
            strQry.AppendLine("    ROW_NUMBER() OVER");
            strQry.AppendLine("   (ORDER BY");
            strQry.AppendLine("    EBC.COMPANY_NO");
            strQry.AppendLine("   ,EBC.EMPLOYEE_NO");
            strQry.AppendLine("   ,EBC.PAY_CATEGORY_NO");
            strQry.AppendLine("   ,EBC.BREAK_DATE");
            strQry.AppendLine("   ,EBC.BREAK_TIME_IN_MINUTES");
            strQry.AppendLine("   ,EBC.BREAK_TIME_OUT_MINUTES) AS SORTED_REC");
            strQry.AppendLine("   ,EBC.COMPANY_NO");
            strQry.AppendLine("   ,EBC.PAY_CATEGORY_NO");
            strQry.AppendLine("   ,EBC.EMPLOYEE_NO");
            strQry.AppendLine("   ,EBC.BREAK_DATE");
            strQry.AppendLine("   ,EBC.BREAK_SEQ");
            strQry.AppendLine("   ,EBC.BREAK_TIME_IN_MINUTES");
            strQry.AppendLine("   ,EBC.BREAK_TIME_OUT_MINUTES");
            strQry.AppendLine("");
            strQry.AppendLine("    FROM dbo.#BREAK_TABLE# EBC");
            strQry.AppendLine("");
            strQry.AppendLine("    INNER JOIN");
            strQry.AppendLine("   (");
            strQry.AppendLine("    SELECT DISTINCT");
            strQry.AppendLine("    COMPANY_NO");
            strQry.AppendLine("   ,PAY_CATEGORY_NO");
            strQry.AppendLine("   ,EMPLOYEE_NO");
            strQry.AppendLine("   ,#DATE_FIELD#");
            strQry.AppendLine("    FROM DELETED");
            strQry.AppendLine("   ) AS D");
            strQry.AppendLine("    ON EBC.COMPANY_NO = D.COMPANY_NO");
            strQry.AppendLine("    AND EBC.EMPLOYEE_NO = D.EMPLOYEE_NO");
            strQry.AppendLine("    AND EBC.PAY_CATEGORY_NO = D.PAY_CATEGORY_NO");
            strQry.AppendLine("    AND EBC.BREAK_DATE = D.#TIMESHEET_OR_BREAK#_DATE");
            strQry.AppendLine("   ) AS EBC2");
            strQry.AppendLine("    ON EBC.COMPANY_NO = EBC2.COMPANY_NO");
            strQry.AppendLine("    AND EBC.EMPLOYEE_NO = EBC2.EMPLOYEE_NO");
            strQry.AppendLine("    AND EBC.PAY_CATEGORY_NO = EBC2.PAY_CATEGORY_NO");
            strQry.AppendLine("    AND EBC.BREAK_DATE = EBC2.BREAK_DATE");
            strQry.AppendLine("");
            strQry.AppendLine("    INNER JOIN dbo.EMPLOYEE_PAY_CATEGORY EPC");
            strQry.AppendLine("    ON EBC.COMPANY_NO = EPC.COMPANY_NO");
            strQry.AppendLine("    AND EBC.EMPLOYEE_NO = EPC.EMPLOYEE_NO");
            strQry.AppendLine("    AND EBC.PAY_CATEGORY_NO = EPC.PAY_CATEGORY_NO");
            strQry.AppendLine("    AND EPC.PAY_CATEGORY_TYPE = '#PAY_CATEGORY_TYPE#'");
            strQry.AppendLine("    AND EPC.DATETIME_DELETE_RECORD IS NULL");
            strQry.AppendLine("");
            strQry.AppendLine("    INNER JOIN dbo.PAY_CATEGORY PC");
            strQry.AppendLine("    ON EBC.COMPANY_NO = PC.COMPANY_NO");
            strQry.AppendLine("    AND EBC.PAY_CATEGORY_NO = PC.PAY_CATEGORY_NO");
            strQry.AppendLine("    AND PC.PAY_CATEGORY_TYPE = '#PAY_CATEGORY_TYPE#'");
            strQry.AppendLine("    AND PC.DATETIME_DELETE_RECORD IS NULL");
            strQry.AppendLine("");
            strQry.AppendLine("    WHERE E.COMPANY_NO = EBC.COMPANY_NO");
            strQry.AppendLine("    AND E.DATETIME_DELETE_RECORD IS NULL");
            strQry.AppendLine("    AND E.EMPLOYEE_ENDDATE IS NULL");
            strQry.AppendLine("    AND E.PAY_CATEGORY_TYPE = '#PAY_CATEGORY_TYPE#'");
            strQry.AppendLine("    --1End Break UNION 1");
            strQry.AppendLine("   ) AS BREAK_TABLE");
            strQry.AppendLine("");
            strQry.AppendLine("    INNER JOIN dbo.COMPANY C");
            strQry.AppendLine("    ON BREAK_TABLE.COMPANY_NO = C.COMPANY_NO");
            strQry.AppendLine("    AND C.DATETIME_DELETE_RECORD IS NULL");
            strQry.AppendLine("");
            strQry.AppendLine("    LEFT JOIN dbo.PAY_CATEGORY_PERIOD_CURRENT PCPC");
            strQry.AppendLine("    ON BREAK_TABLE.COMPANY_NO = PCPC.COMPANY_NO");
            strQry.AppendLine("    AND BREAK_TABLE.PAY_CATEGORY_NO = PCPC.PAY_CATEGORY_NO");
            strQry.AppendLine("    AND BREAK_TABLE.PAY_CATEGORY_TYPE = PCPC.PAY_CATEGORY_TYPE");
            strQry.AppendLine("    AND PCPC.RUN_TYPE = 'P'");
            strQry.AppendLine("");
            strQry.AppendLine("    GROUP BY");
            strQry.AppendLine("    BREAK_TABLE.COMPANY_NO");
            strQry.AppendLine("   ,BREAK_TABLE.PAY_CATEGORY_TYPE");
            strQry.AppendLine("   ,BREAK_TABLE.PAY_CATEGORY_NO");
            strQry.AppendLine("   ,BREAK_TABLE.EMPLOYEE_NO");
            strQry.AppendLine("   ,BREAK_TABLE.DAY_DATE");
            strQry.AppendLine("   ,BREAK_TABLE.EMPLOYEE_LAST_RUNDATE");
            strQry.AppendLine("   ,PCPC.PAY_PERIOD_DATE");
            strQry.AppendLine("   ,C.WAGE_RUN_IND");
            strQry.AppendLine("    --2End Break UNION 1");
            strQry.AppendLine("   ) AS BREAK_SUMMARY_TABLE");
            strQry.AppendLine("    ON E.COMPANY_NO = BREAK_SUMMARY_TABLE.COMPANY_NO");
            strQry.AppendLine("    AND E.EMPLOYEE_NO = BREAK_SUMMARY_TABLE.EMPLOYEE_NO");
            strQry.AppendLine("    AND E.PAY_CATEGORY_TYPE = BREAK_SUMMARY_TABLE.PAY_CATEGORY_TYPE");
            strQry.AppendLine("");
            strQry.AppendLine("    LEFT JOIN dbo.#TIMESHEET_TABLE# ETC");
            strQry.AppendLine("    ON BREAK_SUMMARY_TABLE.COMPANY_NO = ETC.COMPANY_NO");
            strQry.AppendLine("    AND BREAK_SUMMARY_TABLE.EMPLOYEE_NO = ETC.EMPLOYEE_NO");
            strQry.AppendLine("    AND BREAK_SUMMARY_TABLE.PAY_CATEGORY_NO = ETC.PAY_CATEGORY_NO");
            strQry.AppendLine("    AND BREAK_SUMMARY_TABLE.DAY_DATE = ETC.TIMESHEET_DATE");
            strQry.AppendLine("");
            strQry.AppendLine("    INNER JOIN InteractPayroll.dbo.DATES D");
            strQry.AppendLine("    ON BREAK_SUMMARY_TABLE.DAY_DATE = D.DAY_DATE");
            strQry.AppendLine("");
            strQry.AppendLine("    WHERE E.COMPANY_NO = BREAK_SUMMARY_TABLE.COMPANY_NO");
            strQry.AppendLine("    AND E.DATETIME_DELETE_RECORD IS NULL");
            strQry.AppendLine("    AND E.EMPLOYEE_ENDDATE IS NULL");
            strQry.AppendLine("    AND E.PAY_CATEGORY_TYPE = '#PAY_CATEGORY_TYPE#'");
            strQry.AppendLine("    AND ETC.TIMESHEET_DATE IS NULL");
            strQry.AppendLine("");
            strQry.AppendLine("    UNION");
            strQry.AppendLine("");
            strQry.AppendLine("    --3Start Major UNION 2");
            strQry.AppendLine("    SELECT");
            strQry.AppendLine("    TEMP2_TABLE.COMPANY_NO");
            strQry.AppendLine("   ,TEMP2_TABLE.PAY_CATEGORY_NO");
            strQry.AppendLine("   ,TEMP2_TABLE.EMPLOYEE_NO");
            strQry.AppendLine("   ,TEMP2_TABLE.DAY_DATE");
            strQry.AppendLine("   ,D.DAY_NO");
            strQry.AppendLine("   ,TEMP2_TABLE.DAY_PAID_MINUTES");
            strQry.AppendLine("   ,INDICATOR = ");
            strQry.AppendLine("    CASE");
            strQry.AppendLine("    WHEN TEMP2_TABLE.INDICATOR = 'X'");
            strQry.AppendLine("    THEN TEMP2_TABLE.INDICATOR");
            strQry.AppendLine("    WHEN D.DAY_NO = 0");
            strQry.AppendLine("    AND (TEMP2_TABLE.DAY_PAID_MINUTES > PC2.EXCEPTION_SUN_ABOVE_MINUTES");
            strQry.AppendLine("    OR TEMP2_TABLE.DAY_PAID_MINUTES < PC2.EXCEPTION_SUN_BELOW_MINUTES)");
            strQry.AppendLine("    THEN 'E'");
            strQry.AppendLine("    WHEN D.DAY_NO = 1");
            strQry.AppendLine("    AND (TEMP2_TABLE.DAY_PAID_MINUTES > PC2.EXCEPTION_MON_ABOVE_MINUTES");
            strQry.AppendLine("    OR TEMP2_TABLE.DAY_PAID_MINUTES < PC2.EXCEPTION_MON_BELOW_MINUTES)");
            strQry.AppendLine("    THEN 'E'");
            strQry.AppendLine("    WHEN D.DAY_NO = 2");
            strQry.AppendLine("    AND (TEMP2_TABLE.DAY_PAID_MINUTES > PC2.EXCEPTION_TUE_ABOVE_MINUTES");
            strQry.AppendLine("    OR TEMP2_TABLE.DAY_PAID_MINUTES < PC2.EXCEPTION_TUE_BELOW_MINUTES)");
            strQry.AppendLine("    THEN 'E'");
            strQry.AppendLine("    WHEN D.DAY_NO = 3");
            strQry.AppendLine("    AND (TEMP2_TABLE.DAY_PAID_MINUTES > PC2.EXCEPTION_WED_ABOVE_MINUTES");
            strQry.AppendLine("    OR TEMP2_TABLE.DAY_PAID_MINUTES < PC2.EXCEPTION_WED_BELOW_MINUTES)");
            strQry.AppendLine("    THEN 'E'");
            strQry.AppendLine("    WHEN D.DAY_NO = 4");
            strQry.AppendLine("    AND (TEMP2_TABLE.DAY_PAID_MINUTES > PC2.EXCEPTION_THU_ABOVE_MINUTES");
            strQry.AppendLine("    OR TEMP2_TABLE.DAY_PAID_MINUTES < PC2.EXCEPTION_THU_BELOW_MINUTES)");
            strQry.AppendLine("    THEN 'E'");
            strQry.AppendLine("    WHEN D.DAY_NO = 5");
            strQry.AppendLine("    AND (TEMP2_TABLE.DAY_PAID_MINUTES > PC2.EXCEPTION_FRI_ABOVE_MINUTES");
            strQry.AppendLine("    OR TEMP2_TABLE.DAY_PAID_MINUTES < PC2.EXCEPTION_FRI_BELOW_MINUTES)");
            strQry.AppendLine("    THEN 'E'");
            strQry.AppendLine("    WHEN D.DAY_NO = 6");
            strQry.AppendLine("    AND (TEMP2_TABLE.DAY_PAID_MINUTES > PC2.EXCEPTION_SAT_ABOVE_MINUTES");
            strQry.AppendLine("    OR TEMP2_TABLE.DAY_PAID_MINUTES < PC2.EXCEPTION_SAT_BELOW_MINUTES)");
            strQry.AppendLine("    THEN 'E'");
            strQry.AppendLine("    ELSE TEMP2_TABLE.INDICATOR");
            strQry.AppendLine("    END");
            strQry.AppendLine("   ,TEMP2_TABLE.BREAK_ACCUM_MINUTES");
            strQry.AppendLine("   ,TEMP2_TABLE.BREAK_INDICATOR");
            strQry.AppendLine("   ,TEMP2_TABLE.INCLUDED_IN_RUN_INDICATOR");
            strQry.AppendLine("");
            strQry.AppendLine("    FROM");
            strQry.AppendLine("   (");
            strQry.AppendLine("    --2Start Major UNION 2");
            strQry.AppendLine("    SELECT");
            strQry.AppendLine("    TEMP1_TABLE.COMPANY_NO");
            strQry.AppendLine("   ,TEMP1_TABLE.PAY_CATEGORY_TYPE");
            strQry.AppendLine("   ,TEMP1_TABLE.PAY_CATEGORY_NO");
            strQry.AppendLine("   ,TEMP1_TABLE.EMPLOYEE_NO");
            strQry.AppendLine("   ,TEMP1_TABLE.DAY_DATE");
            strQry.AppendLine("   ,DAY_PAID_MINUTES = ");
            strQry.AppendLine("    CASE");
            strQry.AppendLine("    WHEN PC1.DAILY_ROUNDING_IND = 0");
            strQry.AppendLine("    THEN TEMP1_TABLE.DAY_PAID_MINUTES");
            strQry.AppendLine("    WHEN PC1.DAILY_ROUNDING_IND = 1");
            strQry.AppendLine("    THEN CASE");
            strQry.AppendLine("    WHEN TEMP1_TABLE.DAY_PAID_MINUTES % PC1.DAILY_ROUNDING_MINUTES = 0");
            strQry.AppendLine("    THEN TEMP1_TABLE.DAY_PAID_MINUTES");
            strQry.AppendLine("    ELSE TEMP1_TABLE.DAY_PAID_MINUTES + (PC1.DAILY_ROUNDING_MINUTES - (TEMP1_TABLE.DAY_PAID_MINUTES % PC1.DAILY_ROUNDING_MINUTES))");
            strQry.AppendLine("    END");
            strQry.AppendLine("    WHEN PC1.DAILY_ROUNDING_IND = 2");
            strQry.AppendLine("    THEN CASE");
            strQry.AppendLine("    WHEN TEMP1_TABLE.DAY_PAID_MINUTES % PC1.DAILY_ROUNDING_MINUTES = 0");
            strQry.AppendLine("    THEN TEMP1_TABLE.DAY_PAID_MINUTES");
            strQry.AppendLine("    ELSE TEMP1_TABLE.DAY_PAID_MINUTES - (TEMP1_TABLE.DAY_PAID_MINUTES % PC1.DAILY_ROUNDING_MINUTES)");
            strQry.AppendLine("    END");
            strQry.AppendLine("    WHEN PC1.DAILY_ROUNDING_IND = 3");
            strQry.AppendLine("    THEN CASE");
            strQry.AppendLine("    WHEN TEMP1_TABLE.DAY_PAID_MINUTES % PC1.DAILY_ROUNDING_MINUTES = 0");
            strQry.AppendLine("    THEN TEMP1_TABLE.DAY_PAID_MINUTES");
            strQry.AppendLine("    WHEN TEMP1_TABLE.DAY_PAID_MINUTES % PC1.DAILY_ROUNDING_MINUTES > CONVERT(DECIMAL,PC1.DAILY_ROUNDING_MINUTES) / 2");
            strQry.AppendLine("    THEN TEMP1_TABLE.DAY_PAID_MINUTES + (PC1.DAILY_ROUNDING_MINUTES - (TEMP1_TABLE.DAY_PAID_MINUTES % PC1.DAILY_ROUNDING_MINUTES))");
            strQry.AppendLine("    ELSE TEMP1_TABLE.DAY_PAID_MINUTES - (TEMP1_TABLE.DAY_PAID_MINUTES % PC1.DAILY_ROUNDING_MINUTES)");
            strQry.AppendLine("    END");
            strQry.AppendLine("    END");
            strQry.AppendLine("   ,TEMP1_TABLE.INDICATOR");
            strQry.AppendLine("   ,TEMP1_TABLE.BREAK_ACCUM_MINUTES");
            strQry.AppendLine("   ,TEMP1_TABLE.BREAK_INDICATOR");
            strQry.AppendLine("   ,TEMP1_TABLE.INCLUDED_IN_RUN_INDICATOR");
            strQry.AppendLine("");
            strQry.AppendLine("    FROM");
            strQry.AppendLine("   (");
            strQry.AppendLine("    --1Start Major UNION 2");
            strQry.AppendLine("    SELECT");
            strQry.AppendLine("    TIMESHEET_TOTAL_TABLE.COMPANY_NO");
            strQry.AppendLine("   ,TIMESHEET_TOTAL_TABLE.PAY_CATEGORY_TYPE");
            strQry.AppendLine("   ,TIMESHEET_TOTAL_TABLE.PAY_CATEGORY_NO");
            strQry.AppendLine("   ,TIMESHEET_TOTAL_TABLE.EMPLOYEE_NO");
            strQry.AppendLine("   ,TIMESHEET_TOTAL_TABLE.DAY_DATE");
            strQry.AppendLine("   ,ISNULL(BREAK_SUMMARY_TABLE.BREAK_ACCUM_MINUTES,0) AS BREAK_ACCUM_MINUTES");
            strQry.AppendLine("   ,DAY_PAID_MINUTES = ");
            strQry.AppendLine("    CASE");
            strQry.AppendLine("    WHEN BREAK_SUMMARY_TABLE.BREAK_ACCUM_MINUTES > TIMESHEET_TOTAL_TABLE.BREAK_MINUTES");
            strQry.AppendLine("    AND BREAK_SUMMARY_TABLE.BREAK_ACCUM_MINUTES < TIMESHEET_TOTAL_TABLE.TIMESHEET_ACCUM_MINUTES");
            strQry.AppendLine("    THEN TIMESHEET_TOTAL_TABLE.TIMESHEET_ACCUM_MINUTES - BREAK_SUMMARY_TABLE.BREAK_ACCUM_MINUTES");
            strQry.AppendLine("    ELSE TIMESHEET_TOTAL_TABLE.TIMESHEET_ACCUM_MINUTES - TIMESHEET_TOTAL_TABLE.BREAK_MINUTES");
            strQry.AppendLine("    END");
            strQry.AppendLine("   ,INDICATOR = ");
            strQry.AppendLine("    CASE");
            strQry.AppendLine("    WHEN BREAK_SUMMARY_TABLE.INDICATOR = 'X' OR TIMESHEET_TOTAL_TABLE.TIMESHEET_ACCUM_MINUTES < BREAK_SUMMARY_TABLE.BREAK_ACCUM_MINUTES");
            strQry.AppendLine("    THEN 'X'");
            strQry.AppendLine("    ELSE ISNULL(MAX(TIMESHEET_TOTAL_TABLE.INDICATOR),'')");
            strQry.AppendLine("    END");
            strQry.AppendLine("   ,BREAK_INDICATOR = ");
            strQry.AppendLine("    CASE");
            strQry.AppendLine("    WHEN BREAK_SUMMARY_TABLE.BREAK_ACCUM_MINUTES > TIMESHEET_TOTAL_TABLE.BREAK_MINUTES");
            strQry.AppendLine("    THEN 'Y'");
            strQry.AppendLine("    ELSE ''");
            strQry.AppendLine("    END");
            strQry.AppendLine("   ,INCLUDED_IN_RUN_INDICATOR = ");
            strQry.AppendLine("    CASE");
            strQry.AppendLine("    WHEN C.WAGE_RUN_IND = 'Y' AND NOT BREAK_SUMMARY_TABLE.COMPANY_NO IS NULL AND MIN(BREAK_SUMMARY_TABLE.BREAK_INCLUDED_IN_RUN_IND) < TIMESHEET_TOTAL_TABLE.TIMESHEET_INCLUDED_IN_RUN_IND");
            strQry.AppendLine("    THEN MIN(ISNULL(BREAK_SUMMARY_TABLE.BREAK_INCLUDED_IN_RUN_IND,'N'))");
            strQry.AppendLine("    WHEN C.WAGE_RUN_IND = 'Y' AND NOT BREAK_SUMMARY_TABLE.COMPANY_NO IS NULL AND MIN(BREAK_SUMMARY_TABLE.BREAK_INCLUDED_IN_RUN_IND) >= TIMESHEET_TOTAL_TABLE.TIMESHEET_INCLUDED_IN_RUN_IND");
            strQry.AppendLine("    THEN TIMESHEET_TOTAL_TABLE.TIMESHEET_INCLUDED_IN_RUN_IND");
            strQry.AppendLine("    WHEN C.WAGE_RUN_IND <> 'Y' AND NOT BREAK_SUMMARY_TABLE.COMPANY_NO IS NULL AND MAX(BREAK_SUMMARY_TABLE.BREAK_INCLUDED_IN_RUN_IND) < TIMESHEET_TOTAL_TABLE.TIMESHEET_INCLUDED_IN_RUN_IND");
            strQry.AppendLine("    THEN TIMESHEET_TOTAL_TABLE.TIMESHEET_INCLUDED_IN_RUN_IND");
            strQry.AppendLine("    WHEN C.WAGE_RUN_IND <> 'Y' AND NOT BREAK_SUMMARY_TABLE.COMPANY_NO IS NULL AND MAX(BREAK_SUMMARY_TABLE.BREAK_INCLUDED_IN_RUN_IND) >= TIMESHEET_TOTAL_TABLE.TIMESHEET_INCLUDED_IN_RUN_IND");
            strQry.AppendLine("    THEN MAX(ISNULL(BREAK_SUMMARY_TABLE.BREAK_INCLUDED_IN_RUN_IND,'N'))");
            strQry.AppendLine("    ELSE TIMESHEET_TOTAL_TABLE.TIMESHEET_INCLUDED_IN_RUN_IND");
            strQry.AppendLine("    END");
            strQry.AppendLine("");
            strQry.AppendLine("    FROM");
            strQry.AppendLine("   (");
            strQry.AppendLine("    --3Start Timesheet UNION 2");
            strQry.AppendLine("    SELECT");
            strQry.AppendLine("    TIMESHEET_SUMMARY_TABLE.COMPANY_NO");
            strQry.AppendLine("   ,TIMESHEET_SUMMARY_TABLE.PAY_CATEGORY_TYPE");
            strQry.AppendLine("   ,TIMESHEET_SUMMARY_TABLE.PAY_CATEGORY_NO");
            strQry.AppendLine("   ,TIMESHEET_SUMMARY_TABLE.EMPLOYEE_NO");
            strQry.AppendLine("   ,TIMESHEET_SUMMARY_TABLE.DAY_DATE");
            strQry.AppendLine("   ,TIMESHEET_SUMMARY_TABLE.TIMESHEET_ACCUM_MINUTES");
            strQry.AppendLine("   ,TIMESHEET_SUMMARY_TABLE.INDICATOR");
            strQry.AppendLine("   ,ISNULL(MAX(PCB.BREAK_MINUTES),0) AS BREAK_MINUTES");
            strQry.AppendLine("   ,TIMESHEET_SUMMARY_TABLE.TIMESHEET_INCLUDED_IN_RUN_IND");
            strQry.AppendLine("");
            strQry.AppendLine("    FROM");
            strQry.AppendLine("   (");
            strQry.AppendLine("    --2Start Timesheet UNION 2");
            strQry.AppendLine("    SELECT");
            strQry.AppendLine("    TIMESHEET_TABLE.COMPANY_NO");
            strQry.AppendLine("   ,TIMESHEET_TABLE.PAY_CATEGORY_TYPE");
            strQry.AppendLine("   ,TIMESHEET_TABLE.PAY_CATEGORY_NO");
            strQry.AppendLine("   ,TIMESHEET_TABLE.EMPLOYEE_NO");
            strQry.AppendLine("   ,TIMESHEET_TABLE.DAY_DATE");
            strQry.AppendLine("   ,TIMESHEET_ACCUM_MINUTES = ");
            strQry.AppendLine("    SUM(CASE");
            strQry.AppendLine("    WHEN C.WAGE_RUN_IND = 'Y' AND TIMESHEET_TABLE.DAY_DATE > TIMESHEET_TABLE.EMPLOYEE_LAST_RUNDATE AND TIMESHEET_TABLE.DAY_DATE <= PCPC.PAY_PERIOD_DATE AND ISNULL(TIMESHEET_TABLE.INCLUDED_IN_RUN_IND,'N') <> 'Y'");
            strQry.AppendLine("    THEN 0");
            strQry.AppendLine("    ELSE TIMESHEET_ACCUM_MINUTES");
            strQry.AppendLine("    END)");
            strQry.AppendLine("   ,INDICATOR =");
            strQry.AppendLine("    CASE");
            strQry.AppendLine("    WHEN C.WAGE_RUN_IND = 'Y' AND TIMESHEET_TABLE.DAY_DATE > TIMESHEET_TABLE.EMPLOYEE_LAST_RUNDATE AND TIMESHEET_TABLE.DAY_DATE <= PCPC.PAY_PERIOD_DATE");
            strQry.AppendLine("    THEN ''");
            strQry.AppendLine("    ELSE MAX(ISNULL(INDICATOR,''))");
            strQry.AppendLine("    END");
            strQry.AppendLine("   ,TIMESHEET_INCLUDED_IN_RUN_IND = ");
            strQry.AppendLine("    CASE");
            strQry.AppendLine("    WHEN C.WAGE_RUN_IND = 'Y' AND TIMESHEET_TABLE.DAY_DATE > TIMESHEET_TABLE.EMPLOYEE_LAST_RUNDATE AND TIMESHEET_TABLE.DAY_DATE <= PCPC.PAY_PERIOD_DATE");
            strQry.AppendLine("    THEN MIN(ISNULL(TIMESHEET_TABLE.INCLUDED_IN_RUN_IND,'N'))");
            strQry.AppendLine("    ELSE MAX(ISNULL(TIMESHEET_TABLE.INCLUDED_IN_RUN_IND,''))");
            strQry.AppendLine("    END");
            strQry.AppendLine("");
            strQry.AppendLine("    FROM");
            strQry.AppendLine("   (");
            strQry.AppendLine("    --1Start Timesheet UNION 2");
            strQry.AppendLine("    SELECT DISTINCT");
            strQry.AppendLine("    ETC.COMPANY_NO");
            strQry.AppendLine("   ,'#PAY_CATEGORY_TYPE#' AS PAY_CATEGORY_TYPE");
            strQry.AppendLine("   ,ETC.PAY_CATEGORY_NO");
            strQry.AppendLine("   ,ETC.EMPLOYEE_NO");
            strQry.AppendLine("   ,ETC.TIMESHEET_DATE AS DAY_DATE");
            strQry.AppendLine("   ,ETC.TIMESHEET_SEQ");
            strQry.AppendLine("   ,EMPLOYEE_LAST_RUNDATE = ");
            strQry.AppendLine("    CASE");
            strQry.AppendLine("    WHEN E.EMPLOYEE_LAST_RUNDATE IS NULL");
            strQry.AppendLine("    THEN DATEADD(DD,-360,GETDATE())");
            strQry.AppendLine("    WHEN ISNULL(E.FIRST_RUN_COMPLETED_IND,'') <> 'Y'");
            strQry.AppendLine("    THEN DATEADD(DD,-1,E.EMPLOYEE_LAST_RUNDATE)");
            strQry.AppendLine("    ELSE E.EMPLOYEE_LAST_RUNDATE");
            strQry.AppendLine("    END");
            strQry.AppendLine("   ,TIMESHEET_ACCUM_MINUTES = ");
            strQry.AppendLine("    CASE");
            strQry.AppendLine("    WHEN NOT TEMP.EMPLOYEE_NO IS NULL THEN");
            strQry.AppendLine("    CASE");
            strQry.AppendLine("    WHEN ETC.TIMESHEET_TIME_OUT_MINUTES IS NULL OR ETC.TIMESHEET_TIME_IN_MINUTES IS NULL");
            strQry.AppendLine("    THEN 0");
            strQry.AppendLine("    WHEN ETC.TIMESHEET_TIME_OUT_MINUTES > ETC.TIMESHEET_TIME_IN_MINUTES THEN");
            strQry.AppendLine("    ETC.TIMESHEET_TIME_OUT_MINUTES - ETC.TIMESHEET_TIME_IN_MINUTES");
            strQry.AppendLine("    ELSE 0");
            strQry.AppendLine("    END");
            strQry.AppendLine("    ELSE");
            strQry.AppendLine("    ETC.TIMESHEET_TIME_OUT_MINUTES - ETC.TIMESHEET_TIME_IN_MINUTES");
            strQry.AppendLine("    END");
            strQry.AppendLine("   ,INDICATOR = ");
            strQry.AppendLine("    CASE");
            strQry.AppendLine("    WHEN NOT TEMP.EMPLOYEE_NO IS NULL");
            strQry.AppendLine("    THEN 'X'");
            strQry.AppendLine("    ELSE ''");
            strQry.AppendLine("    END");
            strQry.AppendLine("   ,ETC.INCLUDED_IN_RUN_IND");
            strQry.AppendLine("");
            strQry.AppendLine("    FROM dbo.EMPLOYEE E");
            strQry.AppendLine("");
            strQry.AppendLine("    INNER JOIN dbo.#TIMESHEET_TABLE# ETC");
            strQry.AppendLine("    ON E.COMPANY_NO = ETC.COMPANY_NO");
            strQry.AppendLine("    AND E.EMPLOYEE_NO = ETC.EMPLOYEE_NO");
            strQry.AppendLine("    AND ((ETC.TIMESHEET_DATE > E.EMPLOYEE_LAST_RUNDATE");
            strQry.AppendLine("    AND E.FIRST_RUN_COMPLETED_IND = 'Y')");
            strQry.AppendLine("    OR (ETC.TIMESHEET_DATE >= ISNULL(E.EMPLOYEE_LAST_RUNDATE,DATEADD(DD,-360,GETDATE()))");
            strQry.AppendLine("    AND ISNULL(E.FIRST_RUN_COMPLETED_IND,'') <> 'Y'))");
            strQry.AppendLine("");
            strQry.AppendLine("    INNER JOIN");
            strQry.AppendLine("   (");
            strQry.AppendLine("    SELECT DISTINCT");
            strQry.AppendLine("    COMPANY_NO");
            strQry.AppendLine("   ,PAY_CATEGORY_NO");
            strQry.AppendLine("   ,EMPLOYEE_NO");
            strQry.AppendLine("   ,#DATE_FIELD#");
            strQry.AppendLine("    FROM DELETED");
            strQry.AppendLine("   ) AS D");
            strQry.AppendLine("    ON ETC.COMPANY_NO = D.COMPANY_NO");
            strQry.AppendLine("    AND ETC.EMPLOYEE_NO = D.EMPLOYEE_NO");
            strQry.AppendLine("    AND ETC.PAY_CATEGORY_NO = D.PAY_CATEGORY_NO");
            strQry.AppendLine("    AND ETC.TIMESHEET_DATE = D.#TIMESHEET_OR_BREAK#_DATE");
            strQry.AppendLine("");
            strQry.AppendLine("    LEFT JOIN");
            strQry.AppendLine("   (");
            strQry.AppendLine("    SELECT DISTINCT");
            strQry.AppendLine("    ETC.EMPLOYEE_NO");
            strQry.AppendLine("   ,ETC.TIMESHEET_DATE");
            strQry.AppendLine("   ,ETC.TIMESHEET_SEQ");
            strQry.AppendLine("");
            strQry.AppendLine("    FROM dbo.EMPLOYEE E");
            strQry.AppendLine("");
            strQry.AppendLine("    INNER JOIN");
            strQry.AppendLine("   (");
            strQry.AppendLine("    SELECT");
            strQry.AppendLine("    ROW_NUMBER() OVER");
            strQry.AppendLine("   (ORDER BY");
            strQry.AppendLine("    ETC.COMPANY_NO");
            strQry.AppendLine("   ,ETC.EMPLOYEE_NO");
            strQry.AppendLine("   ,ETC.PAY_CATEGORY_NO");
            strQry.AppendLine("   ,ETC.TIMESHEET_DATE");
            strQry.AppendLine("   ,ETC.TIMESHEET_TIME_IN_MINUTES");
            strQry.AppendLine("   ,ETC.TIMESHEET_TIME_OUT_MINUTES) AS SORTED_REC");
            strQry.AppendLine("   ,ETC.COMPANY_NO");
            strQry.AppendLine("   ,ETC.PAY_CATEGORY_NO");
            strQry.AppendLine("   ,ETC.EMPLOYEE_NO");
            strQry.AppendLine("   ,ETC.TIMESHEET_DATE");
            strQry.AppendLine("   ,ETC.TIMESHEET_SEQ");
            strQry.AppendLine("   ,ETC.TIMESHEET_TIME_IN_MINUTES");
            strQry.AppendLine("   ,ETC.TIMESHEET_TIME_OUT_MINUTES");
            strQry.AppendLine("");
            strQry.AppendLine("    FROM dbo.#TIMESHEET_TABLE# ETC");
            strQry.AppendLine("");
            strQry.AppendLine("    INNER JOIN");
            strQry.AppendLine("   (");
            strQry.AppendLine("    SELECT DISTINCT");
            strQry.AppendLine("    COMPANY_NO");
            strQry.AppendLine("   ,PAY_CATEGORY_NO");
            strQry.AppendLine("   ,EMPLOYEE_NO");
            strQry.AppendLine("   ,#DATE_FIELD#");
            strQry.AppendLine("    FROM DELETED");
            strQry.AppendLine("   ) AS D");
            strQry.AppendLine("    ON ETC.COMPANY_NO = D.COMPANY_NO");
            strQry.AppendLine("    AND ETC.EMPLOYEE_NO = D.EMPLOYEE_NO");
            strQry.AppendLine("    AND ETC.PAY_CATEGORY_NO = D.PAY_CATEGORY_NO");
            strQry.AppendLine("    AND ETC.TIMESHEET_DATE = D.#TIMESHEET_OR_BREAK#_DATE");
            strQry.AppendLine("   ) AS ETC");
            strQry.AppendLine("    ON E.COMPANY_NO = ETC.COMPANY_NO");
            strQry.AppendLine("    AND E.EMPLOYEE_NO = ETC.EMPLOYEE_NO");
            strQry.AppendLine("    AND ((ETC.TIMESHEET_DATE > E.EMPLOYEE_LAST_RUNDATE");
            strQry.AppendLine("    AND E.FIRST_RUN_COMPLETED_IND = 'Y')");
            strQry.AppendLine("    OR (ETC.TIMESHEET_DATE >= ISNULL(E.EMPLOYEE_LAST_RUNDATE,DATEADD(DD,-360,GETDATE()))");
            strQry.AppendLine("    AND ISNULL(E.FIRST_RUN_COMPLETED_IND,'') <> 'Y'))");
            strQry.AppendLine("");
            strQry.AppendLine("    INNER JOIN");
            strQry.AppendLine("   (");
            strQry.AppendLine("    SELECT");
            strQry.AppendLine("    ROW_NUMBER() OVER");
            strQry.AppendLine("   (ORDER BY");
            strQry.AppendLine("    ETC.COMPANY_NO");
            strQry.AppendLine("   ,ETC.EMPLOYEE_NO");
            strQry.AppendLine("   ,ETC.PAY_CATEGORY_NO");
            strQry.AppendLine("   ,ETC.TIMESHEET_DATE");
            strQry.AppendLine("   ,ETC.TIMESHEET_TIME_IN_MINUTES");
            strQry.AppendLine("   ,ETC.TIMESHEET_TIME_OUT_MINUTES) AS SORTED_REC");
            strQry.AppendLine("   ,ETC.COMPANY_NO");
            strQry.AppendLine("   ,ETC.PAY_CATEGORY_NO");
            strQry.AppendLine("   ,ETC.EMPLOYEE_NO");
            strQry.AppendLine("   ,ETC.TIMESHEET_DATE");
            strQry.AppendLine("   ,ETC.TIMESHEET_SEQ");
            strQry.AppendLine("   ,ETC.TIMESHEET_TIME_IN_MINUTES");
            strQry.AppendLine("   ,ETC.TIMESHEET_TIME_OUT_MINUTES");
            strQry.AppendLine("");
            strQry.AppendLine("    FROM dbo.#TIMESHEET_TABLE# ETC");
            strQry.AppendLine("");
            strQry.AppendLine("    INNER JOIN");
            strQry.AppendLine("   (");
            strQry.AppendLine("    SELECT DISTINCT");
            strQry.AppendLine("    COMPANY_NO");
            strQry.AppendLine("   ,PAY_CATEGORY_NO");
            strQry.AppendLine("   ,EMPLOYEE_NO");
            strQry.AppendLine("   ,#DATE_FIELD#");
            strQry.AppendLine("    FROM DELETED");
            strQry.AppendLine("   ) AS D");
            strQry.AppendLine("    ON ETC.COMPANY_NO = D.COMPANY_NO");
            strQry.AppendLine("    AND ETC.EMPLOYEE_NO = D.EMPLOYEE_NO");
            strQry.AppendLine("    AND ETC.PAY_CATEGORY_NO = D.PAY_CATEGORY_NO");
            strQry.AppendLine("    AND ETC.TIMESHEET_DATE = D.#TIMESHEET_OR_BREAK#_DATE");
            strQry.AppendLine("   ) AS ETC2");
            strQry.AppendLine("    ON ETC.COMPANY_NO = ETC2.COMPANY_NO");
            strQry.AppendLine("    AND ETC.PAY_CATEGORY_NO = ETC2.PAY_CATEGORY_NO");
            strQry.AppendLine("    AND ETC.EMPLOYEE_NO = ETC2.EMPLOYEE_NO");
            strQry.AppendLine("    AND ETC.TIMESHEET_DATE = ETC2.TIMESHEET_DATE");
            strQry.AppendLine("");
            strQry.AppendLine("    WHERE E.DATETIME_DELETE_RECORD IS NULL");
            strQry.AppendLine("    AND E.EMPLOYEE_ENDDATE IS NULL");
            strQry.AppendLine("    AND E.PAY_CATEGORY_TYPE = '#PAY_CATEGORY_TYPE#'");
            strQry.AppendLine("    AND ((ETC.TIMESHEET_TIME_IN_MINUTES IS NULL");
            strQry.AppendLine("    OR ETC.TIMESHEET_TIME_OUT_MINUTES IS NULL)");
            //Errol 2016-06-22
            strQry.AppendLine("    OR (ETC.TIMESHEET_TIME_IN_MINUTES >= ETC2.TIMESHEET_TIME_OUT_MINUTES");
            strQry.AppendLine("    AND ETC.SORTED_REC <= ETC2.SORTED_REC)");
            strQry.AppendLine("    OR (ETC.TIMESHEET_TIME_IN_MINUTES < ETC2.TIMESHEET_TIME_OUT_MINUTES");
            strQry.AppendLine("    AND ETC.SORTED_REC > ETC2.SORTED_REC))");
            strQry.AppendLine("   ) AS TEMP");
            strQry.AppendLine("    ON ETC.EMPLOYEE_NO = TEMP.EMPLOYEE_NO");
            strQry.AppendLine("    AND ETC.TIMESHEET_DATE = TEMP.TIMESHEET_DATE");
            strQry.AppendLine("    AND ETC.TIMESHEET_SEQ = TEMP.TIMESHEET_SEQ");
            strQry.AppendLine("");
            strQry.AppendLine("    INNER JOIN dbo.EMPLOYEE_PAY_CATEGORY EPC");
            strQry.AppendLine("    ON ETC.COMPANY_NO = EPC.COMPANY_NO");
            strQry.AppendLine("    AND ETC.EMPLOYEE_NO = EPC.EMPLOYEE_NO");
            strQry.AppendLine("    AND ETC.PAY_CATEGORY_NO = EPC.PAY_CATEGORY_NO");
            strQry.AppendLine("    AND EPC.PAY_CATEGORY_TYPE = '#PAY_CATEGORY_TYPE#'");
            strQry.AppendLine("    AND EPC.DATETIME_DELETE_RECORD IS NULL");
            strQry.AppendLine("");
            strQry.AppendLine("    INNER JOIN dbo.PAY_CATEGORY PC");
            strQry.AppendLine("    ON ETC.COMPANY_NO = PC.COMPANY_NO");
            strQry.AppendLine("    AND ETC.PAY_CATEGORY_NO = PC.PAY_CATEGORY_NO");
            strQry.AppendLine("    AND PC.PAY_CATEGORY_TYPE = '#PAY_CATEGORY_TYPE#'");
            strQry.AppendLine("    AND PC.DATETIME_DELETE_RECORD IS NULL");
            strQry.AppendLine("");
            strQry.AppendLine("    WHERE E.DATETIME_DELETE_RECORD IS NULL");
            strQry.AppendLine("    AND E.EMPLOYEE_ENDDATE IS NULL");
            strQry.AppendLine("    AND E.PAY_CATEGORY_TYPE = '#PAY_CATEGORY_TYPE#'");
            strQry.AppendLine("    --1End Timesheet UNION 2");
            strQry.AppendLine("   ) AS TIMESHEET_TABLE");
            strQry.AppendLine("");
            strQry.AppendLine("    INNER JOIN dbo.COMPANY C");
            strQry.AppendLine("    ON TIMESHEET_TABLE.COMPANY_NO = C.COMPANY_NO");
            strQry.AppendLine("    AND C.DATETIME_DELETE_RECORD IS NULL");
            strQry.AppendLine("");
            strQry.AppendLine("    LEFT JOIN dbo.PAY_CATEGORY_PERIOD_CURRENT PCPC");
            strQry.AppendLine("    ON TIMESHEET_TABLE.COMPANY_NO = PCPC.COMPANY_NO");
            strQry.AppendLine("    AND TIMESHEET_TABLE.PAY_CATEGORY_NO = PCPC.PAY_CATEGORY_NO");
            strQry.AppendLine("    AND TIMESHEET_TABLE.PAY_CATEGORY_TYPE = PCPC.PAY_CATEGORY_TYPE");
            strQry.AppendLine("    AND PCPC.RUN_TYPE = 'P'");
            strQry.AppendLine("");
            strQry.AppendLine("    GROUP BY");
            strQry.AppendLine("    TIMESHEET_TABLE.COMPANY_NO");
            strQry.AppendLine("   ,TIMESHEET_TABLE.PAY_CATEGORY_TYPE");
            strQry.AppendLine("   ,TIMESHEET_TABLE.PAY_CATEGORY_NO");
            strQry.AppendLine("   ,TIMESHEET_TABLE.EMPLOYEE_NO");
            strQry.AppendLine("   ,TIMESHEET_TABLE.DAY_DATE");
            strQry.AppendLine("   ,TIMESHEET_TABLE.EMPLOYEE_LAST_RUNDATE");
            strQry.AppendLine("   ,PCPC.PAY_PERIOD_DATE");
            strQry.AppendLine("   ,C.WAGE_RUN_IND");
            strQry.AppendLine("    --2End Timesheet UNION 2");
            strQry.AppendLine("   ) AS TIMESHEET_SUMMARY_TABLE");
            strQry.AppendLine("");
            strQry.AppendLine("    LEFT JOIN dbo.PAY_CATEGORY_BREAK PCB");
            strQry.AppendLine("    ON TIMESHEET_SUMMARY_TABLE.COMPANY_NO = PCB.COMPANY_NO");
            strQry.AppendLine("    AND TIMESHEET_SUMMARY_TABLE.PAY_CATEGORY_NO = PCB.PAY_CATEGORY_NO");
            strQry.AppendLine("    AND TIMESHEET_SUMMARY_TABLE.PAY_CATEGORY_TYPE = PCB.PAY_CATEGORY_TYPE");
            strQry.AppendLine("    AND PCB.DATETIME_DELETE_RECORD IS NULL");
            strQry.AppendLine("    AND TIMESHEET_SUMMARY_TABLE.TIMESHEET_ACCUM_MINUTES >= PCB.WORKED_TIME_MINUTES");
            strQry.AppendLine("");
            strQry.AppendLine("    GROUP BY");
            strQry.AppendLine("    TIMESHEET_SUMMARY_TABLE.COMPANY_NO");
            strQry.AppendLine("   ,TIMESHEET_SUMMARY_TABLE.PAY_CATEGORY_TYPE");
            strQry.AppendLine("   ,TIMESHEET_SUMMARY_TABLE.PAY_CATEGORY_NO");
            strQry.AppendLine("   ,TIMESHEET_SUMMARY_TABLE.EMPLOYEE_NO");
            strQry.AppendLine("   ,TIMESHEET_SUMMARY_TABLE.DAY_DATE");
            strQry.AppendLine("   ,TIMESHEET_SUMMARY_TABLE.TIMESHEET_ACCUM_MINUTES");
            strQry.AppendLine("   ,TIMESHEET_SUMMARY_TABLE.INDICATOR");
            strQry.AppendLine("   ,TIMESHEET_SUMMARY_TABLE.TIMESHEET_INCLUDED_IN_RUN_IND");
            strQry.AppendLine("    --3End Timesheet UNION 2");
            strQry.AppendLine("   ) AS TIMESHEET_TOTAL_TABLE");
            strQry.AppendLine("");
            strQry.AppendLine("    INNER JOIN dbo.COMPANY C");
            strQry.AppendLine("    ON TIMESHEET_TOTAL_TABLE.COMPANY_NO = C.COMPANY_NO");
            strQry.AppendLine("    AND C.DATETIME_DELETE_RECORD IS NULL");
            strQry.AppendLine("");
            strQry.AppendLine("    LEFT JOIN");
            strQry.AppendLine("   (");
            strQry.AppendLine("    --3Start Break UNION 2");
            strQry.AppendLine("    SELECT");
            strQry.AppendLine("    BREAK_TABLE.COMPANY_NO");
            strQry.AppendLine("   ,BREAK_TABLE.PAY_CATEGORY_TYPE");
            strQry.AppendLine("   ,BREAK_TABLE.PAY_CATEGORY_NO");
            strQry.AppendLine("   ,BREAK_TABLE.EMPLOYEE_NO");
            strQry.AppendLine("   ,BREAK_TABLE.DAY_DATE");
            strQry.AppendLine("   ,BREAK_ACCUM_MINUTES = ");
            strQry.AppendLine("    SUM(CASE");
            strQry.AppendLine("    WHEN C.WAGE_RUN_IND = 'Y' AND BREAK_TABLE.DAY_DATE > BREAK_TABLE.EMPLOYEE_LAST_RUNDATE AND BREAK_TABLE.DAY_DATE <= PCPC.PAY_PERIOD_DATE AND BREAK_TABLE.INCLUDED_IN_RUN_IND = 'Y'");
            strQry.AppendLine("    THEN BREAK_TABLE.BREAK_ACCUM_MINUTES");
            strQry.AppendLine("    WHEN C.WAGE_RUN_IND = 'Y' AND BREAK_TABLE.DAY_DATE > BREAK_TABLE.EMPLOYEE_LAST_RUNDATE AND BREAK_TABLE.DAY_DATE <= PCPC.PAY_PERIOD_DATE AND BREAK_TABLE.INCLUDED_IN_RUN_IND IS NULL");
            strQry.AppendLine("    THEN 0");
            strQry.AppendLine("    ELSE BREAK_TABLE.BREAK_ACCUM_MINUTES");
            strQry.AppendLine("    END)");
            strQry.AppendLine("   ,INDICATOR = ");
            strQry.AppendLine("    CASE");
            strQry.AppendLine("    WHEN C.WAGE_RUN_IND = 'Y' AND BREAK_TABLE.DAY_DATE > BREAK_TABLE.EMPLOYEE_LAST_RUNDATE AND BREAK_TABLE.DAY_DATE <= PCPC.PAY_PERIOD_DATE");
            strQry.AppendLine("    THEN ''");
            strQry.AppendLine("    ELSE MAX(ISNULL(BREAK_TABLE.INDICATOR,''))");
            strQry.AppendLine("    END");
            strQry.AppendLine("   ,BREAK_INCLUDED_IN_RUN_IND = ");
            strQry.AppendLine("    CASE");
            strQry.AppendLine("    WHEN C.WAGE_RUN_IND = 'Y' AND BREAK_TABLE.DAY_DATE > BREAK_TABLE.EMPLOYEE_LAST_RUNDATE AND BREAK_TABLE.DAY_DATE <= PCPC.PAY_PERIOD_DATE");
            strQry.AppendLine("    THEN MIN(ISNULL(BREAK_TABLE.INCLUDED_IN_RUN_IND,'N'))");
            strQry.AppendLine("    ELSE MAX(ISNULL(BREAK_TABLE.INCLUDED_IN_RUN_IND,''))");
            strQry.AppendLine("    END");
            strQry.AppendLine("");
            strQry.AppendLine("    FROM");
            strQry.AppendLine("   (");
            strQry.AppendLine("    --2Start Break UNION 2");
            strQry.AppendLine("    SELECT");
            strQry.AppendLine("    EBC.COMPANY_NO");
            strQry.AppendLine("   ,'#PAY_CATEGORY_TYPE#' AS PAY_CATEGORY_TYPE");
            strQry.AppendLine("   ,EBC.PAY_CATEGORY_NO");
            strQry.AppendLine("   ,EBC.EMPLOYEE_NO");
            strQry.AppendLine("   ,EBC.BREAK_DATE AS DAY_DATE");
            strQry.AppendLine("   ,EBC.BREAK_SEQ");
            strQry.AppendLine("   ,EMPLOYEE_LAST_RUNDATE = ");
            strQry.AppendLine("    CASE");
            strQry.AppendLine("    WHEN E.EMPLOYEE_LAST_RUNDATE IS NULL");
            strQry.AppendLine("    THEN DATEADD(DD,-360,GETDATE())");
            strQry.AppendLine("    WHEN ISNULL(E.FIRST_RUN_COMPLETED_IND,'') <> 'Y'");
            strQry.AppendLine("    THEN DATEADD(DD,-1,E.EMPLOYEE_LAST_RUNDATE)");
            strQry.AppendLine("    ELSE E.EMPLOYEE_LAST_RUNDATE");
            strQry.AppendLine("    END");
            strQry.AppendLine("   ,BREAK_ACCUM_MINUTES = ");
            strQry.AppendLine("    CASE");
            strQry.AppendLine("    WHEN NOT TEMP.EMPLOYEE_NO IS NULL THEN");
            strQry.AppendLine("    CASE");
            strQry.AppendLine("    WHEN EBC.BREAK_TIME_OUT_MINUTES IS NULL OR EBC.BREAK_TIME_IN_MINUTES IS NULL");
            strQry.AppendLine("    THEN 0");
            strQry.AppendLine("    WHEN EBC.BREAK_TIME_OUT_MINUTES > EBC.BREAK_TIME_IN_MINUTES THEN");
            strQry.AppendLine("    EBC.BREAK_TIME_OUT_MINUTES - EBC.BREAK_TIME_IN_MINUTES");
            strQry.AppendLine("    ELSE 0");
            strQry.AppendLine("    END");
            strQry.AppendLine("    ELSE");
            strQry.AppendLine("    EBC.BREAK_TIME_OUT_MINUTES - EBC.BREAK_TIME_IN_MINUTES");
            strQry.AppendLine("    END");
            strQry.AppendLine("   ,INDICATOR = ");
            strQry.AppendLine("    CASE");
            strQry.AppendLine("    WHEN NOT TEMP.EMPLOYEE_NO IS NULL");
            strQry.AppendLine("    THEN 'X'");
            strQry.AppendLine("    ELSE ''");
            strQry.AppendLine("    END");
            strQry.AppendLine("   ,EBC.INCLUDED_IN_RUN_IND");
            strQry.AppendLine("");
            strQry.AppendLine("    FROM dbo.EMPLOYEE E");
            strQry.AppendLine("");
            strQry.AppendLine("    INNER JOIN dbo.#BREAK_TABLE# EBC");
            strQry.AppendLine("    ON E.COMPANY_NO = EBC.COMPANY_NO");
            strQry.AppendLine("    AND E.EMPLOYEE_NO = EBC.EMPLOYEE_NO");
            strQry.AppendLine("    AND ((EBC.BREAK_DATE > E.EMPLOYEE_LAST_RUNDATE");
            strQry.AppendLine("    AND E.FIRST_RUN_COMPLETED_IND = 'Y')");
            strQry.AppendLine("    OR (EBC.BREAK_DATE >= ISNULL(E.EMPLOYEE_LAST_RUNDATE,DATEADD(DD,-360,GETDATE()))");
            strQry.AppendLine("    AND ISNULL(E.FIRST_RUN_COMPLETED_IND,'') <> 'Y'))");
            strQry.AppendLine("");
            strQry.AppendLine("    INNER JOIN");
            strQry.AppendLine("   (");
            strQry.AppendLine("    SELECT DISTINCT");
            strQry.AppendLine("    COMPANY_NO");
            strQry.AppendLine("   ,PAY_CATEGORY_NO");
            strQry.AppendLine("   ,EMPLOYEE_NO");
            strQry.AppendLine("   ,#DATE_FIELD#");
            strQry.AppendLine("    FROM DELETED");
            strQry.AppendLine("   ) AS D");
            strQry.AppendLine("    ON EBC.COMPANY_NO = D.COMPANY_NO");
            strQry.AppendLine("    AND EBC.EMPLOYEE_NO = D.EMPLOYEE_NO");
            strQry.AppendLine("    AND EBC.PAY_CATEGORY_NO = D.PAY_CATEGORY_NO");
            strQry.AppendLine("    AND EBC.BREAK_DATE = D.#TIMESHEET_OR_BREAK#_DATE");
            strQry.AppendLine("");
            strQry.AppendLine("    LEFT JOIN");
            strQry.AppendLine("   (");
            strQry.AppendLine("    --1Start Break UNION 2");
            strQry.AppendLine("    SELECT");
            strQry.AppendLine("    EBC.EMPLOYEE_NO");
            strQry.AppendLine("   ,EBC.BREAK_DATE");
            strQry.AppendLine("   ,EBC.BREAK_SEQ");
            strQry.AppendLine("   ,EBC.BREAK_TIME_IN_MINUTES");
            strQry.AppendLine("   ,EBC.BREAK_TIME_OUT_MINUTES");
            strQry.AppendLine("   ,EBC.INCLUDED_IN_RUN_IND");
            strQry.AppendLine("");
            strQry.AppendLine("    FROM dbo.EMPLOYEE E");
            strQry.AppendLine("");
            strQry.AppendLine("    INNER JOIN");
            strQry.AppendLine("   (");
            strQry.AppendLine("    SELECT");
            strQry.AppendLine("    ROW_NUMBER() OVER");
            strQry.AppendLine("   (ORDER BY");
            strQry.AppendLine("    EBC.COMPANY_NO");
            strQry.AppendLine("   ,EBC.EMPLOYEE_NO");
            strQry.AppendLine("   ,EBC.PAY_CATEGORY_NO");
            strQry.AppendLine("   ,EBC.BREAK_DATE");
            strQry.AppendLine("   ,EBC.BREAK_TIME_IN_MINUTES");
            strQry.AppendLine("   ,EBC.BREAK_TIME_OUT_MINUTES) AS SORTED_REC");
            strQry.AppendLine("   ,EBC.COMPANY_NO");
            strQry.AppendLine("   ,EBC.PAY_CATEGORY_NO");
            strQry.AppendLine("   ,EBC.EMPLOYEE_NO");
            strQry.AppendLine("   ,EBC.BREAK_DATE");
            strQry.AppendLine("   ,EBC.BREAK_SEQ");
            strQry.AppendLine("   ,EBC.BREAK_TIME_IN_MINUTES");
            strQry.AppendLine("   ,EBC.BREAK_TIME_OUT_MINUTES");
            strQry.AppendLine("   ,EBC.INCLUDED_IN_RUN_IND");
            strQry.AppendLine("");
            strQry.AppendLine("    FROM dbo.#BREAK_TABLE# EBC");
            strQry.AppendLine("");
            strQry.AppendLine("    INNER JOIN");
            strQry.AppendLine("   (");
            strQry.AppendLine("    SELECT DISTINCT");
            strQry.AppendLine("    COMPANY_NO");
            strQry.AppendLine("   ,PAY_CATEGORY_NO");
            strQry.AppendLine("   ,EMPLOYEE_NO");
            strQry.AppendLine("   ,#DATE_FIELD#");
            strQry.AppendLine("    FROM DELETED");
            strQry.AppendLine("   ) AS D");
            strQry.AppendLine("    ON EBC.COMPANY_NO = D.COMPANY_NO");
            strQry.AppendLine("    AND EBC.EMPLOYEE_NO = D.EMPLOYEE_NO");
            strQry.AppendLine("    AND EBC.PAY_CATEGORY_NO = D.PAY_CATEGORY_NO");
            strQry.AppendLine("    AND EBC.BREAK_DATE = D.#TIMESHEET_OR_BREAK#_DATE");
            strQry.AppendLine("   ) AS EBC");
            strQry.AppendLine("    ON E.COMPANY_NO = EBC.COMPANY_NO");
            strQry.AppendLine("    AND E.EMPLOYEE_NO = EBC.EMPLOYEE_NO");
            strQry.AppendLine("    AND ((EBC.BREAK_DATE > E.EMPLOYEE_LAST_RUNDATE");
            strQry.AppendLine("    AND E.FIRST_RUN_COMPLETED_IND = 'Y')");
            strQry.AppendLine("    OR (EBC.BREAK_DATE >= ISNULL(E.EMPLOYEE_LAST_RUNDATE,DATEADD(DD,-360,GETDATE()))");
            strQry.AppendLine("    AND ISNULL(E.FIRST_RUN_COMPLETED_IND,'') <> 'Y'))");
            strQry.AppendLine("    --1End Break UNION 2");
            strQry.AppendLine("");
            strQry.AppendLine("    INNER JOIN");
            strQry.AppendLine("   (");
            strQry.AppendLine("    SELECT");
            strQry.AppendLine("    ROW_NUMBER() OVER");
            strQry.AppendLine("   (ORDER BY");
            strQry.AppendLine("    EBC.COMPANY_NO");
            strQry.AppendLine("   ,EBC.EMPLOYEE_NO");
            strQry.AppendLine("   ,EBC.PAY_CATEGORY_NO");
            strQry.AppendLine("   ,EBC.BREAK_DATE");
            strQry.AppendLine("   ,EBC.BREAK_TIME_IN_MINUTES");
            strQry.AppendLine("   ,EBC.BREAK_TIME_OUT_MINUTES) AS SORTED_REC");
            strQry.AppendLine("   ,EBC.COMPANY_NO");
            strQry.AppendLine("   ,EBC.PAY_CATEGORY_NO");
            strQry.AppendLine("   ,EBC.EMPLOYEE_NO");
            strQry.AppendLine("   ,EBC.BREAK_DATE");
            strQry.AppendLine("   ,EBC.BREAK_SEQ");
            strQry.AppendLine("   ,EBC.BREAK_TIME_IN_MINUTES");
            strQry.AppendLine("   ,EBC.BREAK_TIME_OUT_MINUTES");
            strQry.AppendLine("");
            strQry.AppendLine("    FROM dbo.#BREAK_TABLE# EBC");
            strQry.AppendLine("");
            strQry.AppendLine("    INNER JOIN");
            strQry.AppendLine("   (");
            strQry.AppendLine("    SELECT DISTINCT");
            strQry.AppendLine("    COMPANY_NO");
            strQry.AppendLine("   ,PAY_CATEGORY_NO");
            strQry.AppendLine("   ,EMPLOYEE_NO");
            strQry.AppendLine("   ,#DATE_FIELD#");
            strQry.AppendLine("    FROM DELETED");
            strQry.AppendLine("   ) AS D");
            strQry.AppendLine("    ON EBC.COMPANY_NO = D.COMPANY_NO");
            strQry.AppendLine("    AND EBC.EMPLOYEE_NO = D.EMPLOYEE_NO");
            strQry.AppendLine("    AND EBC.PAY_CATEGORY_NO = D.PAY_CATEGORY_NO");
            strQry.AppendLine("    AND EBC.BREAK_DATE = D.#TIMESHEET_OR_BREAK#_DATE");
            strQry.AppendLine("   ) AS EBC2");
            strQry.AppendLine("    ON EBC.COMPANY_NO = EBC2.COMPANY_NO");
            strQry.AppendLine("    AND EBC.PAY_CATEGORY_NO = EBC2.PAY_CATEGORY_NO");
            strQry.AppendLine("    AND EBC.EMPLOYEE_NO = EBC2.EMPLOYEE_NO");
            strQry.AppendLine("    AND EBC.BREAK_DATE = EBC2.BREAK_DATE");
            strQry.AppendLine("");
            strQry.AppendLine("    WHERE E.DATETIME_DELETE_RECORD IS NULL");
            strQry.AppendLine("    AND E.EMPLOYEE_ENDDATE IS NULL");
            strQry.AppendLine("    AND E.PAY_CATEGORY_TYPE = '#PAY_CATEGORY_TYPE#'");
            strQry.AppendLine("    AND ((EBC.BREAK_TIME_IN_MINUTES IS NULL");
            strQry.AppendLine("    OR EBC.BREAK_TIME_OUT_MINUTES IS NULL)");
            //Errol - 2016-0-22
            strQry.AppendLine("    OR (EBC.BREAK_TIME_IN_MINUTES >= EBC2.BREAK_TIME_OUT_MINUTES");
            strQry.AppendLine("    AND EBC.SORTED_REC <= EBC2.SORTED_REC)");
            strQry.AppendLine("    OR (EBC.BREAK_TIME_IN_MINUTES < EBC2.BREAK_TIME_OUT_MINUTES");
            strQry.AppendLine("    AND EBC.SORTED_REC > EBC2.SORTED_REC))");
            strQry.AppendLine("   ) AS TEMP");
            strQry.AppendLine("    ON EBC.EMPLOYEE_NO = TEMP.EMPLOYEE_NO");
            strQry.AppendLine("    AND EBC.BREAK_DATE = TEMP.BREAK_DATE");
            strQry.AppendLine("    AND EBC.BREAK_SEQ = TEMP.BREAK_SEQ");
            strQry.AppendLine("");
            strQry.AppendLine("    INNER JOIN dbo.EMPLOYEE_PAY_CATEGORY EPC");
            strQry.AppendLine("    ON EBC.COMPANY_NO = EPC.COMPANY_NO");
            strQry.AppendLine("    AND EBC.EMPLOYEE_NO = EPC.EMPLOYEE_NO");
            strQry.AppendLine("    AND EBC.PAY_CATEGORY_NO = EPC.PAY_CATEGORY_NO");
            strQry.AppendLine("    AND EPC.PAY_CATEGORY_TYPE = '#PAY_CATEGORY_TYPE#'");
            strQry.AppendLine("    AND EPC.DATETIME_DELETE_RECORD IS NULL");
            strQry.AppendLine("");
            strQry.AppendLine("    INNER JOIN dbo.PAY_CATEGORY PC");
            strQry.AppendLine("    ON EBC.COMPANY_NO = PC.COMPANY_NO");
            strQry.AppendLine("    AND EBC.PAY_CATEGORY_NO = PC.PAY_CATEGORY_NO");
            strQry.AppendLine("    AND PC.PAY_CATEGORY_TYPE = '#PAY_CATEGORY_TYPE#'");
            strQry.AppendLine("    AND PC.DATETIME_DELETE_RECORD IS NULL");
            strQry.AppendLine("");
            strQry.AppendLine("    WHERE E.DATETIME_DELETE_RECORD IS NULL");
            strQry.AppendLine("    AND E.EMPLOYEE_ENDDATE IS NULL");
            strQry.AppendLine("    AND E.PAY_CATEGORY_TYPE = '#PAY_CATEGORY_TYPE#'");
            strQry.AppendLine("");
            strQry.AppendLine("    GROUP BY");
            strQry.AppendLine("    EBC.COMPANY_NO");
            strQry.AppendLine("   ,EBC.PAY_CATEGORY_NO");
            strQry.AppendLine("   ,EBC.EMPLOYEE_NO");
            strQry.AppendLine("   ,EBC.BREAK_DATE");
            strQry.AppendLine("   ,EBC.BREAK_SEQ");
            strQry.AppendLine("   ,E.EMPLOYEE_LAST_RUNDATE");
            strQry.AppendLine("   ,E.FIRST_RUN_COMPLETED_IND");
            strQry.AppendLine("	  ,TEMP.EMPLOYEE_NO");
            strQry.AppendLine("   ,EBC.BREAK_TIME_OUT_MINUTES");
            strQry.AppendLine("   ,EBC.BREAK_TIME_IN_MINUTES");
            strQry.AppendLine("   ,EBC.INCLUDED_IN_RUN_IND");
            strQry.AppendLine("    --2End Break UNION 2");
            strQry.AppendLine("   ) AS BREAK_TABLE");
            strQry.AppendLine("");
            strQry.AppendLine("    INNER JOIN dbo.COMPANY C");
            strQry.AppendLine("    ON BREAK_TABLE.COMPANY_NO = C.COMPANY_NO");
            strQry.AppendLine("    AND C.DATETIME_DELETE_RECORD IS NULL");
            strQry.AppendLine("");
            strQry.AppendLine("    LEFT JOIN dbo.PAY_CATEGORY_PERIOD_CURRENT PCPC");
            strQry.AppendLine("    ON BREAK_TABLE.COMPANY_NO = PCPC.COMPANY_NO");
            strQry.AppendLine("    AND BREAK_TABLE.PAY_CATEGORY_NO = PCPC.PAY_CATEGORY_NO");
            strQry.AppendLine("    AND BREAK_TABLE.PAY_CATEGORY_TYPE = PCPC.PAY_CATEGORY_TYPE");
            strQry.AppendLine("    AND PCPC.RUN_TYPE = 'P'");
            strQry.AppendLine("");
            strQry.AppendLine("    GROUP BY");
            strQry.AppendLine("    BREAK_TABLE.COMPANY_NO");
            strQry.AppendLine("   ,BREAK_TABLE.PAY_CATEGORY_TYPE");
            strQry.AppendLine("   ,BREAK_TABLE.PAY_CATEGORY_NO");
            strQry.AppendLine("   ,BREAK_TABLE.EMPLOYEE_NO");
            strQry.AppendLine("   ,BREAK_TABLE.DAY_DATE");
            strQry.AppendLine("   ,BREAK_TABLE.EMPLOYEE_LAST_RUNDATE");
            strQry.AppendLine("   ,PCPC.PAY_PERIOD_DATE");
            strQry.AppendLine("   ,C.WAGE_RUN_IND");
            strQry.AppendLine("    --3End Break UNION 2");
            strQry.AppendLine("   ) AS BREAK_SUMMARY_TABLE");
            strQry.AppendLine("    ON TIMESHEET_TOTAL_TABLE.COMPANY_NO = BREAK_SUMMARY_TABLE.COMPANY_NO");
            strQry.AppendLine("    AND TIMESHEET_TOTAL_TABLE.PAY_CATEGORY_TYPE = BREAK_SUMMARY_TABLE.PAY_CATEGORY_TYPE");
            strQry.AppendLine("    AND TIMESHEET_TOTAL_TABLE.PAY_CATEGORY_NO = BREAK_SUMMARY_TABLE.PAY_CATEGORY_NO");
            strQry.AppendLine("    AND TIMESHEET_TOTAL_TABLE.EMPLOYEE_NO = BREAK_SUMMARY_TABLE.EMPLOYEE_NO");
            strQry.AppendLine("    AND TIMESHEET_TOTAL_TABLE.DAY_DATE = BREAK_SUMMARY_TABLE.DAY_DATE");
            strQry.AppendLine("");
            strQry.AppendLine("    GROUP BY");
            strQry.AppendLine("    TIMESHEET_TOTAL_TABLE.COMPANY_NO");
            strQry.AppendLine("   ,TIMESHEET_TOTAL_TABLE.PAY_CATEGORY_TYPE");
            strQry.AppendLine("   ,TIMESHEET_TOTAL_TABLE.PAY_CATEGORY_NO");
            strQry.AppendLine("   ,TIMESHEET_TOTAL_TABLE.EMPLOYEE_NO");
            strQry.AppendLine("   ,TIMESHEET_TOTAL_TABLE.DAY_DATE");
            strQry.AppendLine("   ,TIMESHEET_TOTAL_TABLE.TIMESHEET_ACCUM_MINUTES");
            strQry.AppendLine("   ,TIMESHEET_TOTAL_TABLE.INDICATOR");
            strQry.AppendLine("   ,TIMESHEET_TOTAL_TABLE.BREAK_MINUTES");
            strQry.AppendLine("   ,BREAK_SUMMARY_TABLE.BREAK_ACCUM_MINUTES");
            strQry.AppendLine("   ,BREAK_SUMMARY_TABLE.INDICATOR");
            strQry.AppendLine("   ,BREAK_SUMMARY_TABLE.COMPANY_NO");
            strQry.AppendLine("   ,BREAK_SUMMARY_TABLE.BREAK_INCLUDED_IN_RUN_IND");
            strQry.AppendLine("   ,TIMESHEET_TOTAL_TABLE.TIMESHEET_INCLUDED_IN_RUN_IND");
            strQry.AppendLine("   ,C.WAGE_RUN_IND");
            strQry.AppendLine("    --1End Major UNION 2");
            strQry.AppendLine("   ) AS TEMP1_TABLE");
            strQry.AppendLine("");
            strQry.AppendLine("    INNER JOIN dbo.PAY_CATEGORY PC1");
            strQry.AppendLine("    ON TEMP1_TABLE.COMPANY_NO = PC1.COMPANY_NO");
            strQry.AppendLine("    AND TEMP1_TABLE.PAY_CATEGORY_NO = PC1.PAY_CATEGORY_NO");
            strQry.AppendLine("    AND TEMP1_TABLE.PAY_CATEGORY_TYPE = PC1.PAY_CATEGORY_TYPE");
            strQry.AppendLine("    AND PC1.PAY_CATEGORY_TYPE = '#PAY_CATEGORY_TYPE#'");
            strQry.AppendLine("    --2End Major UNION 2");
            strQry.AppendLine("   ) AS TEMP2_TABLE");
            strQry.AppendLine("");
            strQry.AppendLine("    INNER JOIN dbo.PAY_CATEGORY PC2");
            strQry.AppendLine("    ON TEMP2_TABLE.COMPANY_NO = PC2.COMPANY_NO");
            strQry.AppendLine("    AND TEMP2_TABLE.PAY_CATEGORY_NO = PC2.PAY_CATEGORY_NO");
            strQry.AppendLine("    AND TEMP2_TABLE.PAY_CATEGORY_TYPE = PC2.PAY_CATEGORY_TYPE");
            strQry.AppendLine("    AND PC2.PAY_CATEGORY_TYPE = '#PAY_CATEGORY_TYPE#'");
            strQry.AppendLine("");
            strQry.AppendLine("    INNER JOIN InteractPayroll.dbo.DATES D");
            strQry.AppendLine("    ON TEMP2_TABLE.DAY_DATE = D.DAY_DATE");
            strQry.AppendLine("    --3End Major UNION 2");
            strQry.AppendLine("   ) AS TEMP_TABLE");
            strQry.AppendLine("");
            strQry.AppendLine("    ON ETBDC.COMPANY_NO = TEMP_TABLE.COMPANY_NO");
            strQry.AppendLine("    AND ETBDC.EMPLOYEE_NO = TEMP_TABLE.EMPLOYEE_NO");
            strQry.AppendLine("    AND ETBDC.PAY_CATEGORY_NO = TEMP_TABLE.PAY_CATEGORY_NO");
            strQry.AppendLine("    AND ETBDC.TIMESHEET_DATE = TEMP_TABLE.DAY_DATE");
            strQry.AppendLine("");
            strQry.AppendLine("    END");
            strQry.AppendLine("");
            
            strQry = strQry.Replace("#TRIGGER_TABLE_NAME#", triggerTableName);
            strQry = strQry.Replace("#PAY_CATEGORY_TYPE#", strPayCategoryType);
            strQry = strQry.Replace("#DAY_TABLE#", strDayTable);
            strQry = strQry.Replace("#TIMESHEET_TABLE#", strTimeSheetTable);
            strQry = strQry.Replace("#BREAK_TABLE#", strBreakTable);
            strQry = strQry.Replace("#DATE_FIELD#", strDateField);
            strQry = strQry.Replace("#TIMESHEET_OR_BREAK#", strTimeSheetOrBreak);

            return strQry.ToString();
        }
        
        public string tgr_Create_Payroll_Timesheet()
        {
            string strQry = "";
            strQry += "CREATE TRIGGER tgr_Create_Payroll_Timesheet ON CLOCK_TIME \r\n";
            strQry += "AFTER INSERT AS \r\n";
            strQry += "DECLARE @IN_OUT_IND AS VARCHAR(1) \r\n";
            strQry += "DECLARE @TIMESHEET_DATE AS DATE \r\n";
            strQry += "DECLARE @I_TIMESHEET_DATE AS DATE \r\n";
            strQry += "DECLARE @I_TIMESHEET_TIME_MINUTES AS INT \r\n";
            strQry += "DECLARE @COMPANY_NO AS INT \r\n";
            strQry += "DECLARE @EMPLOYEE_NO AS INT \r\n";
            strQry += "DECLARE @PAY_CATEGORY_NO AS INT \r\n";
            strQry += "DECLARE @PAY_CATEGORY_TYPE AS VARCHAR(1) \r\n";
            strQry += "DECLARE @TIMESHEET_SEQ AS INT \r\n";
            strQry += "DECLARE @TIMESHEET_TIME_IN_MINUTES AS INT \r\n";
            strQry += "DECLARE @TIMESHEET_TIME_OUT_MINUTES AS INT \r\n";
            strQry += "DECLARE @CLOCKED_BOUNDARY_TIME_MINUTES AS INT \r\n";
            strQry += "DECLARE @CURRENT_IDENTITY_SEED AS INT \r\n";
            strQry += "\r\n";
            strQry += "SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\r\n";
            strQry += "\r\n";
            strQry += "--Version 1.5 \r\n";
            strQry += "\r\n";
            strQry += "--Check Identity Seed \r\n";
            strQry += "SELECT @CURRENT_IDENTITY_SEED = IDENT_CURRENT(TABLE_NAME) \r\n";
            strQry += "FROM INFORMATION_SCHEMA.TABLES \r\n";
            strQry += "WHERE OBJECTPROPERTY(OBJECT_ID(TABLE_NAME), 'TableHasIdentity') = 1 \r\n";
            strQry += "AND TABLE_TYPE = 'BASE TABLE' \r\n";
            strQry += "AND TABLE_NAME = 'CLOCK_TIME' \r\n";
            strQry += "\r\n";
            strQry += "PRINT '@CURRENT_IDENTITY_SEED = ' + convert(varchar,@CURRENT_IDENTITY_SEED) \r\n";
            strQry += "\r\n";
            strQry += "IF @CURRENT_IDENTITY_SEED >= 29999 \r\n";
            strQry += "\r\n";
            strQry += "    BEGIN \r\n";
            strQry += "\r\n";
            strQry += "    PRINT 'CLOCK_TIME RESEED 0' \r\n";
            strQry += "\r\n";
            strQry += "    DBCC CHECKIDENT('CLOCK_TIME', RESEED, 0) \r\n";
            strQry += "\r\n";
            strQry += "    END \r\n";
            strQry += "\r\n";
            strQry += "SELECT \r\n";
            strQry += " @IN_OUT_IND = IN_OUT_IND\r\n";
            strQry += ",@PAY_CATEGORY_TYPE = PAY_CATEGORY_TYPE\r\n";
            strQry += ",@CLOCKED_BOUNDARY_TIME_MINUTES = CLOCKED_BOUNDARY_TIME_MINUTES \r\n";
            strQry += "\r\n";
            strQry += "FROM INSERTED \r\n";
            strQry += "\r\n";
            strQry += "IF @IN_OUT_IND = 'I'\r\n";
            strQry += "\r\n";
            strQry += "    BEGIN\r\n";
            strQry += "\r\n";
            strQry += "    IF @PAY_CATEGORY_TYPE = 'W'\r\n";
            strQry += "\r\n";
            strQry += "        BEGIN\r\n";
            strQry += "\r\n";
            strQry += "        INSERT INTO EMPLOYEE_TIMESHEET_CURRENT\r\n";
            strQry += "       (COMPANY_NO\r\n";
            strQry += "       ,EMPLOYEE_NO\r\n";
            strQry += "       ,PAY_CATEGORY_NO\r\n";
            strQry += "       ,TIMESHEET_DATE\r\n";
            strQry += "       ,TIMESHEET_SEQ\r\n";
            strQry += "       ,TIMESHEET_TIME_IN_MINUTES\r\n";
            strQry += "       ,CLOCKED_TIME_IN_MINUTES)\r\n";
            strQry += "\r\n";
            strQry += "        SELECT TOP 1\r\n";
            strQry += "        I.COMPANY_NO\r\n";
            strQry += "       ,I.EMPLOYEE_NO\r\n";
            strQry += "       ,I.PAY_CATEGORY_NO\r\n";
            strQry += "       ,I.TIMESHEET_DATE\r\n";
            strQry += "       ,ISNULL(ETC.TIMESHEET_SEQ,0) + 1\r\n";
            strQry += "       ,I.CLOCKED_BOUNDARY_TIME_MINUTES\r\n";
            strQry += "       ,I.TIMESHEET_TIME_MINUTES\r\n";
            strQry += "\r\n";
            strQry += "        FROM INSERTED I\r\n";
            strQry += "\r\n";
            strQry += "        LEFT JOIN EMPLOYEE_TIMESHEET_CURRENT ETC\r\n";
            strQry += "        ON I.COMPANY_NO = ETC.COMPANY_NO\r\n";
            strQry += "        AND I.EMPLOYEE_NO = ETC.EMPLOYEE_NO\r\n";
            strQry += "        AND I.PAY_CATEGORY_NO = ETC.PAY_CATEGORY_NO\r\n";
            strQry += "        AND I.TIMESHEET_DATE = ETC.TIMESHEET_DATE\r\n";
            strQry += "\r\n";
            strQry += "        ORDER  BY\r\n";
            strQry += "        I.COMPANY_NO\r\n";
            strQry += "       ,I.EMPLOYEE_NO\r\n";
            strQry += "       ,I.PAY_CATEGORY_NO\r\n";
            strQry += "       ,I.TIMESHEET_DATE\r\n";
            strQry += "       ,ETC.TIMESHEET_SEQ DESC\r\n";
            strQry += "\r\n";
            strQry += "        END\r\n";
            strQry += "\r\n";
            strQry += "    ELSE\r\n";
            strQry += "\r\n";
            strQry += "        BEGIN\r\n";
            strQry += "\r\n";
            strQry += "        IF @PAY_CATEGORY_TYPE = 'S'\r\n";
            strQry += "\r\n";
            strQry += "            BEGIN\r\n";
            strQry += "\r\n";
            strQry += "            INSERT INTO EMPLOYEE_SALARY_TIMESHEET_CURRENT\r\n";
            strQry += "           (COMPANY_NO\r\n";
            strQry += "           ,EMPLOYEE_NO\r\n";
            strQry += "           ,PAY_CATEGORY_NO\r\n";
            strQry += "           ,TIMESHEET_DATE\r\n";
            strQry += "           ,TIMESHEET_SEQ\r\n";
            strQry += "           ,TIMESHEET_TIME_IN_MINUTES\r\n";
            strQry += "           ,CLOCKED_TIME_IN_MINUTES)\r\n";
            strQry += "\r\n";
            strQry += "            SELECT TOP 1\r\n";
            strQry += "            I.COMPANY_NO\r\n";
            strQry += "           ,I.EMPLOYEE_NO\r\n";
            strQry += "           ,I.PAY_CATEGORY_NO\r\n";
            strQry += "           ,I.TIMESHEET_DATE\r\n";
            strQry += "           ,ISNULL(ETC.TIMESHEET_SEQ,0) + 1\r\n";
            strQry += "           ,I.CLOCKED_BOUNDARY_TIME_MINUTES\r\n";
            strQry += "           ,I.TIMESHEET_TIME_MINUTES\r\n";
            strQry += "\r\n";
            strQry += "            FROM INSERTED I\r\n";
            strQry += "\r\n";
            strQry += "            LEFT JOIN EMPLOYEE_SALARY_TIMESHEET_CURRENT ETC\r\n";
            strQry += "            ON I.COMPANY_NO = ETC.COMPANY_NO\r\n";
            strQry += "            AND I.EMPLOYEE_NO = ETC.EMPLOYEE_NO\r\n";
            strQry += "            AND I.PAY_CATEGORY_NO = ETC.PAY_CATEGORY_NO\r\n";
            strQry += "            AND I.TIMESHEET_DATE = ETC.TIMESHEET_DATE\r\n";
            strQry += "\r\n";
            strQry += "            ORDER  BY\r\n";
            strQry += "            I.COMPANY_NO\r\n";
            strQry += "           ,I.EMPLOYEE_NO\r\n";
            strQry += "           ,I.PAY_CATEGORY_NO\r\n";
            strQry += "           ,I.TIMESHEET_DATE\r\n";
            strQry += "           ,ETC.TIMESHEET_SEQ DESC\r\n";
            strQry += "\r\n";
            strQry += "            END\r\n";
            strQry += "\r\n";
            strQry += "        ELSE\r\n";
            strQry += "\r\n";
            strQry += "            BEGIN\r\n";
            strQry += "\r\n";
            strQry += "            INSERT INTO EMPLOYEE_TIME_ATTEND_TIMESHEET_CURRENT\r\n";
            strQry += "           (COMPANY_NO\r\n";
            strQry += "           ,EMPLOYEE_NO\r\n";
            strQry += "           ,PAY_CATEGORY_NO\r\n";
            strQry += "           ,TIMESHEET_DATE\r\n";
            strQry += "           ,TIMESHEET_SEQ\r\n";
            strQry += "           ,TIMESHEET_TIME_IN_MINUTES\r\n";
            strQry += "           ,CLOCKED_TIME_IN_MINUTES)\r\n";
            strQry += "\r\n";
            strQry += "            SELECT TOP 1\r\n";
            strQry += "            I.COMPANY_NO\r\n";
            strQry += "           ,I.EMPLOYEE_NO\r\n";
            strQry += "           ,I.PAY_CATEGORY_NO\r\n";
            strQry += "           ,I.TIMESHEET_DATE\r\n";
            strQry += "           ,ISNULL(ETC.TIMESHEET_SEQ,0) + 1\r\n";
            strQry += "           ,I.CLOCKED_BOUNDARY_TIME_MINUTES\r\n";
            strQry += "           ,I.TIMESHEET_TIME_MINUTES\r\n";
            strQry += "\r\n";
            strQry += "            FROM INSERTED I\r\n";
            strQry += "\r\n";
            strQry += "            LEFT JOIN EMPLOYEE_TIME_ATTEND_TIMESHEET_CURRENT ETC\r\n";
            strQry += "            ON I.COMPANY_NO = ETC.COMPANY_NO\r\n";
            strQry += "            AND I.EMPLOYEE_NO = ETC.EMPLOYEE_NO\r\n";
            strQry += "            AND I.PAY_CATEGORY_NO = ETC.PAY_CATEGORY_NO\r\n";
            strQry += "            AND I.TIMESHEET_DATE = ETC.TIMESHEET_DATE\r\n";
            strQry += "\r\n";
            strQry += "            ORDER  BY\r\n";
            strQry += "            I.COMPANY_NO\r\n";
            strQry += "           ,I.EMPLOYEE_NO\r\n";
            strQry += "           ,I.PAY_CATEGORY_NO\r\n";
            strQry += "           ,I.TIMESHEET_DATE\r\n";
            strQry += "           ,ETC.TIMESHEET_SEQ DESC\r\n";
            strQry += "\r\n";
            strQry += "            END\r\n";
            strQry += "\r\n";
            strQry += "        END\r\n";
            strQry += "\r\n";
            strQry += "    END\r\n";
            strQry += "\r\n";
            strQry += "ELSE\r\n";
            strQry += "\r\n";
            strQry += "    --OUT\r\n";
            strQry += "\r\n";
            strQry += "    BEGIN\r\n";
            strQry += "\r\n";
            strQry += "    IF @PAY_CATEGORY_TYPE = 'W'\r\n";
            strQry += "\r\n";
            strQry += "        BEGIN\r\n";
            strQry += "\r\n";
            strQry += "        SELECT TOP 1\r\n";
            strQry += "        @COMPANY_NO = I.COMPANY_NO\r\n";
            strQry += "       ,@EMPLOYEE_NO = I.EMPLOYEE_NO\r\n";
            strQry += "       ,@PAY_CATEGORY_NO = I.PAY_CATEGORY_NO\r\n";
            strQry += "       ,@I_TIMESHEET_DATE = I.TIMESHEET_DATE\r\n";
            strQry += "       ,@TIMESHEET_DATE = ETC.TIMESHEET_DATE\r\n";
            strQry += "       ,@I_TIMESHEET_TIME_MINUTES = I.TIMESHEET_TIME_MINUTES\r\n";
            strQry += "       ,@TIMESHEET_TIME_IN_MINUTES = ETC.TIMESHEET_TIME_IN_MINUTES\r\n";
            strQry += "       ,@TIMESHEET_TIME_OUT_MINUTES = ETC.TIMESHEET_TIME_OUT_MINUTES\r\n";
            strQry += "       ,@TIMESHEET_SEQ = ISNULL(ETC.TIMESHEET_SEQ,0)\r\n";
            strQry += "\r\n";
            strQry += "        FROM INSERTED I\r\n";
            strQry += "\r\n";
            strQry += "        LEFT JOIN EMPLOYEE_TIMESHEET_CURRENT ETC\r\n";
            strQry += "        ON I.COMPANY_NO = ETC.COMPANY_NO\r\n";
            strQry += "        AND I.EMPLOYEE_NO = ETC.EMPLOYEE_NO\r\n";
            strQry += "        AND I.PAY_CATEGORY_NO = ETC.PAY_CATEGORY_NO\r\n";
            strQry += "        --Go Back 1 Day\r\n";
            strQry += "        AND ETC.TIMESHEET_DATE >= DATEADD(DAY,-1,I.TIMESHEET_DATE)\r\n";
            strQry += "\r\n";
            strQry += "        ORDER BY\r\n";
            strQry += "        ETC.TIMESHEET_DATE DESC\r\n";
            strQry += "       ,ETC.TIMESHEET_SEQ DESC\r\n";
            strQry += "\r\n";
            strQry += "        PRINT '@I_TIMESHEET_DATE = ' + convert(varchar,@I_TIMESHEET_DATE)\r\n";
            strQry += "        PRINT '@I_TIMESHEET_TIME_MINUTES = ' + convert(varchar,@I_TIMESHEET_TIME_MINUTES)\r\n";
            strQry += "        PRINT '@TIMESHEET_DATE = ' + convert(varchar,@TIMESHEET_DATE)\r\n";
            strQry += "        PRINT '@TIMESHEET_TIME_IN_MINUTES = ' + convert(varchar,@TIMESHEET_TIME_IN_MINUTES)\r\n";
            strQry += "\r\n";
            strQry += "        -- Complete TimeSheet OR No Timesheets at All\r\n";
            strQry += "        IF @TIMESHEET_TIME_OUT_MINUTES IS NOT NULL\r\n";
            strQry += "        OR @TIMESHEET_DATE IS NULL\r\n";
            strQry += "\r\n";
            strQry += "            BEGIN\r\n";
            strQry += "\r\n";
            strQry += "            PRINT 'Complete TimeSheet OR No Timesheets at All'\r\n";
            strQry += "\r\n";
            strQry += "            INSERT INTO EMPLOYEE_TIMESHEET_CURRENT\r\n";
            strQry += "           (COMPANY_NO\r\n";
            strQry += "           ,EMPLOYEE_NO\r\n";
            strQry += "           ,PAY_CATEGORY_NO\r\n";
            strQry += "           ,TIMESHEET_DATE\r\n";
            strQry += "           ,TIMESHEET_SEQ\r\n";
            strQry += "           ,TIMESHEET_TIME_OUT_MINUTES\r\n";
            strQry += "           ,CLOCKED_TIME_OUT_MINUTES)\r\n";
            strQry += "\r\n";
            strQry += "            SELECT\r\n";
            strQry += "            I.COMPANY_NO\r\n";
            strQry += "           ,I.EMPLOYEE_NO\r\n";
            strQry += "           ,I.PAY_CATEGORY_NO\r\n";
            strQry += "           ,I.TIMESHEET_DATE\r\n";
            strQry += "           ,ISNULL(MAX(ETC.TIMESHEET_SEQ),0) + 1\r\n";
            strQry += "           ,I.CLOCKED_BOUNDARY_TIME_MINUTES\r\n";
            strQry += "           ,@I_TIMESHEET_TIME_MINUTES\r\n";
            strQry += "\r\n";
            strQry += "            FROM INSERTED I\r\n";
            strQry += "\r\n";
            strQry += "            LEFT JOIN EMPLOYEE_TIMESHEET_CURRENT ETC\r\n";
            strQry += "            ON I.COMPANY_NO = ETC.COMPANY_NO\r\n";
            strQry += "            AND I.EMPLOYEE_NO = ETC.EMPLOYEE_NO\r\n";
            strQry += "            AND I.PAY_CATEGORY_NO = ETC.PAY_CATEGORY_NO\r\n";
            strQry += "            AND I.TIMESHEET_DATE = ETC.TIMESHEET_DATE\r\n";
            strQry += "\r\n";
            strQry += "            GROUP BY\r\n";
            strQry += "            I.COMPANY_NO\r\n";
            strQry += "           ,I.EMPLOYEE_NO\r\n";
            strQry += "           ,I.PAY_CATEGORY_NO\r\n";
            strQry += "           ,I.TIMESHEET_DATE\r\n";
            strQry += "           ,I.CLOCKED_BOUNDARY_TIME_MINUTES\r\n";
            strQry += "\r\n";
            strQry += "            END\r\n";
            strQry += "\r\n";
            strQry += "        ELSE\r\n";
            strQry += "\r\n";
            strQry += "            BEGIN\r\n";
            strQry += "\r\n";
            strQry += "            -- IF today\r\n";
            strQry += "            IF CONVERT(CHAR(8),@TIMESHEET_DATE,112) = CONVERT(CHAR(8),@I_TIMESHEET_DATE,112)\r\n";
            strQry += "\r\n";
            strQry += "                BEGIN\r\n";
            strQry += "\r\n";
            strQry += "                PRINT 'Update - Today'\r\n";
            strQry += "\r\n";
            strQry += "                UPDATE EMPLOYEE_TIMESHEET_CURRENT\r\n";
            strQry += "                SET TIMESHEET_TIME_OUT_MINUTES = @CLOCKED_BOUNDARY_TIME_MINUTES\r\n";
            strQry += "               ,CLOCKED_TIME_OUT_MINUTES = @I_TIMESHEET_TIME_MINUTES\r\n";
            strQry += "\r\n";
            strQry += "                WHERE COMPANY_NO = @COMPANY_NO\r\n";
            strQry += "                AND EMPLOYEE_NO = @EMPLOYEE_NO\r\n";
            strQry += "                AND PAY_CATEGORY_NO = @PAY_CATEGORY_NO\r\n";
            strQry += "                AND TIMESHEET_DATE = @I_TIMESHEET_DATE\r\n";
            strQry += "                AND TIMESHEET_SEQ = @TIMESHEET_SEQ\r\n";
            strQry += "\r\n";
            strQry += "                END\r\n";
            strQry += "\r\n";
            strQry += "            ELSE\r\n";
            strQry += "\r\n";
            strQry += "                BEGIN\r\n";
            strQry += "\r\n";
            strQry += "                -- Within 24 Hours\r\n";
            strQry += "                IF @I_TIMESHEET_TIME_MINUTES < @TIMESHEET_TIME_IN_MINUTES\r\n";
            strQry += "\r\n";
            strQry += "                    BEGIN\r\n";
            strQry += "\r\n";
            strQry += "                    PRINT 'Within 24 Hours'\r\n";
            strQry += "\r\n";
            strQry += "                    --Clock Out Yesterday (Midnight)\r\n";
            strQry += "                    UPDATE EMPLOYEE_TIMESHEET_CURRENT\r\n";
            strQry += "                    SET TIMESHEET_TIME_OUT_MINUTES = 1440\r\n";
            strQry += "                   ,CLOCKED_TIME_OUT_MINUTES = 1440\r\n";
            strQry += "\r\n";
            strQry += "                    WHERE COMPANY_NO = @COMPANY_NO\r\n";
            strQry += "                    AND EMPLOYEE_NO = @EMPLOYEE_NO\r\n";
            strQry += "                    AND PAY_CATEGORY_NO = @PAY_CATEGORY_NO\r\n";
            strQry += "                    AND TIMESHEET_DATE = @TIMESHEET_DATE\r\n";
            strQry += "                    AND TIMESHEET_SEQ = @TIMESHEET_SEQ\r\n";
            strQry += "\r\n";
            strQry += "                    --Clock In 0 Hours\r\n";
            strQry += "                    INSERT INTO EMPLOYEE_TIMESHEET_CURRENT\r\n";
            strQry += "                   (COMPANY_NO\r\n";
            strQry += "                   ,EMPLOYEE_NO\r\n";
            strQry += "                   ,PAY_CATEGORY_NO\r\n";
            strQry += "                   ,TIMESHEET_DATE\r\n";
            strQry += "                   ,TIMESHEET_SEQ\r\n";
            strQry += "                   ,TIMESHEET_TIME_IN_MINUTES\r\n";
            strQry += "                   ,CLOCKED_TIME_IN_MINUTES\r\n";
            strQry += "                   ,TIMESHEET_TIME_OUT_MINUTES\r\n";
            strQry += "                   ,CLOCKED_TIME_OUT_MINUTES)\r\n";
            strQry += "\r\n";
            strQry += "                    SELECT\r\n";
            strQry += "                    @COMPANY_NO\r\n";
            strQry += "                   ,@EMPLOYEE_NO\r\n";
            strQry += "                   ,@PAY_CATEGORY_NO\r\n";
            strQry += "                   ,@I_TIMESHEET_DATE\r\n";
            strQry += "                   ,ISNULL(MAX(ETC.TIMESHEET_SEQ),0) + 1\r\n";
            strQry += "                   ,0\r\n";
            strQry += "                   ,0\r\n";
            strQry += "                   ,@CLOCKED_BOUNDARY_TIME_MINUTES\r\n";
            strQry += "                   ,@I_TIMESHEET_TIME_MINUTES\r\n";
            strQry += "\r\n";
            strQry += "                    FROM EMPLOYEE_TIMESHEET_CURRENT ETC\r\n";
            strQry += "                    WHERE ETC.COMPANY_NO = @COMPANY_NO\r\n";
            strQry += "                    AND ETC.EMPLOYEE_NO = @EMPLOYEE_NO\r\n";
            strQry += "                    AND ETC.PAY_CATEGORY_NO = @PAY_CATEGORY_NO\r\n";
            strQry += "                    AND ETC.TIMESHEET_DATE = @I_TIMESHEET_DATE\r\n";
            strQry += "\r\n";
            strQry += "                    END\r\n";
            strQry += "\r\n";
            strQry += "                ELSE\r\n";
            strQry += "\r\n";
            strQry += "                    BEGIN\r\n";
            strQry += "\r\n";
            strQry += "                    PRINT 'NOT Within 24 Hours'\r\n";
            strQry += "\r\n";
            strQry += "                    INSERT INTO EMPLOYEE_TIMESHEET_CURRENT\r\n";
            strQry += "                   (COMPANY_NO\r\n";
            strQry += "                   ,EMPLOYEE_NO\r\n";
            strQry += "                   ,PAY_CATEGORY_NO\r\n";
            strQry += "                   ,TIMESHEET_DATE\r\n";
            strQry += "                   ,TIMESHEET_SEQ\r\n";
            strQry += "                   ,TIMESHEET_TIME_OUT_MINUTES\r\n";
            strQry += "                   ,CLOCKED_TIME_OUT_MINUTES)\r\n";
            strQry += "\r\n";
            strQry += "                    SELECT\r\n";
            strQry += "                    @COMPANY_NO\r\n";
            strQry += "                   ,@EMPLOYEE_NO\r\n";
            strQry += "                   ,@PAY_CATEGORY_NO\r\n";
            strQry += "                   ,@I_TIMESHEET_DATE\r\n";
            strQry += "                   ,ISNULL(MAX(ETC.TIMESHEET_SEQ),0) + 1\r\n";
            strQry += "                   ,@CLOCKED_BOUNDARY_TIME_MINUTES\r\n";
            strQry += "                   ,@I_TIMESHEET_TIME_MINUTES\r\n";
            strQry += "\r\n";
            strQry += "                    FROM EMPLOYEE_TIMESHEET_CURRENT ETC\r\n";
            strQry += "\r\n";
            strQry += "                    WHERE ETC.COMPANY_NO = @COMPANY_NO\r\n";
            strQry += "                    AND ETC.EMPLOYEE_NO = @EMPLOYEE_NO\r\n";
            strQry += "                    AND ETC.PAY_CATEGORY_NO = @PAY_CATEGORY_NO\r\n";
            strQry += "                    AND ETC.TIMESHEET_DATE = @I_TIMESHEET_DATE\r\n";
            strQry += "\r\n";
            strQry += "                    END\r\n";
            strQry += "\r\n";
            strQry += "                END\r\n";
            strQry += "\r\n";
            strQry += "            END\r\n";
            strQry += "\r\n";
            strQry += "        END\r\n";
            strQry += "\r\n";
            strQry += "    ELSE\r\n";
            strQry += "\r\n";
            strQry += "        BEGIN\r\n";
            strQry += "\r\n";
            strQry += "        IF @PAY_CATEGORY_TYPE = 'S'\r\n";
            strQry += "\r\n";
            strQry += "            BEGIN\r\n";
            strQry += "\r\n";
            strQry += "            --SALARIES\r\n";
            strQry += "            SELECT\r\n";
            strQry += "            @COMPANY_NO = I.COMPANY_NO\r\n";
            strQry += "           ,@EMPLOYEE_NO = I.EMPLOYEE_NO\r\n";
            strQry += "           ,@PAY_CATEGORY_NO = I.PAY_CATEGORY_NO\r\n";
            strQry += "           ,@I_TIMESHEET_DATE = I.TIMESHEET_DATE\r\n";
            strQry += "           ,@TIMESHEET_DATE = ETC.TIMESHEET_DATE\r\n";
            strQry += "           ,@I_TIMESHEET_TIME_MINUTES = I.TIMESHEET_TIME_MINUTES\r\n";
            strQry += "           ,@TIMESHEET_TIME_IN_MINUTES = ETC.TIMESHEET_TIME_IN_MINUTES\r\n";
            strQry += "           ,@TIMESHEET_TIME_OUT_MINUTES = ETC.TIMESHEET_TIME_OUT_MINUTES\r\n";
            strQry += "           ,@TIMESHEET_SEQ = ISNULL(ETC.TIMESHEET_SEQ,0)\r\n";
            strQry += "\r\n";
            strQry += "            FROM INSERTED I\r\n";
            strQry += "\r\n";
            strQry += "            LEFT JOIN EMPLOYEE_SALARY_TIMESHEET_CURRENT ETC\r\n";
            strQry += "            ON I.COMPANY_NO = ETC.COMPANY_NO\r\n";
            strQry += "            AND I.EMPLOYEE_NO = ETC.EMPLOYEE_NO\r\n";
            strQry += "            AND I.PAY_CATEGORY_NO = ETC.PAY_CATEGORY_NO\r\n";
            strQry += "            AND CONVERT(CHAR(8),ETC.TIMESHEET_DATE,112) + CONVERT(CHAR(4),ISNULL(ETC.TIMESHEET_SEQ,0)) =\r\n";
            strQry += "            --GET Only 1 Row\r\n";
            strQry += "\r\n";
            strQry += "           (SELECT MAX(CONVERT(CHAR(8),ETC.TIMESHEET_DATE,112) + CONVERT(CHAR(4),ISNULL(ETC.TIMESHEET_SEQ,0)))\r\n";
            strQry += "\r\n";
            strQry += "            FROM INSERTED I\r\n";
            strQry += "\r\n";
            strQry += "            INNER JOIN EMPLOYEE_SALARY_TIMESHEET_CURRENT ETC\r\n";
            strQry += "            ON I.COMPANY_NO = ETC.COMPANY_NO\r\n";
            strQry += "            AND I.EMPLOYEE_NO = ETC.EMPLOYEE_NO\r\n";
            strQry += "            AND I.PAY_CATEGORY_NO = ETC.PAY_CATEGORY_NO\r\n";
            strQry += "            --Go Back 1 Day\r\n";
            strQry += "            AND ETC.TIMESHEET_DATE >= DATEADD(DAY,-1,I.TIMESHEET_DATE))\r\n";
            strQry += "\r\n";
            strQry += "            PRINT '@I_TIMESHEET_DATE = ' + convert(varchar,@I_TIMESHEET_DATE)\r\n";
            strQry += "            PRINT '@I_TIMESHEET_TIME_MINUTES = ' + convert(varchar,@I_TIMESHEET_TIME_MINUTES)\r\n";
            strQry += "            PRINT '@TIMESHEET_DATE = ' + convert(varchar,@TIMESHEET_DATE)\r\n";
            strQry += "            PRINT '@TIMESHEET_TIME_IN_MINUTES = ' + convert(varchar,@TIMESHEET_TIME_IN_MINUTES)\r\n";
            strQry += "\r\n";
            strQry += "            -- Complete TimeSheet OR No Timesheets at All\r\n";
            strQry += "            IF @TIMESHEET_TIME_OUT_MINUTES IS NOT NULL\r\n";
            strQry += "            OR @TIMESHEET_DATE IS NULL\r\n";
            strQry += "\r\n";
            strQry += "                BEGIN\r\n";
            strQry += "\r\n";
            strQry += "                PRINT 'Complete TimeSheet OR No Timesheets at All'\r\n";
            strQry += "                PRINT '@TIMESHEET_SEQ = ' + convert(varchar,@TIMESHEET_SEQ)\r\n";
            strQry += "\r\n";
            strQry += "                INSERT INTO EMPLOYEE_SALARY_TIMESHEET_CURRENT\r\n";
            strQry += "               (COMPANY_NO\r\n";
            strQry += "               ,EMPLOYEE_NO\r\n";
            strQry += "               ,PAY_CATEGORY_NO\r\n";
            strQry += "               ,TIMESHEET_DATE\r\n";
            strQry += "               ,TIMESHEET_SEQ\r\n";
            strQry += "               ,TIMESHEET_TIME_OUT_MINUTES\r\n";
            strQry += "               ,CLOCKED_TIME_OUT_MINUTES)\r\n";
            strQry += "\r\n";
            strQry += "                SELECT\r\n";
            strQry += "                I.COMPANY_NO\r\n";
            strQry += "               ,I.EMPLOYEE_NO\r\n";
            strQry += "               ,I.PAY_CATEGORY_NO\r\n";
            strQry += "               ,I.TIMESHEET_DATE\r\n";
            strQry += "               ,ISNULL(MAX(ETC.TIMESHEET_SEQ),0) + 1\r\n";
            strQry += "               ,I.TIMESHEET_TIME_MINUTES\r\n";
            strQry += "               ,I.TIMESHEET_TIME_MINUTES\r\n";
            strQry += "\r\n";
            strQry += "                FROM INSERTED I\r\n";
            strQry += "\r\n";
            strQry += "                LEFT JOIN EMPLOYEE_SALARY_TIMESHEET_CURRENT ETC\r\n";
            strQry += "                ON I.COMPANY_NO = ETC.COMPANY_NO\r\n";
            strQry += "                AND I.EMPLOYEE_NO = ETC.EMPLOYEE_NO\r\n";
            strQry += "                AND I.PAY_CATEGORY_NO = ETC.PAY_CATEGORY_NO\r\n";
            strQry += "                AND I.TIMESHEET_DATE = ETC.TIMESHEET_DATE\r\n";
            strQry += "\r\n";
            strQry += "                GROUP BY\r\n";
            strQry += "                I.COMPANY_NO\r\n";
            strQry += "               ,I.EMPLOYEE_NO\r\n";
            strQry += "               ,I.PAY_CATEGORY_NO\r\n";
            strQry += "               ,I.TIMESHEET_DATE\r\n";
            strQry += "               ,I.TIMESHEET_TIME_MINUTES\r\n";
            strQry += "\r\n";
            strQry += "                END\r\n";
            strQry += "\r\n";
            strQry += "            ELSE\r\n";
            strQry += "\r\n";
            strQry += "                BEGIN\r\n";
            strQry += "\r\n";
            strQry += "                -- IF today\r\n";
            strQry += "                IF CONVERT(CHAR(8),@TIMESHEET_DATE,112) = CONVERT(CHAR(8),@I_TIMESHEET_DATE,112)\r\n";
            strQry += "\r\n";
            strQry += "                    BEGIN\r\n";
            strQry += "\r\n";
            strQry += "                    PRINT 'Update - Today'\r\n";
            strQry += "\r\n";
            strQry += "                    UPDATE EMPLOYEE_SALARY_TIMESHEET_CURRENT\r\n";
            strQry += "                    SET TIMESHEET_TIME_OUT_MINUTES = @I_TIMESHEET_TIME_MINUTES\r\n";
            strQry += "                   ,CLOCKED_TIME_OUT_MINUTES = @I_TIMESHEET_TIME_MINUTES\r\n";
            strQry += "\r\n";
            strQry += "                    WHERE COMPANY_NO = @COMPANY_NO\r\n";
            strQry += "                    AND EMPLOYEE_NO = @EMPLOYEE_NO\r\n";
            strQry += "                    AND PAY_CATEGORY_NO = @PAY_CATEGORY_NO\r\n";
            strQry += "                    AND TIMESHEET_DATE = @I_TIMESHEET_DATE\r\n";
            strQry += "                    AND TIMESHEET_SEQ = @TIMESHEET_SEQ\r\n";
            strQry += "\r\n";
            strQry += "                    END\r\n";
            strQry += "\r\n";
            strQry += "                ELSE\r\n";
            strQry += "\r\n";
            strQry += "                    BEGIN\r\n";
            strQry += "\r\n";
            strQry += "                    -- Within 24 Hours\r\n";
            strQry += "                    IF @I_TIMESHEET_TIME_MINUTES < @TIMESHEET_TIME_IN_MINUTES\r\n";
            strQry += "\r\n";
            strQry += "                        BEGIN\r\n";
            strQry += "\r\n";
            strQry += "                        PRINT 'Within 24 Hours'\r\n";
            strQry += "\r\n";
            strQry += "                        --Clock Out Yesterday (Midnight)\r\n";
            strQry += "                        UPDATE EMPLOYEE_SALARY_TIMESHEET_CURRENT\r\n";
            strQry += "                        SET TIMESHEET_TIME_OUT_MINUTES = 1440\r\n";
            strQry += "\r\n";
            strQry += "                        WHERE COMPANY_NO = @COMPANY_NO\r\n";
            strQry += "                        AND EMPLOYEE_NO = @EMPLOYEE_NO\r\n";
            strQry += "                        AND PAY_CATEGORY_NO = @PAY_CATEGORY_NO\r\n";
            strQry += "                        AND TIMESHEET_DATE = @TIMESHEET_DATE\r\n";
            strQry += "                        AND TIMESHEET_SEQ = @TIMESHEET_SEQ\r\n";
            strQry += "\r\n";
            strQry += "                        --Clock In 0 Hours\r\n";
            strQry += "                        INSERT INTO EMPLOYEE_SALARY_TIMESHEET_CURRENT\r\n";
            strQry += "                       (COMPANY_NO\r\n";
            strQry += "                       ,EMPLOYEE_NO\r\n";
            strQry += "                       ,PAY_CATEGORY_NO\r\n";
            strQry += "                       ,TIMESHEET_DATE\r\n";
            strQry += "                       ,TIMESHEET_SEQ\r\n";
            strQry += "                       ,TIMESHEET_TIME_IN_MINUTES\r\n";
            strQry += "                       ,TIMESHEET_TIME_OUT_MINUTES\r\n";
            strQry += "                       ,CLOCKED_TIME_OUT_MINUTES)\r\n";
            strQry += "\r\n";
            strQry += "                        SELECT\r\n";
            strQry += "                        @COMPANY_NO\r\n";
            strQry += "                       ,@EMPLOYEE_NO\r\n";
            strQry += "                       ,@PAY_CATEGORY_NO\r\n";
            strQry += "                       ,@I_TIMESHEET_DATE\r\n";
            strQry += "                       ,ISNULL(MAX(ETC.TIMESHEET_SEQ),0) + 1\r\n";
            strQry += "                       ,0\r\n";
            strQry += "                       ,@I_TIMESHEET_TIME_MINUTES\r\n";
            strQry += "                       ,@I_TIMESHEET_TIME_MINUTES\r\n";
            strQry += "\r\n";
            strQry += "                        FROM EMPLOYEE_SALARY_TIMESHEET_CURRENT ETC\r\n";
            strQry += "                        WHERE ETC.COMPANY_NO = @COMPANY_NO\r\n";
            strQry += "                        AND ETC.EMPLOYEE_NO = @EMPLOYEE_NO\r\n";
            strQry += "                        AND ETC.PAY_CATEGORY_NO = @PAY_CATEGORY_NO\r\n";
            strQry += "                        AND ETC.TIMESHEET_DATE = @I_TIMESHEET_DATE\r\n";
            strQry += "\r\n";
            strQry += "                        END\r\n";
            strQry += "\r\n";
            strQry += "                    ELSE\r\n";
            strQry += "\r\n";
            strQry += "                        BEGIN\r\n";
            strQry += "\r\n";
            strQry += "                        PRINT 'NOT Within 24 Hours'\r\n";
            strQry += "\r\n";
            strQry += "                        INSERT INTO EMPLOYEE_SALARY_TIMESHEET_CURRENT\r\n";
            strQry += "                       (COMPANY_NO\r\n";
            strQry += "                       ,EMPLOYEE_NO\r\n";
            strQry += "                       ,PAY_CATEGORY_NO\r\n";
            strQry += "                       ,TIMESHEET_DATE\r\n";
            strQry += "                       ,TIMESHEET_SEQ\r\n";
            strQry += "                       ,TIMESHEET_TIME_OUT_MINUTES\r\n";
            strQry += "                       ,CLOCKED_TIME_OUT_MINUTES)\r\n";
            strQry += "\r\n";
            strQry += "                        SELECT\r\n";
            strQry += "                        @COMPANY_NO\r\n";
            strQry += "                       ,@EMPLOYEE_NO\r\n";
            strQry += "                       ,@PAY_CATEGORY_NO\r\n";
            strQry += "                       ,@I_TIMESHEET_DATE\r\n";
            strQry += "                       ,ISNULL(MAX(ETC.TIMESHEET_SEQ),0) + 1\r\n";
            strQry += "                       ,@I_TIMESHEET_TIME_MINUTES\r\n";
            strQry += "                       ,@I_TIMESHEET_TIME_MINUTES\r\n";
            strQry += "\r\n";
            strQry += "                        FROM EMPLOYEE_SALARY_TIMESHEET_CURRENT ETC\r\n";
            strQry += "\r\n";
            strQry += "                        WHERE ETC.COMPANY_NO = @COMPANY_NO\r\n";
            strQry += "                        AND ETC.EMPLOYEE_NO = @EMPLOYEE_NO\r\n";
            strQry += "                        AND ETC.PAY_CATEGORY_NO = @PAY_CATEGORY_NO\r\n";
            strQry += "                        AND ETC.TIMESHEET_DATE = @I_TIMESHEET_DATE\r\n";
            strQry += "\r\n";
            strQry += "                        END\r\n";
            strQry += "\r\n";
            strQry += "                    END\r\n";
            strQry += "\r\n";
            strQry += "                END\r\n";
            strQry += "\r\n";
            strQry += "            END\r\n";
            strQry += "\r\n";
            strQry += "        ELSE\r\n";
            strQry += "\r\n";
            strQry += "            BEGIN\r\n";
            strQry += "\r\n";
            strQry += "            --TIME ATTENDANCE\r\n";
            strQry += "            SELECT\r\n";
            strQry += "            @COMPANY_NO = I.COMPANY_NO\r\n";
            strQry += "           ,@EMPLOYEE_NO = I.EMPLOYEE_NO\r\n";
            strQry += "           ,@PAY_CATEGORY_NO = I.PAY_CATEGORY_NO\r\n";
            strQry += "           ,@I_TIMESHEET_DATE = I.TIMESHEET_DATE\r\n";
            strQry += "           ,@TIMESHEET_DATE = ETC.TIMESHEET_DATE\r\n";
            strQry += "           ,@I_TIMESHEET_TIME_MINUTES = I.TIMESHEET_TIME_MINUTES\r\n";
            strQry += "           ,@TIMESHEET_TIME_IN_MINUTES = ETC.TIMESHEET_TIME_IN_MINUTES\r\n";
            strQry += "           ,@TIMESHEET_TIME_OUT_MINUTES = ETC.TIMESHEET_TIME_OUT_MINUTES\r\n";
            strQry += "           ,@TIMESHEET_SEQ = ISNULL(ETC.TIMESHEET_SEQ,0)\r\n";
            strQry += "\r\n";
            strQry += "            FROM INSERTED I\r\n";
            strQry += "\r\n";
            strQry += "            LEFT JOIN EMPLOYEE_TIME_ATTEND_TIMESHEET_CURRENT ETC\r\n";
            strQry += "            ON I.COMPANY_NO = ETC.COMPANY_NO\r\n";
            strQry += "            AND I.EMPLOYEE_NO = ETC.EMPLOYEE_NO\r\n";
            strQry += "            AND I.PAY_CATEGORY_NO = ETC.PAY_CATEGORY_NO\r\n";
            strQry += "            AND CONVERT(CHAR(8),ETC.TIMESHEET_DATE,112) + CONVERT(CHAR(4),ISNULL(ETC.TIMESHEET_SEQ,0)) =\r\n";
            strQry += "            --GET Only 1 Row\r\n";
            strQry += "\r\n";
            strQry += "           (SELECT MAX(CONVERT(CHAR(8),ETC.TIMESHEET_DATE,112) + CONVERT(CHAR(4),ISNULL(ETC.TIMESHEET_SEQ,0)))\r\n";
            strQry += "\r\n";
            strQry += "            FROM INSERTED I\r\n";
            strQry += "\r\n";
            strQry += "            INNER JOIN EMPLOYEE_TIME_ATTEND_TIMESHEET_CURRENT ETC\r\n";
            strQry += "            ON I.COMPANY_NO = ETC.COMPANY_NO\r\n";
            strQry += "            AND I.EMPLOYEE_NO = ETC.EMPLOYEE_NO\r\n";
            strQry += "            AND I.PAY_CATEGORY_NO = ETC.PAY_CATEGORY_NO\r\n";
            strQry += "            --Go Back 1 Day\r\n";
            strQry += "            AND ETC.TIMESHEET_DATE >= DATEADD(DAY,-1,I.TIMESHEET_DATE))\r\n";
            strQry += "\r\n";
            strQry += "            PRINT '@I_TIMESHEET_DATE = ' + convert(varchar,@I_TIMESHEET_DATE)\r\n";
            strQry += "            PRINT '@I_TIMESHEET_TIME_MINUTES = ' + convert(varchar,@I_TIMESHEET_TIME_MINUTES)\r\n";
            strQry += "            PRINT '@TIMESHEET_DATE = ' + convert(varchar,@TIMESHEET_DATE)\r\n";
            strQry += "            PRINT '@TIMESHEET_TIME_IN_MINUTES = ' + convert(varchar,@TIMESHEET_TIME_IN_MINUTES)\r\n";
            strQry += "\r\n";
            strQry += "            -- Complete TimeSheet OR No Timesheets at All\r\n";
            strQry += "            IF @TIMESHEET_TIME_OUT_MINUTES IS NOT NULL\r\n";
            strQry += "            OR @TIMESHEET_DATE IS NULL\r\n";
            strQry += "\r\n";
            strQry += "                BEGIN\r\n";
            strQry += "\r\n";
            strQry += "                PRINT 'Complete TimeSheet OR No Timesheets at All'\r\n";
            strQry += "                PRINT '@TIMESHEET_SEQ = ' + convert(varchar,@TIMESHEET_SEQ)\r\n";
            strQry += "\r\n";
            strQry += "                INSERT INTO EMPLOYEE_TIME_ATTEND_TIMESHEET_CURRENT\r\n";
            strQry += "               (COMPANY_NO\r\n";
            strQry += "               ,EMPLOYEE_NO\r\n";
            strQry += "               ,PAY_CATEGORY_NO\r\n";
            strQry += "               ,TIMESHEET_DATE\r\n";
            strQry += "               ,TIMESHEET_SEQ\r\n";
            strQry += "               ,TIMESHEET_TIME_OUT_MINUTES\r\n";
            strQry += "               ,CLOCKED_TIME_OUT_MINUTES)\r\n";
            strQry += "\r\n";
            strQry += "                SELECT\r\n";
            strQry += "                I.COMPANY_NO\r\n";
            strQry += "               ,I.EMPLOYEE_NO\r\n";
            strQry += "               ,I.PAY_CATEGORY_NO\r\n";
            strQry += "               ,I.TIMESHEET_DATE\r\n";
            strQry += "               ,ISNULL(MAX(ETC.TIMESHEET_SEQ),0) + 1\r\n";
            strQry += "               ,I.TIMESHEET_TIME_MINUTES\r\n";
            strQry += "               ,I.TIMESHEET_TIME_MINUTES\r\n";
            strQry += "\r\n";
            strQry += "                FROM INSERTED I\r\n";
            strQry += "\r\n";
            strQry += "                LEFT JOIN EMPLOYEE_TIME_ATTEND_TIMESHEET_CURRENT ETC\r\n";
            strQry += "                ON I.COMPANY_NO = ETC.COMPANY_NO\r\n";
            strQry += "                AND I.EMPLOYEE_NO = ETC.EMPLOYEE_NO\r\n";
            strQry += "                AND I.PAY_CATEGORY_NO = ETC.PAY_CATEGORY_NO\r\n";
            strQry += "                AND I.TIMESHEET_DATE = ETC.TIMESHEET_DATE\r\n";
            strQry += "\r\n";
            strQry += "                GROUP BY\r\n";
            strQry += "                I.COMPANY_NO\r\n";
            strQry += "               ,I.EMPLOYEE_NO\r\n";
            strQry += "               ,I.PAY_CATEGORY_NO\r\n";
            strQry += "               ,I.TIMESHEET_DATE\r\n";
            strQry += "               ,I.TIMESHEET_TIME_MINUTES\r\n";
            strQry += "\r\n";
            strQry += "                END\r\n";
            strQry += "\r\n";
            strQry += "            ELSE\r\n";
            strQry += "\r\n";
            strQry += "                BEGIN\r\n";
            strQry += "\r\n";
            strQry += "                -- IF today\r\n";
            strQry += "                IF CONVERT(CHAR(8),@TIMESHEET_DATE,112) = CONVERT(CHAR(8),@I_TIMESHEET_DATE,112)\r\n";
            strQry += "\r\n";
            strQry += "                    BEGIN\r\n";
            strQry += "\r\n";
            strQry += "                    PRINT 'Update - Today'\r\n";
            strQry += "\r\n";
            strQry += "                    UPDATE EMPLOYEE_TIME_ATTEND_TIMESHEET_CURRENT\r\n";
            strQry += "                    SET TIMESHEET_TIME_OUT_MINUTES = @I_TIMESHEET_TIME_MINUTES\r\n";
            strQry += "                   ,CLOCKED_TIME_OUT_MINUTES = @I_TIMESHEET_TIME_MINUTES\r\n";
            strQry += "\r\n";
            strQry += "                    WHERE COMPANY_NO = @COMPANY_NO\r\n";
            strQry += "                    AND EMPLOYEE_NO = @EMPLOYEE_NO\r\n";
            strQry += "                    AND PAY_CATEGORY_NO = @PAY_CATEGORY_NO\r\n";
            strQry += "                    AND TIMESHEET_DATE = @I_TIMESHEET_DATE\r\n";
            strQry += "                    AND TIMESHEET_SEQ = @TIMESHEET_SEQ\r\n";
            strQry += "\r\n";
            strQry += "                    END\r\n";
            strQry += "\r\n";
            strQry += "                ELSE\r\n";
            strQry += "\r\n";
            strQry += "                    BEGIN\r\n";
            strQry += "\r\n";
            strQry += "                    -- Within 24 Hours\r\n";
            strQry += "                    IF @I_TIMESHEET_TIME_MINUTES < @TIMESHEET_TIME_IN_MINUTES\r\n";
            strQry += "\r\n";
            strQry += "                        BEGIN\r\n";
            strQry += "\r\n";
            strQry += "                        PRINT 'Within 24 Hours'\r\n";
            strQry += "\r\n";
            strQry += "                        --Clock Out Yesterday (Midnight)\r\n";
            strQry += "                        UPDATE EMPLOYEE_TIME_ATTEND_TIMESHEET_CURRENT\r\n";
            strQry += "                        SET TIMESHEET_TIME_OUT_MINUTES = 1440\r\n";
            strQry += "\r\n";
            strQry += "                        WHERE COMPANY_NO = @COMPANY_NO\r\n";
            strQry += "                        AND EMPLOYEE_NO = @EMPLOYEE_NO\r\n";
            strQry += "                        AND PAY_CATEGORY_NO = @PAY_CATEGORY_NO\r\n";
            strQry += "                        AND TIMESHEET_DATE = @TIMESHEET_DATE\r\n";
            strQry += "                        AND TIMESHEET_SEQ = @TIMESHEET_SEQ\r\n";
            strQry += "\r\n";
            strQry += "                        --Clock In 0 Hours\r\n";
            strQry += "                        INSERT INTO EMPLOYEE_TIME_ATTEND_TIMESHEET_CURRENT\r\n";
            strQry += "                       (COMPANY_NO\r\n";
            strQry += "                       ,EMPLOYEE_NO\r\n";
            strQry += "                       ,PAY_CATEGORY_NO\r\n";
            strQry += "                       ,TIMESHEET_DATE\r\n";
            strQry += "                       ,TIMESHEET_SEQ\r\n";
            strQry += "                       ,TIMESHEET_TIME_IN_MINUTES\r\n";
            strQry += "                       ,TIMESHEET_TIME_OUT_MINUTES\r\n";
            strQry += "                       ,CLOCKED_TIME_OUT_MINUTES)\r\n";
            strQry += "\r\n";
            strQry += "                        SELECT\r\n";
            strQry += "                        @COMPANY_NO\r\n";
            strQry += "                       ,@EMPLOYEE_NO\r\n";
            strQry += "                       ,@PAY_CATEGORY_NO\r\n";
            strQry += "                       ,@I_TIMESHEET_DATE\r\n";
            strQry += "                       ,ISNULL(MAX(ETC.TIMESHEET_SEQ),0) + 1\r\n";
            strQry += "                       ,0\r\n";
            strQry += "                       ,@I_TIMESHEET_TIME_MINUTES\r\n";
            strQry += "                       ,@I_TIMESHEET_TIME_MINUTES\r\n";
            strQry += "\r\n";
            strQry += "                        FROM EMPLOYEE_TIME_ATTEND_TIMESHEET_CURRENT ETC\r\n";
            strQry += "                        WHERE ETC.COMPANY_NO = @COMPANY_NO\r\n";
            strQry += "                        AND ETC.EMPLOYEE_NO = @EMPLOYEE_NO\r\n";
            strQry += "                        AND ETC.PAY_CATEGORY_NO = @PAY_CATEGORY_NO\r\n";
            strQry += "                        AND ETC.TIMESHEET_DATE = @I_TIMESHEET_DATE\r\n";
            strQry += "\r\n";
            strQry += "                        END\r\n";
            strQry += "\r\n";
            strQry += "                    ELSE\r\n";
            strQry += "\r\n";
            strQry += "                        BEGIN\r\n";
            strQry += "\r\n";
            strQry += "                        PRINT 'NOT Within 24 Hours'\r\n";
            strQry += "\r\n";
            strQry += "                        INSERT INTO EMPLOYEE_TIME_ATTEND_TIMESHEET_CURRENT\r\n";
            strQry += "                       (COMPANY_NO\r\n";
            strQry += "                       ,EMPLOYEE_NO\r\n";
            strQry += "                       ,PAY_CATEGORY_NO\r\n";
            strQry += "                       ,TIMESHEET_DATE\r\n";
            strQry += "                       ,TIMESHEET_SEQ\r\n";
            strQry += "                       ,TIMESHEET_TIME_OUT_MINUTES\r\n";
            strQry += "                       ,CLOCKED_TIME_OUT_MINUTES)\r\n";
            strQry += "\r\n";
            strQry += "                        SELECT\r\n";
            strQry += "                        @COMPANY_NO\r\n";
            strQry += "                       ,@EMPLOYEE_NO\r\n";
            strQry += "                       ,@PAY_CATEGORY_NO\r\n";
            strQry += "                       ,@I_TIMESHEET_DATE\r\n";
            strQry += "                       ,ISNULL(MAX(ETC.TIMESHEET_SEQ),0) + 1\r\n";
            strQry += "                       ,@I_TIMESHEET_TIME_MINUTES\r\n";
            strQry += "                       ,@I_TIMESHEET_TIME_MINUTES\r\n";
            strQry += "\r\n";
            strQry += "                        FROM EMPLOYEE_TIME_ATTEND_TIMESHEET_CURRENT ETC\r\n";
            strQry += "\r\n";
            strQry += "                        WHERE ETC.COMPANY_NO = @COMPANY_NO\r\n";
            strQry += "                        AND ETC.EMPLOYEE_NO = @EMPLOYEE_NO\r\n";
            strQry += "                        AND ETC.PAY_CATEGORY_NO = @PAY_CATEGORY_NO\r\n";
            strQry += "                        AND ETC.TIMESHEET_DATE = @I_TIMESHEET_DATE\r\n";
            strQry += "\r\n";
            strQry += "                        END\r\n";
            strQry += "\r\n";
            strQry += "                    END\r\n";
            strQry += "\r\n";
            strQry += "                END\r\n";
            strQry += "\r\n";
            strQry += "            END\r\n";
            strQry += "\r\n";
            strQry += "        END\r\n";
            strQry += "\r\n";
            strQry += "    END\r\n";

            return strQry;
        }

        public string tgr_Create_Payroll_Break()
        {
            string strQry = "";
            strQry += "CREATE TRIGGER tgr_Create_Payroll_Break ON CLOCK_TIME_BREAK \r\n";
            strQry += "AFTER INSERT AS \r\n";
            strQry += "DECLARE @IN_OUT_IND AS VARCHAR(1) \r\n";
            strQry += "DECLARE @BREAK_DATE AS DATE \r\n";
            strQry += "DECLARE @I_BREAK_DATE AS DATE \r\n";
            strQry += "DECLARE @I_BREAK_TIME_MINUTES AS INT \r\n";
            strQry += "DECLARE @COMPANY_NO AS INT \r\n";
            strQry += "DECLARE @EMPLOYEE_NO AS INT \r\n";
            strQry += "DECLARE @PAY_CATEGORY_NO AS INT \r\n";
            strQry += "DECLARE @PAY_CATEGORY_TYPE AS VARCHAR(1) \r\n";
            strQry += "DECLARE @BREAK_SEQ AS INT \r\n";
            strQry += "DECLARE @BREAK_TIME_IN_MINUTES AS INT \r\n";
            strQry += "DECLARE @BREAK_TIME_OUT_MINUTES AS INT \r\n";
            strQry += "DECLARE @CURRENT_IDENTITY_SEED AS INT \r\n";
            strQry += "\r\n";
            strQry += "SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\r\n";
            strQry += "\r\n";
            strQry += "--Version 1.5 \r\n";
            strQry += "\r\n";
            strQry += "--Check Identity Seed \r\n";
            strQry += "SELECT @CURRENT_IDENTITY_SEED = IDENT_CURRENT(TABLE_NAME) \r\n";
            strQry += "FROM INFORMATION_SCHEMA.TABLES \r\n";
            strQry += "WHERE OBJECTPROPERTY(OBJECT_ID(TABLE_NAME), 'TableHasIdentity') = 1 \r\n";
            strQry += "AND TABLE_TYPE = 'BASE TABLE' \r\n";
            strQry += "AND TABLE_NAME = 'CLOCK_TIME_BREAK' \r\n";
            strQry += "\r\n";
            strQry += "PRINT '@CURRENT_IDENTITY_SEED = ' + convert(varchar,@CURRENT_IDENTITY_SEED) \r\n";
            strQry += "\r\n";
            strQry += "IF @CURRENT_IDENTITY_SEED >= 29999 \r\n";
            strQry += "\r\n";
            strQry += "    BEGIN \r\n";
            strQry += "\r\n";
            strQry += "    PRINT 'CLOCK_TIME_BREAK RESEED 0' \r\n";
            strQry += "\r\n";
            strQry += "    DBCC CHECKIDENT('CLOCK_TIME_BREAK', RESEED, 0) \r\n";
            strQry += "\r\n";
            strQry += "    END \r\n";
            strQry += "\r\n";
            strQry += "SELECT \r\n";
            strQry += " @IN_OUT_IND = IN_OUT_IND\r\n";
            strQry += ",@PAY_CATEGORY_TYPE = PAY_CATEGORY_TYPE\r\n";
            strQry += "\r\n";
            strQry += "FROM INSERTED \r\n";
            strQry += "\r\n";
            strQry += "IF @IN_OUT_IND = 'I'\r\n";
            strQry += "\r\n";
            strQry += "    BEGIN\r\n";
            strQry += "\r\n";
            strQry += "    IF @PAY_CATEGORY_TYPE = 'W'\r\n";
            strQry += "\r\n";
            strQry += "        BEGIN\r\n";
            strQry += "\r\n";
            strQry += "        INSERT INTO EMPLOYEE_BREAK_CURRENT\r\n";
            strQry += "       (COMPANY_NO\r\n";
            strQry += "       ,EMPLOYEE_NO\r\n";
            strQry += "       ,PAY_CATEGORY_NO\r\n";
            strQry += "       ,BREAK_DATE\r\n";
            strQry += "       ,BREAK_SEQ\r\n";
            strQry += "       ,BREAK_TIME_IN_MINUTES\r\n";
            strQry += "       ,CLOCKED_TIME_IN_MINUTES)\r\n";
            strQry += "\r\n";
            strQry += "        SELECT TOP 1\r\n";
            strQry += "        I.COMPANY_NO\r\n";
            strQry += "       ,I.EMPLOYEE_NO\r\n";
            strQry += "       ,I.PAY_CATEGORY_NO\r\n";
            strQry += "       ,I.BREAK_DATE\r\n";
            strQry += "       ,ISNULL(ETC.BREAK_SEQ,0) + 1\r\n";
            strQry += "       ,I.BREAK_TIME_MINUTES\r\n";
            strQry += "       ,I.BREAK_TIME_MINUTES\r\n";
            strQry += "\r\n";
            strQry += "        FROM INSERTED I\r\n";
            strQry += "\r\n";
            strQry += "        LEFT JOIN EMPLOYEE_BREAK_CURRENT ETC\r\n";
            strQry += "        ON I.COMPANY_NO = ETC.COMPANY_NO\r\n";
            strQry += "        AND I.EMPLOYEE_NO = ETC.EMPLOYEE_NO\r\n";
            strQry += "        AND I.PAY_CATEGORY_NO = ETC.PAY_CATEGORY_NO\r\n";
            strQry += "        AND I.BREAK_DATE = ETC.BREAK_DATE\r\n";
            strQry += "\r\n";
            strQry += "        ORDER  BY\r\n";
            strQry += "        I.COMPANY_NO\r\n";
            strQry += "       ,I.EMPLOYEE_NO\r\n";
            strQry += "       ,I.PAY_CATEGORY_NO\r\n";
            strQry += "       ,I.BREAK_DATE\r\n";
            strQry += "       ,ETC.BREAK_SEQ DESC\r\n";
            strQry += "\r\n";
            strQry += "        END\r\n";
            strQry += "\r\n";
            strQry += "    ELSE\r\n";
            strQry += "\r\n";
            strQry += "        BEGIN\r\n";
            strQry += "\r\n";
            strQry += "        IF @PAY_CATEGORY_TYPE = 'S'\r\n";
            strQry += "\r\n";
            strQry += "            BEGIN\r\n";
            strQry += "\r\n";
            strQry += "            INSERT INTO EMPLOYEE_SALARY_BREAK_CURRENT\r\n";
            strQry += "           (COMPANY_NO\r\n";
            strQry += "           ,EMPLOYEE_NO\r\n";
            strQry += "           ,PAY_CATEGORY_NO\r\n";
            strQry += "           ,BREAK_DATE\r\n";
            strQry += "           ,BREAK_SEQ\r\n";
            strQry += "           ,BREAK_TIME_IN_MINUTES\r\n";
            strQry += "           ,CLOCKED_TIME_IN_MINUTES)\r\n";
            strQry += "\r\n";
            strQry += "            SELECT TOP 1\r\n";
            strQry += "            I.COMPANY_NO\r\n";
            strQry += "           ,I.EMPLOYEE_NO\r\n";
            strQry += "           ,I.PAY_CATEGORY_NO\r\n";
            strQry += "           ,I.BREAK_DATE\r\n";
            strQry += "           ,ISNULL(ETC.BREAK_SEQ,0) + 1\r\n";
            strQry += "           ,I.BREAK_TIME_MINUTES\r\n";
            strQry += "           ,I.BREAK_TIME_MINUTES\r\n";
            strQry += "\r\n";
            strQry += "            FROM INSERTED I\r\n";
            strQry += "\r\n";
            strQry += "            LEFT JOIN EMPLOYEE_SALARY_BREAK_CURRENT ETC\r\n";
            strQry += "            ON I.COMPANY_NO = ETC.COMPANY_NO\r\n";
            strQry += "            AND I.EMPLOYEE_NO = ETC.EMPLOYEE_NO\r\n";
            strQry += "            AND I.PAY_CATEGORY_NO = ETC.PAY_CATEGORY_NO\r\n";
            strQry += "            AND I.BREAK_DATE = ETC.BREAK_DATE\r\n";
            strQry += "\r\n";
            strQry += "            ORDER  BY\r\n";
            strQry += "            I.COMPANY_NO\r\n";
            strQry += "           ,I.EMPLOYEE_NO\r\n";
            strQry += "           ,I.PAY_CATEGORY_NO\r\n";
            strQry += "           ,I.BREAK_DATE\r\n";
            strQry += "           ,ETC.BREAK_SEQ DESC\r\n";
            strQry += "\r\n";
            strQry += "           END\r\n";
            strQry += "\r\n";
            strQry += "        ELSE\r\n";
            strQry += "\r\n";
            strQry += "            BEGIN\r\n";
            strQry += "\r\n";
            strQry += "            --TIME ATTENDANCE\r\n";
            strQry += "            INSERT INTO EMPLOYEE_TIME_ATTEND_BREAK_CURRENT\r\n";
            strQry += "           (COMPANY_NO\r\n";
            strQry += "           ,EMPLOYEE_NO\r\n";
            strQry += "           ,PAY_CATEGORY_NO\r\n";
            strQry += "           ,BREAK_DATE\r\n";
            strQry += "           ,BREAK_SEQ\r\n";
            strQry += "           ,BREAK_TIME_IN_MINUTES\r\n";
            strQry += "           ,CLOCKED_TIME_IN_MINUTES)\r\n";
            strQry += "\r\n";
            strQry += "            SELECT TOP 1\r\n";
            strQry += "            I.COMPANY_NO\r\n";
            strQry += "           ,I.EMPLOYEE_NO\r\n";
            strQry += "           ,I.PAY_CATEGORY_NO\r\n";
            strQry += "           ,I.BREAK_DATE\r\n";
            strQry += "           ,ISNULL(ETC.BREAK_SEQ,0) + 1\r\n";
            strQry += "           ,I.BREAK_TIME_MINUTES\r\n";
            strQry += "           ,I.BREAK_TIME_MINUTES\r\n";
            strQry += "\r\n";
            strQry += "            FROM INSERTED I\r\n";
            strQry += "\r\n";
            strQry += "            LEFT JOIN EMPLOYEE_TIME_ATTEND_BREAK_CURRENT ETC\r\n";
            strQry += "            ON I.COMPANY_NO = ETC.COMPANY_NO\r\n";
            strQry += "            AND I.EMPLOYEE_NO = ETC.EMPLOYEE_NO\r\n";
            strQry += "            AND I.PAY_CATEGORY_NO = ETC.PAY_CATEGORY_NO\r\n";
            strQry += "            AND I.BREAK_DATE = ETC.BREAK_DATE\r\n";
            strQry += "\r\n";
            strQry += "            ORDER  BY\r\n";
            strQry += "            I.COMPANY_NO\r\n";
            strQry += "           ,I.EMPLOYEE_NO\r\n";
            strQry += "           ,I.PAY_CATEGORY_NO\r\n";
            strQry += "           ,I.BREAK_DATE\r\n";
            strQry += "           ,ETC.BREAK_SEQ DESC\r\n";
            strQry += "\r\n";
            strQry += "            END\r\n";
            strQry += "\r\n";
            strQry += "        END\r\n";
            strQry += "\r\n";
            strQry += "    END\r\n";
            strQry += "\r\n";
            strQry += "ELSE\r\n";
            strQry += "\r\n";
            strQry += "    --OUT\r\n";
            strQry += "\r\n";
            strQry += "    BEGIN\r\n";
            strQry += "\r\n";
            strQry += "    IF @PAY_CATEGORY_TYPE = 'W'\r\n";
            strQry += "\r\n";
            strQry += "        BEGIN\r\n";
            strQry += "\r\n";
            strQry += "        SELECT TOP 1\r\n";
            strQry += "        @COMPANY_NO = I.COMPANY_NO\r\n";
            strQry += "       ,@EMPLOYEE_NO = I.EMPLOYEE_NO\r\n";
            strQry += "       ,@PAY_CATEGORY_NO = I.PAY_CATEGORY_NO\r\n";
            strQry += "       ,@I_BREAK_DATE = I.BREAK_DATE\r\n";
            strQry += "       ,@BREAK_DATE = ETC.BREAK_DATE\r\n";
            strQry += "       ,@I_BREAK_TIME_MINUTES = I.BREAK_TIME_MINUTES\r\n";
            strQry += "       ,@BREAK_TIME_IN_MINUTES = ETC.BREAK_TIME_IN_MINUTES\r\n";
            strQry += "       ,@BREAK_TIME_OUT_MINUTES = ETC.BREAK_TIME_OUT_MINUTES\r\n";
            strQry += "       ,@BREAK_SEQ = ISNULL(ETC.BREAK_SEQ,0)\r\n";
            strQry += "\r\n";
            strQry += "        FROM INSERTED I\r\n";
            strQry += "\r\n";
            strQry += "        LEFT JOIN EMPLOYEE_BREAK_CURRENT ETC\r\n";
            strQry += "        ON I.COMPANY_NO = ETC.COMPANY_NO\r\n";
            strQry += "        AND I.EMPLOYEE_NO = ETC.EMPLOYEE_NO\r\n";
            strQry += "        AND I.PAY_CATEGORY_NO = ETC.PAY_CATEGORY_NO\r\n";
            strQry += "        --Go Back 1 Day\r\n";
            strQry += "        AND ETC.BREAK_DATE >= DATEADD(DAY,-1,I.BREAK_DATE)\r\n";
            strQry += "\r\n";
            strQry += "        ORDER BY\r\n";
            strQry += "        ETC.BREAK_DATE DESC\r\n";
            strQry += "       ,ETC.BREAK_SEQ DESC\r\n";
            strQry += "\r\n";
            strQry += "        PRINT '@I_BREAK_DATE = ' + convert(varchar,@I_BREAK_DATE)\r\n";
            strQry += "        PRINT '@I_BREAK_TIME_MINUTES = ' + convert(varchar,@I_BREAK_TIME_MINUTES)\r\n";
            strQry += "        PRINT '@BREAK_DATE = ' + convert(varchar,@BREAK_DATE)\r\n";
            strQry += "        PRINT '@BREAK_TIME_IN_MINUTES = ' + convert(varchar,@BREAK_TIME_IN_MINUTES)\r\n";
            strQry += "\r\n";
            strQry += "        -- Complete TimeSheet OR No Timesheets at All\r\n";
            strQry += "        IF @BREAK_TIME_OUT_MINUTES IS NOT NULL\r\n";
            strQry += "        OR @BREAK_DATE IS NULL\r\n";
            strQry += "\r\n";
            strQry += "            BEGIN\r\n";
            strQry += "\r\n";
            strQry += "            PRINT 'Complete TimeSheet OR No Timesheets at All'\r\n";
            strQry += "\r\n";
            strQry += "            INSERT INTO EMPLOYEE_BREAK_CURRENT\r\n";
            strQry += "           (COMPANY_NO\r\n";
            strQry += "           ,EMPLOYEE_NO\r\n";
            strQry += "           ,PAY_CATEGORY_NO\r\n";
            strQry += "           ,BREAK_DATE\r\n";
            strQry += "           ,BREAK_SEQ\r\n";
            strQry += "           ,BREAK_TIME_OUT_MINUTES\r\n";
            strQry += "           ,CLOCKED_TIME_OUT_MINUTES)\r\n";
            strQry += "\r\n";
            strQry += "            SELECT\r\n";
            strQry += "            I.COMPANY_NO\r\n";
            strQry += "           ,I.EMPLOYEE_NO\r\n";
            strQry += "           ,I.PAY_CATEGORY_NO\r\n";
            strQry += "           ,I.BREAK_DATE\r\n";
            strQry += "           ,ISNULL(MAX(ETC.BREAK_SEQ),0) + 1\r\n";
            strQry += "           ,I.BREAK_TIME_MINUTES\r\n";
            strQry += "           ,@I_BREAK_TIME_MINUTES\r\n";
            strQry += "\r\n";
            strQry += "            FROM INSERTED I\r\n";
            strQry += "\r\n";
            strQry += "            LEFT JOIN EMPLOYEE_BREAK_CURRENT ETC\r\n";
            strQry += "            ON I.COMPANY_NO = ETC.COMPANY_NO\r\n";
            strQry += "            AND I.EMPLOYEE_NO = ETC.EMPLOYEE_NO\r\n";
            strQry += "            AND I.PAY_CATEGORY_NO = ETC.PAY_CATEGORY_NO\r\n";
            strQry += "            AND I.BREAK_DATE = ETC.BREAK_DATE\r\n";
            strQry += "            GROUP BY\r\n";
            strQry += "            I.COMPANY_NO\r\n";
            strQry += "           ,I.EMPLOYEE_NO\r\n";
            strQry += "           ,I.PAY_CATEGORY_NO\r\n";
            strQry += "           ,I.BREAK_DATE\r\n";
            strQry += "           ,I.BREAK_TIME_MINUTES\r\n";
            strQry += "\r\n";
            strQry += "            END\r\n";
            strQry += "\r\n";
            strQry += "        ELSE\r\n";
            strQry += "\r\n";
            strQry += "            BEGIN\r\n";
            strQry += "\r\n";
            strQry += "            -- IF today\r\n";
            strQry += "            IF CONVERT(CHAR(8),@BREAK_DATE,112) = CONVERT(CHAR(8),@I_BREAK_DATE,112)\r\n";
            strQry += "\r\n";
            strQry += "                BEGIN\r\n";
            strQry += "\r\n";
            strQry += "                PRINT 'Update - Today'\r\n";
            strQry += "\r\n";
            strQry += "                UPDATE EMPLOYEE_BREAK_CURRENT\r\n";
            strQry += "                SET BREAK_TIME_OUT_MINUTES = @I_BREAK_TIME_MINUTES\r\n";
            strQry += "               ,CLOCKED_TIME_OUT_MINUTES = @I_BREAK_TIME_MINUTES\r\n";
            strQry += "\r\n";
            strQry += "                WHERE COMPANY_NO = @COMPANY_NO\r\n";
            strQry += "                AND EMPLOYEE_NO = @EMPLOYEE_NO\r\n";
            strQry += "                AND PAY_CATEGORY_NO = @PAY_CATEGORY_NO\r\n";
            strQry += "                AND BREAK_DATE = @I_BREAK_DATE\r\n";
            strQry += "                AND BREAK_SEQ = @BREAK_SEQ\r\n";
            strQry += "\r\n";
            strQry += "                END\r\n";
            strQry += "\r\n";
            strQry += "            ELSE\r\n";
            strQry += "\r\n";
            strQry += "                BEGIN\r\n";
            strQry += "\r\n";
            strQry += "                -- Within 24 Hours\r\n";
            strQry += "                IF @I_BREAK_TIME_MINUTES < @BREAK_TIME_IN_MINUTES\r\n";
            strQry += "\r\n";
            strQry += "                    BEGIN\r\n";
            strQry += "\r\n";
            strQry += "                    PRINT 'Within 24 Hours'\r\n";
            strQry += "\r\n";
            strQry += "                    --Clock Out Yesterday (Midnight)\r\n";
            strQry += "                    UPDATE EMPLOYEE_BREAK_CURRENT\r\n";
            strQry += "                    SET BREAK_TIME_OUT_MINUTES = 1440\r\n";
            strQry += "                   ,CLOCKED_TIME_OUT_MINUTES = 1440\r\n";
            strQry += "\r\n";
            strQry += "                    WHERE COMPANY_NO = @COMPANY_NO\r\n";
            strQry += "                    AND EMPLOYEE_NO = @EMPLOYEE_NO\r\n";
            strQry += "                    AND PAY_CATEGORY_NO = @PAY_CATEGORY_NO\r\n";
            strQry += "                    AND BREAK_DATE = @BREAK_DATE\r\n";
            strQry += "                    AND BREAK_SEQ = @BREAK_SEQ\r\n";
            strQry += "\r\n";
            strQry += "                    --Clock In 0 Hours\r\n";
            strQry += "                    INSERT INTO EMPLOYEE_BREAK_CURRENT\r\n";
            strQry += "                   (COMPANY_NO\r\n";
            strQry += "                   ,EMPLOYEE_NO\r\n";
            strQry += "                   ,PAY_CATEGORY_NO\r\n";
            strQry += "                   ,BREAK_DATE\r\n";
            strQry += "                   ,BREAK_SEQ\r\n";
            strQry += "                   ,BREAK_TIME_IN_MINUTES\r\n";
            strQry += "                   ,CLOCKED_TIME_IN_MINUTES\r\n";
            strQry += "                   ,BREAK_TIME_OUT_MINUTES\r\n";
            strQry += "                   ,CLOCKED_TIME_OUT_MINUTES)\r\n";
            strQry += "\r\n";
            strQry += "                    SELECT\r\n";
            strQry += "                    @COMPANY_NO\r\n";
            strQry += "                   ,@EMPLOYEE_NO\r\n";
            strQry += "                   ,@PAY_CATEGORY_NO\r\n";
            strQry += "                   ,@I_BREAK_DATE\r\n";
            strQry += "                   ,ISNULL(MAX(ETC.BREAK_SEQ),0) + 1\r\n";
            strQry += "                   ,0\r\n";
            strQry += "                   ,0\r\n";
            strQry += "                   ,@I_BREAK_TIME_MINUTES\r\n";
            strQry += "                   ,@I_BREAK_TIME_MINUTES\r\n";
            strQry += "\r\n";
            strQry += "                    FROM EMPLOYEE_BREAK_CURRENT ETC\r\n";
            strQry += "\r\n";
            strQry += "                    WHERE ETC.COMPANY_NO = @COMPANY_NO\r\n";
            strQry += "                    AND ETC.EMPLOYEE_NO = @EMPLOYEE_NO\r\n";
            strQry += "                    AND ETC.PAY_CATEGORY_NO = @PAY_CATEGORY_NO\r\n";
            strQry += "                    AND ETC.BREAK_DATE = @I_BREAK_DATE\r\n";
            strQry += "\r\n";
            strQry += "                    END\r\n";
            strQry += "\r\n";
            strQry += "                ELSE\r\n";
            strQry += "\r\n";
            strQry += "                    BEGIN\r\n";
            strQry += "\r\n";
            strQry += "                    PRINT 'NOT Within 24 Hours'\r\n";
            strQry += "\r\n";
            strQry += "                    INSERT INTO EMPLOYEE_BREAK_CURRENT\r\n";
            strQry += "                   (COMPANY_NO\r\n";
            strQry += "                   ,EMPLOYEE_NO\r\n";
            strQry += "                   ,PAY_CATEGORY_NO\r\n";
            strQry += "                   ,BREAK_DATE\r\n";
            strQry += "                   ,BREAK_SEQ\r\n";
            strQry += "                   ,BREAK_TIME_OUT_MINUTES\r\n";
            strQry += "                   ,CLOCKED_TIME_OUT_MINUTES)\r\n";
            strQry += "\r\n";
            strQry += "                    SELECT\r\n";
            strQry += "                    @COMPANY_NO\r\n";
            strQry += "                   ,@EMPLOYEE_NO\r\n";
            strQry += "                   ,@PAY_CATEGORY_NO\r\n";
            strQry += "                   ,@I_BREAK_DATE\r\n";
            strQry += "                   ,ISNULL(MAX(ETC.BREAK_SEQ),0) + 1\r\n";
            strQry += "                   ,@I_BREAK_TIME_MINUTES\r\n";
            strQry += "                   ,@I_BREAK_TIME_MINUTES\r\n";
            strQry += "\r\n";
            strQry += "                    FROM EMPLOYEE_BREAK_CURRENT ETC\r\n";
            strQry += "\r\n";
            strQry += "                    WHERE ETC.COMPANY_NO = @COMPANY_NO\r\n";
            strQry += "                    AND ETC.EMPLOYEE_NO = @EMPLOYEE_NO\r\n";
            strQry += "                    AND ETC.PAY_CATEGORY_NO = @PAY_CATEGORY_NO\r\n";
            strQry += "                    AND ETC.BREAK_DATE = @I_BREAK_DATE\r\n";
            strQry += "\r\n";
            strQry += "                    END\r\n";
            strQry += "\r\n";
            strQry += "                END\r\n";
            strQry += "\r\n";
            strQry += "            END\r\n";
            strQry += "\r\n";
            strQry += "        END\r\n";
            strQry += "\r\n";
            strQry += "    ELSE\r\n";
            strQry += "\r\n";
            strQry += "        BEGIN\r\n";
            strQry += "\r\n";
            strQry += "        IF @PAY_CATEGORY_TYPE = 'S'\r\n";
            strQry += "\r\n";
            strQry += "            BEGIN\r\n";
            strQry += "\r\n";
            strQry += "            --SALARIES\r\n";
            strQry += "            SELECT\r\n";
            strQry += "            @COMPANY_NO = I.COMPANY_NO\r\n";
            strQry += "           ,@EMPLOYEE_NO = I.EMPLOYEE_NO\r\n";
            strQry += "           ,@PAY_CATEGORY_NO = I.PAY_CATEGORY_NO\r\n";
            strQry += "           ,@I_BREAK_DATE = I.BREAK_DATE\r\n";
            strQry += "           ,@BREAK_DATE = ETC.BREAK_DATE\r\n";
            strQry += "           ,@I_BREAK_TIME_MINUTES = I.BREAK_TIME_MINUTES\r\n";
            strQry += "           ,@BREAK_TIME_IN_MINUTES = ETC.BREAK_TIME_IN_MINUTES\r\n";
            strQry += "           ,@BREAK_TIME_OUT_MINUTES = ETC.BREAK_TIME_OUT_MINUTES\r\n";
            strQry += "           ,@BREAK_SEQ = ISNULL(ETC.BREAK_SEQ,0)\r\n";
            strQry += "\r\n";
            strQry += "            FROM INSERTED I\r\n";
            strQry += "\r\n";
            strQry += "            LEFT JOIN EMPLOYEE_SALARY_BREAK_CURRENT ETC\r\n";
            strQry += "            ON I.COMPANY_NO = ETC.COMPANY_NO\r\n";
            strQry += "            AND I.EMPLOYEE_NO = ETC.EMPLOYEE_NO\r\n";
            strQry += "            AND I.PAY_CATEGORY_NO = ETC.PAY_CATEGORY_NO\r\n";
            strQry += "            AND CONVERT(CHAR(8),ETC.BREAK_DATE,112) + CONVERT(CHAR(4),ISNULL(ETC.BREAK_SEQ,0)) =\r\n";
            strQry += "            --GET Only 1 Row\r\n";
            strQry += "\r\n";
            strQry += "           (SELECT MAX(CONVERT(CHAR(8),ETC.BREAK_DATE,112) + CONVERT(CHAR(4),ISNULL(ETC.BREAK_SEQ,0)))\r\n";
            strQry += "\r\n";
            strQry += "            FROM INSERTED I\r\n";
            strQry += "\r\n";
            strQry += "            INNER JOIN EMPLOYEE_SALARY_BREAK_CURRENT ETC\r\n";
            strQry += "            ON I.COMPANY_NO = ETC.COMPANY_NO\r\n";
            strQry += "            AND I.EMPLOYEE_NO = ETC.EMPLOYEE_NO\r\n";
            strQry += "            AND I.PAY_CATEGORY_NO = ETC.PAY_CATEGORY_NO\r\n";
            strQry += "            --Go Back 1 Day\r\n";
            strQry += "            AND ETC.BREAK_DATE >= DATEADD(DAY,-1,I.BREAK_DATE))\r\n";
            strQry += "\r\n";
            strQry += "            PRINT '@I_BREAK_DATE = ' + convert(varchar,@I_BREAK_DATE)\r\n";
            strQry += "            PRINT '@I_BREAK_TIME_MINUTES = ' + convert(varchar,@I_BREAK_TIME_MINUTES)\r\n";
            strQry += "            PRINT '@BREAK_DATE = ' + convert(varchar,@BREAK_DATE)\r\n";
            strQry += "            PRINT '@BREAK_TIME_IN_MINUTES = ' + convert(varchar,@BREAK_TIME_IN_MINUTES)\r\n";
            strQry += "\r\n";
            strQry += "            -- Complete TimeSheet OR No Timesheets at All\r\n";
            strQry += "            IF @BREAK_TIME_OUT_MINUTES IS NOT NULL\r\n";
            strQry += "            OR @BREAK_DATE IS NULL\r\n";
            strQry += "\r\n";
            strQry += "                BEGIN\r\n";
            strQry += "\r\n";
            strQry += "                PRINT 'Complete TimeSheet OR No Timesheets at All'\r\n";
            strQry += "                PRINT '@BREAK_SEQ = ' + convert(varchar,@BREAK_SEQ)\r\n";
            strQry += "\r\n";
            strQry += "                INSERT INTO EMPLOYEE_SALARY_BREAK_CURRENT\r\n";
            strQry += "               (COMPANY_NO\r\n";
            strQry += "               ,EMPLOYEE_NO\r\n";
            strQry += "               ,PAY_CATEGORY_NO\r\n";
            strQry += "               ,BREAK_DATE\r\n";
            strQry += "               ,BREAK_SEQ\r\n";
            strQry += "               ,BREAK_TIME_OUT_MINUTES\r\n";
            strQry += "               ,CLOCKED_TIME_OUT_MINUTES)\r\n";
            strQry += "\r\n";
            strQry += "                SELECT\r\n";
            strQry += "                I.COMPANY_NO\r\n";
            strQry += "               ,I.EMPLOYEE_NO\r\n";
            strQry += "               ,I.PAY_CATEGORY_NO\r\n";
            strQry += "               ,I.BREAK_DATE\r\n";
            strQry += "               ,ISNULL(MAX(ETC.BREAK_SEQ),0) + 1\r\n";
            strQry += "               ,I.BREAK_TIME_MINUTES\r\n";
            strQry += "               ,I.BREAK_TIME_MINUTES\r\n";
            strQry += "\r\n";
            strQry += "                FROM INSERTED I\r\n";
            strQry += "\r\n";
            strQry += "                LEFT JOIN EMPLOYEE_SALARY_BREAK_CURRENT ETC\r\n";
            strQry += "                ON I.COMPANY_NO = ETC.COMPANY_NO\r\n";
            strQry += "                AND I.EMPLOYEE_NO = ETC.EMPLOYEE_NO\r\n";
            strQry += "                AND I.PAY_CATEGORY_NO = ETC.PAY_CATEGORY_NO\r\n";
            strQry += "                AND I.BREAK_DATE = ETC.BREAK_DATE\r\n";
            strQry += "\r\n";
            strQry += "                GROUP BY\r\n";
            strQry += "                I.COMPANY_NO\r\n";
            strQry += "               ,I.EMPLOYEE_NO\r\n";
            strQry += "               ,I.PAY_CATEGORY_NO\r\n";
            strQry += "               ,I.BREAK_DATE\r\n";
            strQry += "               ,I.BREAK_TIME_MINUTES\r\n";
            strQry += "\r\n";
            strQry += "                END\r\n";
            strQry += "\r\n";
            strQry += "            ELSE\r\n";
            strQry += "\r\n";
            strQry += "                BEGIN\r\n";
            strQry += "\r\n";
            strQry += "                -- IF today\r\n";
            strQry += "                IF CONVERT(CHAR(8),@BREAK_DATE,112) = CONVERT(CHAR(8),@I_BREAK_DATE,112)\r\n";
            strQry += "\r\n";
            strQry += "                    BEGIN\r\n";
            strQry += "\r\n";
            strQry += "                    PRINT 'Update - Today'\r\n";
            strQry += "\r\n";
            strQry += "                    UPDATE EMPLOYEE_SALARY_BREAK_CURRENT\r\n";
            strQry += "                    SET BREAK_TIME_OUT_MINUTES = @I_BREAK_TIME_MINUTES\r\n";
            strQry += "                   ,CLOCKED_TIME_OUT_MINUTES = @I_BREAK_TIME_MINUTES\r\n";
            strQry += "\r\n";
            strQry += "                    WHERE COMPANY_NO = @COMPANY_NO\r\n";
            strQry += "                    AND EMPLOYEE_NO = @EMPLOYEE_NO\r\n";
            strQry += "                    AND PAY_CATEGORY_NO = @PAY_CATEGORY_NO\r\n";
            strQry += "                    AND BREAK_DATE = @I_BREAK_DATE\r\n";
            strQry += "                    AND BREAK_SEQ = @BREAK_SEQ\r\n";
            strQry += "\r\n";
            strQry += "                    END\r\n";
            strQry += "\r\n";
            strQry += "                ELSE\r\n";
            strQry += "\r\n";
            strQry += "                    BEGIN\r\n";
            strQry += "\r\n";
            strQry += "                    -- Within 24 Hours\r\n";
            strQry += "                    IF @I_BREAK_TIME_MINUTES < @BREAK_TIME_IN_MINUTES\r\n";
            strQry += "\r\n";
            strQry += "                        BEGIN\r\n";
            strQry += "\r\n";
            strQry += "                        PRINT 'Within 24 Hours'\r\n";
            strQry += "\r\n";
            strQry += "                        --Clock Out Yesterday (Midnight)\r\n";
            strQry += "                        UPDATE EMPLOYEE_SALARY_BREAK_CURRENT\r\n";
            strQry += "                        SET BREAK_TIME_OUT_MINUTES = 1440\r\n";
            strQry += "\r\n";
            strQry += "                        WHERE COMPANY_NO = @COMPANY_NO\r\n";
            strQry += "                        AND EMPLOYEE_NO = @EMPLOYEE_NO\r\n";
            strQry += "                        AND PAY_CATEGORY_NO = @PAY_CATEGORY_NO\r\n";
            strQry += "                        AND BREAK_DATE = @BREAK_DATE\r\n";
            strQry += "                        AND BREAK_SEQ = @BREAK_SEQ\r\n";
            strQry += "\r\n";
            strQry += "                        --Clock In 0 Hours\r\n";
            strQry += "                        INSERT INTO EMPLOYEE_SALARY_BREAK_CURRENT\r\n";
            strQry += "                       (COMPANY_NO\r\n";
            strQry += "                       ,EMPLOYEE_NO\r\n";
            strQry += "                       ,PAY_CATEGORY_NO\r\n";
            strQry += "                       ,BREAK_DATE\r\n";
            strQry += "                       ,BREAK_SEQ\r\n";
            strQry += "                       ,BREAK_TIME_IN_MINUTES\r\n";
            strQry += "                       ,BREAK_TIME_OUT_MINUTES\r\n";
            strQry += "                       ,CLOCKED_TIME_OUT_MINUTES)\r\n";
            strQry += "\r\n";
            strQry += "                        SELECT\r\n";
            strQry += "                        @COMPANY_NO\r\n";
            strQry += "                       ,@EMPLOYEE_NO\r\n";
            strQry += "                       ,@PAY_CATEGORY_NO\r\n";
            strQry += "                       ,@I_BREAK_DATE\r\n";
            strQry += "                       ,ISNULL(MAX(ETC.BREAK_SEQ),0) + 1\r\n";
            strQry += "                       ,0\r\n";
            strQry += "                       ,@I_BREAK_TIME_MINUTES\r\n";
            strQry += "                       ,@I_BREAK_TIME_MINUTES\r\n";
            strQry += "\r\n";
            strQry += "                        FROM EMPLOYEE_SALARY_BREAK_CURRENT ETC\r\n";
            strQry += "\r\n";
            strQry += "                        WHERE ETC.COMPANY_NO = @COMPANY_NO\r\n";
            strQry += "                        AND ETC.EMPLOYEE_NO = @EMPLOYEE_NO\r\n";
            strQry += "                        AND ETC.PAY_CATEGORY_NO = @PAY_CATEGORY_NO\r\n";
            strQry += "                        AND ETC.BREAK_DATE = @I_BREAK_DATE\r\n";
            strQry += "\r\n";
            strQry += "                        END\r\n";
            strQry += "\r\n";
            strQry += "                    ELSE\r\n";
            strQry += "\r\n";
            strQry += "                        BEGIN\r\n";
            strQry += "\r\n";
            strQry += "                        PRINT 'NOT Within 24 Hours'\r\n";
            strQry += "\r\n";
            strQry += "                        INSERT INTO EMPLOYEE_SALARY_BREAK_CURRENT\r\n";
            strQry += "                       (COMPANY_NO\r\n";
            strQry += "                       ,EMPLOYEE_NO\r\n";
            strQry += "                       ,PAY_CATEGORY_NO\r\n";
            strQry += "                       ,BREAK_DATE\r\n";
            strQry += "                       ,BREAK_SEQ\r\n";
            strQry += "                       ,BREAK_TIME_OUT_MINUTES\r\n";
            strQry += "                       ,CLOCKED_TIME_OUT_MINUTES)\r\n";
            strQry += "\r\n";
            strQry += "                        SELECT\r\n";
            strQry += "                        @COMPANY_NO\r\n";
            strQry += "                       ,@EMPLOYEE_NO\r\n";
            strQry += "                       ,@PAY_CATEGORY_NO\r\n";
            strQry += "                       ,@I_BREAK_DATE\r\n";
            strQry += "                       ,ISNULL(MAX(ETC.BREAK_SEQ),0) + 1\r\n";
            strQry += "                       ,@I_BREAK_TIME_MINUTES\r\n";
            strQry += "                       ,@I_BREAK_TIME_MINUTES\r\n";
            strQry += "\r\n";
            strQry += "                        FROM EMPLOYEE_SALARY_BREAK_CURRENT ETC\r\n";
            strQry += "\r\n";
            strQry += "                        WHERE ETC.COMPANY_NO = @COMPANY_NO\r\n";
            strQry += "                        AND ETC.EMPLOYEE_NO = @EMPLOYEE_NO\r\n";
            strQry += "                        AND ETC.PAY_CATEGORY_NO = @PAY_CATEGORY_NO\r\n";
            strQry += "                        AND ETC.BREAK_DATE = @I_BREAK_DATE\r\n";
            strQry += "\r\n";
            strQry += "                        END\r\n";
            strQry += "\r\n";
            strQry += "                    END\r\n";
            strQry += "\r\n";
            strQry += "                END\r\n";
            strQry += "\r\n";
            strQry += "            END\r\n";
            strQry += "\r\n";
            strQry += "        ELSE\r\n";
            strQry += "\r\n";
            strQry += "            BEGIN\r\n";
            strQry += "\r\n";
            strQry += "            --TIME ATTENDANCE\r\n";
            strQry += "            SELECT\r\n";
            strQry += "            @COMPANY_NO = I.COMPANY_NO\r\n";
            strQry += "           ,@EMPLOYEE_NO = I.EMPLOYEE_NO\r\n";
            strQry += "           ,@PAY_CATEGORY_NO = I.PAY_CATEGORY_NO\r\n";
            strQry += "           ,@I_BREAK_DATE = I.BREAK_DATE\r\n";
            strQry += "           ,@BREAK_DATE = ETC.BREAK_DATE\r\n";
            strQry += "           ,@I_BREAK_TIME_MINUTES = I.BREAK_TIME_MINUTES\r\n";
            strQry += "           ,@BREAK_TIME_IN_MINUTES = ETC.BREAK_TIME_IN_MINUTES\r\n";
            strQry += "           ,@BREAK_TIME_OUT_MINUTES = ETC.BREAK_TIME_OUT_MINUTES\r\n";
            strQry += "           ,@BREAK_SEQ = ISNULL(ETC.BREAK_SEQ,0)\r\n";
            strQry += "\r\n";
            strQry += "            FROM INSERTED I\r\n";
            strQry += "\r\n";
            strQry += "            LEFT JOIN EMPLOYEE_TIME_ATTEND_BREAK_CURRENT ETC\r\n";
            strQry += "            ON I.COMPANY_NO = ETC.COMPANY_NO\r\n";
            strQry += "            AND I.EMPLOYEE_NO = ETC.EMPLOYEE_NO\r\n";
            strQry += "            AND I.PAY_CATEGORY_NO = ETC.PAY_CATEGORY_NO\r\n";
            strQry += "            AND CONVERT(CHAR(8),ETC.BREAK_DATE,112) + CONVERT(CHAR(4),ISNULL(ETC.BREAK_SEQ,0)) =\r\n";
            strQry += "            --GET Only 1 Row\r\n";
            strQry += "\r\n";
            strQry += "           (SELECT MAX(CONVERT(CHAR(8),ETC.BREAK_DATE,112) + CONVERT(CHAR(4),ISNULL(ETC.BREAK_SEQ,0)))\r\n";
            strQry += "\r\n";
            strQry += "            FROM INSERTED I\r\n";
            strQry += "\r\n";
            strQry += "            INNER JOIN EMPLOYEE_TIME_ATTEND_BREAK_CURRENT ETC\r\n";
            strQry += "            ON I.COMPANY_NO = ETC.COMPANY_NO\r\n";
            strQry += "            AND I.EMPLOYEE_NO = ETC.EMPLOYEE_NO\r\n";
            strQry += "            AND I.PAY_CATEGORY_NO = ETC.PAY_CATEGORY_NO\r\n";
            strQry += "            --Go Back 1 Day\r\n";
            strQry += "            AND ETC.BREAK_DATE >= DATEADD(DAY,-1,I.BREAK_DATE))\r\n";
            strQry += "\r\n";
            strQry += "            PRINT '@I_BREAK_DATE = ' + convert(varchar,@I_BREAK_DATE)\r\n";
            strQry += "            PRINT '@I_BREAK_TIME_MINUTES = ' + convert(varchar,@I_BREAK_TIME_MINUTES)\r\n";
            strQry += "            PRINT '@BREAK_DATE = ' + convert(varchar,@BREAK_DATE)\r\n";
            strQry += "            PRINT '@BREAK_TIME_IN_MINUTES = ' + convert(varchar,@BREAK_TIME_IN_MINUTES)\r\n";
            strQry += "\r\n";
            strQry += "            -- Complete TimeSheet OR No Timesheets at All\r\n";
            strQry += "            IF @BREAK_TIME_OUT_MINUTES IS NOT NULL\r\n";
            strQry += "            OR @BREAK_DATE IS NULL\r\n";
            strQry += "\r\n";
            strQry += "                BEGIN\r\n";
            strQry += "\r\n";
            strQry += "                PRINT 'Complete TimeSheet OR No Timesheets at All'\r\n";
            strQry += "                PRINT '@BREAK_SEQ = ' + convert(varchar,@BREAK_SEQ)\r\n";
            strQry += "\r\n";
            strQry += "                INSERT INTO EMPLOYEE_TIME_ATTEND_BREAK_CURRENT\r\n";
            strQry += "               (COMPANY_NO\r\n";
            strQry += "               ,EMPLOYEE_NO\r\n";
            strQry += "               ,PAY_CATEGORY_NO\r\n";
            strQry += "               ,BREAK_DATE\r\n";
            strQry += "               ,BREAK_SEQ\r\n";
            strQry += "               ,BREAK_TIME_OUT_MINUTES\r\n";
            strQry += "               ,CLOCKED_TIME_OUT_MINUTES)\r\n";
            strQry += "\r\n";
            strQry += "                SELECT\r\n";
            strQry += "                I.COMPANY_NO\r\n";
            strQry += "               ,I.EMPLOYEE_NO\r\n";
            strQry += "               ,I.PAY_CATEGORY_NO\r\n";
            strQry += "               ,I.BREAK_DATE\r\n";
            strQry += "               ,ISNULL(MAX(ETC.BREAK_SEQ),0) + 1\r\n";
            strQry += "               ,I.BREAK_TIME_MINUTES\r\n";
            strQry += "               ,I.BREAK_TIME_MINUTES\r\n";
            strQry += "\r\n";
            strQry += "                FROM INSERTED I\r\n";
            strQry += "\r\n";
            strQry += "                LEFT JOIN EMPLOYEE_TIME_ATTEND_BREAK_CURRENT ETC\r\n";
            strQry += "                ON I.COMPANY_NO = ETC.COMPANY_NO\r\n";
            strQry += "                AND I.EMPLOYEE_NO = ETC.EMPLOYEE_NO\r\n";
            strQry += "                AND I.PAY_CATEGORY_NO = ETC.PAY_CATEGORY_NO\r\n";
            strQry += "                AND I.BREAK_DATE = ETC.BREAK_DATE\r\n";
            strQry += "\r\n";
            strQry += "                GROUP BY\r\n";
            strQry += "                I.COMPANY_NO\r\n";
            strQry += "               ,I.EMPLOYEE_NO\r\n";
            strQry += "               ,I.PAY_CATEGORY_NO\r\n";
            strQry += "               ,I.BREAK_DATE\r\n";
            strQry += "               ,I.BREAK_TIME_MINUTES\r\n";
            strQry += "\r\n";
            strQry += "                END\r\n";
            strQry += "\r\n";
            strQry += "            ELSE\r\n";
            strQry += "\r\n";
            strQry += "                BEGIN\r\n";
            strQry += "\r\n";
            strQry += "                -- IF today\r\n";
            strQry += "                IF CONVERT(CHAR(8),@BREAK_DATE,112) = CONVERT(CHAR(8),@I_BREAK_DATE,112)\r\n";
            strQry += "\r\n";
            strQry += "                    BEGIN\r\n";
            strQry += "\r\n";
            strQry += "                    PRINT 'Update - Today'\r\n";
            strQry += "\r\n";
            strQry += "                    UPDATE EMPLOYEE_TIME_ATTEND_BREAK_CURRENT\r\n";
            strQry += "                    SET BREAK_TIME_OUT_MINUTES = @I_BREAK_TIME_MINUTES\r\n";
            strQry += "                   ,CLOCKED_TIME_OUT_MINUTES = @I_BREAK_TIME_MINUTES\r\n";
            strQry += "\r\n";
            strQry += "                    WHERE COMPANY_NO = @COMPANY_NO\r\n";
            strQry += "                    AND EMPLOYEE_NO = @EMPLOYEE_NO\r\n";
            strQry += "                    AND PAY_CATEGORY_NO = @PAY_CATEGORY_NO\r\n";
            strQry += "                    AND BREAK_DATE = @I_BREAK_DATE\r\n";
            strQry += "                    AND BREAK_SEQ = @BREAK_SEQ\r\n";
            strQry += "\r\n";
            strQry += "                    END\r\n";
            strQry += "\r\n";
            strQry += "                ELSE\r\n";
            strQry += "\r\n";
            strQry += "                    BEGIN\r\n";
            strQry += "\r\n";
            strQry += "                    -- Within 24 Hours\r\n";
            strQry += "                    IF @I_BREAK_TIME_MINUTES < @BREAK_TIME_IN_MINUTES\r\n";
            strQry += "\r\n";
            strQry += "                        BEGIN\r\n";
            strQry += "\r\n";
            strQry += "                        PRINT 'Within 24 Hours'\r\n";
            strQry += "\r\n";
            strQry += "                        --Clock Out Yesterday (Midnight)\r\n";
            strQry += "                        UPDATE EMPLOYEE_TIME_ATTEND_BREAK_CURRENT\r\n";
            strQry += "                        SET BREAK_TIME_OUT_MINUTES = 1440\r\n";
            strQry += "\r\n";
            strQry += "                        WHERE COMPANY_NO = @COMPANY_NO\r\n";
            strQry += "                        AND EMPLOYEE_NO = @EMPLOYEE_NO\r\n";
            strQry += "                        AND PAY_CATEGORY_NO = @PAY_CATEGORY_NO\r\n";
            strQry += "                        AND BREAK_DATE = @BREAK_DATE\r\n";
            strQry += "                        AND BREAK_SEQ = @BREAK_SEQ\r\n";
            strQry += "\r\n";
            strQry += "                        --Clock In 0 Hours\r\n";
            strQry += "                        INSERT INTO EMPLOYEE_TIME_ATTEND_BREAK_CURRENT\r\n";
            strQry += "                       (COMPANY_NO\r\n";
            strQry += "                       ,EMPLOYEE_NO\r\n";
            strQry += "                       ,PAY_CATEGORY_NO\r\n";
            strQry += "                       ,BREAK_DATE\r\n";
            strQry += "                       ,BREAK_SEQ\r\n";
            strQry += "                       ,BREAK_TIME_IN_MINUTES\r\n";
            strQry += "                       ,BREAK_TIME_OUT_MINUTES\r\n";
            strQry += "                       ,CLOCKED_TIME_OUT_MINUTES)\r\n";
            strQry += "\r\n";
            strQry += "                        SELECT\r\n";
            strQry += "                        @COMPANY_NO\r\n";
            strQry += "                       ,@EMPLOYEE_NO\r\n";
            strQry += "                       ,@PAY_CATEGORY_NO\r\n";
            strQry += "                       ,@I_BREAK_DATE\r\n";
            strQry += "                       ,ISNULL(MAX(ETC.BREAK_SEQ),0) + 1\r\n";
            strQry += "                       ,0\r\n";
            strQry += "                       ,@I_BREAK_TIME_MINUTES\r\n";
            strQry += "                       ,@I_BREAK_TIME_MINUTES\r\n";
            strQry += "\r\n";
            strQry += "                        FROM EMPLOYEE_TIME_ATTEND_BREAK_CURRENT ETC\r\n";
            strQry += "\r\n";
            strQry += "                        WHERE ETC.COMPANY_NO = @COMPANY_NO\r\n";
            strQry += "                        AND ETC.EMPLOYEE_NO = @EMPLOYEE_NO\r\n";
            strQry += "                        AND ETC.PAY_CATEGORY_NO = @PAY_CATEGORY_NO\r\n";
            strQry += "                        AND ETC.BREAK_DATE = @I_BREAK_DATE\r\n";
            strQry += "\r\n";
            strQry += "                        END\r\n";
            strQry += "\r\n";
            strQry += "                    ELSE\r\n";
            strQry += "\r\n";
            strQry += "                        BEGIN\r\n";
            strQry += "\r\n";
            strQry += "                        PRINT 'NOT Within 24 Hours'\r\n";
            strQry += "\r\n";
            strQry += "                        INSERT INTO EMPLOYEE_TIME_ATTEND_BREAK_CURRENT\r\n";
            strQry += "                       (COMPANY_NO\r\n";
            strQry += "                       ,EMPLOYEE_NO\r\n";
            strQry += "                       ,PAY_CATEGORY_NO\r\n";
            strQry += "                       ,BREAK_DATE\r\n";
            strQry += "                       ,BREAK_SEQ\r\n";
            strQry += "                       ,BREAK_TIME_OUT_MINUTES\r\n";
            strQry += "                       ,CLOCKED_TIME_OUT_MINUTES)\r\n";
            strQry += "\r\n";
            strQry += "                        SELECT\r\n";
            strQry += "                        @COMPANY_NO\r\n";
            strQry += "                       ,@EMPLOYEE_NO\r\n";
            strQry += "                       ,@PAY_CATEGORY_NO\r\n";
            strQry += "                       ,@I_BREAK_DATE\r\n";
            strQry += "                       ,ISNULL(MAX(ETC.BREAK_SEQ),0) + 1\r\n";
            strQry += "                       ,@I_BREAK_TIME_MINUTES\r\n";
            strQry += "                       ,@I_BREAK_TIME_MINUTES\r\n";
            strQry += "\r\n";
            strQry += "                        FROM EMPLOYEE_TIME_ATTEND_BREAK_CURRENT ETC\r\n";
            strQry += "\r\n";
            strQry += "                        WHERE ETC.COMPANY_NO = @COMPANY_NO\r\n";
            strQry += "                        AND ETC.EMPLOYEE_NO = @EMPLOYEE_NO\r\n";
            strQry += "                        AND ETC.PAY_CATEGORY_NO = @PAY_CATEGORY_NO\r\n";
            strQry += "                        AND ETC.BREAK_DATE = @I_BREAK_DATE\r\n";
            strQry += "\r\n";
            strQry += "                        END\r\n";
            strQry += "\r\n";
            strQry += "                    END\r\n";
            strQry += "\r\n";
            strQry += "                END\r\n";
            strQry += "\r\n";
            strQry += "            END\r\n";
            strQry += "\r\n";
            strQry += "        END\r\n";
            strQry += "\r\n";
            strQry += "    END\r\n";

            return strQry;
        }
    }
}
