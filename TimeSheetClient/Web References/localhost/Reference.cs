//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace InteractPayrollClient.localhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="busTimeSheetSoap", Namespace="http://tempuri.org/")]
    public partial class busTimeSheet : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback Get_Form_RecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Update_RecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Delete_RecordsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public busTimeSheet() {
            this.Url = global::InteractPayrollClient.Properties.Settings.Default.TimeSheet_localhost_busTimeSheet;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event Get_Form_RecordsCompletedEventHandler Get_Form_RecordsCompleted;
        
        /// <remarks/>
        public event Update_RecordsCompletedEventHandler Update_RecordsCompleted;
        
        /// <remarks/>
        public event Delete_RecordsCompletedEventHandler Delete_RecordsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Form_Records", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Get_Form_Records(int parintCompanyNo, string parstrMenuId, string parstrCurrentUserAccess, long parint64CurrentUserNo) {
            object[] results = this.Invoke("Get_Form_Records", new object[] {
                        parintCompanyNo,
                        parstrMenuId,
                        parstrCurrentUserAccess,
                        parint64CurrentUserNo});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGet_Form_Records(int parintCompanyNo, string parstrMenuId, string parstrCurrentUserAccess, long parint64CurrentUserNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Get_Form_Records", new object[] {
                        parintCompanyNo,
                        parstrMenuId,
                        parstrCurrentUserAccess,
                        parint64CurrentUserNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndGet_Form_Records(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void Get_Form_RecordsAsync(int parintCompanyNo, string parstrMenuId, string parstrCurrentUserAccess, long parint64CurrentUserNo) {
            this.Get_Form_RecordsAsync(parintCompanyNo, parstrMenuId, parstrCurrentUserAccess, parint64CurrentUserNo, null);
        }
        
        /// <remarks/>
        public void Get_Form_RecordsAsync(int parintCompanyNo, string parstrMenuId, string parstrCurrentUserAccess, long parint64CurrentUserNo, object userState) {
            if ((this.Get_Form_RecordsOperationCompleted == null)) {
                this.Get_Form_RecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Form_RecordsOperationCompleted);
            }
            this.InvokeAsync("Get_Form_Records", new object[] {
                        parintCompanyNo,
                        parstrMenuId,
                        parstrCurrentUserAccess,
                        parint64CurrentUserNo}, this.Get_Form_RecordsOperationCompleted, userState);
        }
        
        private void OnGet_Form_RecordsOperationCompleted(object arg) {
            if ((this.Get_Form_RecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Form_RecordsCompleted(this, new Get_Form_RecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Update_Records", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Update_Records([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] parbyteDataSet) {
            this.Invoke("Update_Records", new object[] {
                        parbyteDataSet});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdate_Records(byte[] parbyteDataSet, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Update_Records", new object[] {
                        parbyteDataSet}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUpdate_Records(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void Update_RecordsAsync(byte[] parbyteDataSet) {
            this.Update_RecordsAsync(parbyteDataSet, null);
        }
        
        /// <remarks/>
        public void Update_RecordsAsync(byte[] parbyteDataSet, object userState) {
            if ((this.Update_RecordsOperationCompleted == null)) {
                this.Update_RecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate_RecordsOperationCompleted);
            }
            this.InvokeAsync("Update_Records", new object[] {
                        parbyteDataSet}, this.Update_RecordsOperationCompleted, userState);
        }
        
        private void OnUpdate_RecordsOperationCompleted(object arg) {
            if ((this.Update_RecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update_RecordsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Delete_Records", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Delete_Records(int parintCompanyNo, int parintPayCategoryNo, bool parblnPayCategoryDateOpen, System.DateTime parPayPeriodDate) {
            this.Invoke("Delete_Records", new object[] {
                        parintCompanyNo,
                        parintPayCategoryNo,
                        parblnPayCategoryDateOpen,
                        parPayPeriodDate});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDelete_Records(int parintCompanyNo, int parintPayCategoryNo, bool parblnPayCategoryDateOpen, System.DateTime parPayPeriodDate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Delete_Records", new object[] {
                        parintCompanyNo,
                        parintPayCategoryNo,
                        parblnPayCategoryDateOpen,
                        parPayPeriodDate}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDelete_Records(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void Delete_RecordsAsync(int parintCompanyNo, int parintPayCategoryNo, bool parblnPayCategoryDateOpen, System.DateTime parPayPeriodDate) {
            this.Delete_RecordsAsync(parintCompanyNo, parintPayCategoryNo, parblnPayCategoryDateOpen, parPayPeriodDate, null);
        }
        
        /// <remarks/>
        public void Delete_RecordsAsync(int parintCompanyNo, int parintPayCategoryNo, bool parblnPayCategoryDateOpen, System.DateTime parPayPeriodDate, object userState) {
            if ((this.Delete_RecordsOperationCompleted == null)) {
                this.Delete_RecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelete_RecordsOperationCompleted);
            }
            this.InvokeAsync("Delete_Records", new object[] {
                        parintCompanyNo,
                        parintPayCategoryNo,
                        parblnPayCategoryDateOpen,
                        parPayPeriodDate}, this.Delete_RecordsOperationCompleted, userState);
        }
        
        private void OnDelete_RecordsOperationCompleted(object arg) {
            if ((this.Delete_RecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delete_RecordsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void Get_Form_RecordsCompletedEventHandler(object sender, Get_Form_RecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Form_RecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Form_RecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void Update_RecordsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void Delete_RecordsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591